<?xml version="1.0" encoding="utf-8"?>
<examples xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" lang="en_US" xsi:noNamespaceSchemaLocation="../Manuals/xml/xsd/hdevelop_example_list.xsd">
   <example>
      <name>1394iidc.hdev</name>
      <desc>Grab images from IIDC 1394 compliant cameras (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>1394iidc2.hdev</name>
      <desc>Grab images using a 1394IIDC-2 interface (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>1394iidc2_2cameras.hdev</name>
      <desc>Grab images using two 1394IIDC-2 interfaces</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>1394iidc2_camera_types.hdev</name>
      <desc>Query and use all supported camera types of a 1394IIDC-2 interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>1394iidc2_crop.hdev</name>
      <desc>Grab images using a 1394IIDC-2 interface (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>1394iidc2_parameters.hdev</name>
      <desc>Grab images using a 1394IIDC-2 interface (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>1394iidc2_register_access.hdev</name>
      <desc>Grab images using a 1394IIDC-2 interface (use of direct register access)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>1394iidc2_simple.hdev</name>
      <desc>Use a 1394IIDC-2 interface (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>1394iidc_2cameras.hdev</name>
      <desc>Grab images from two IIDC 1394 compliant cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>1394iidc_camera_types.hdev</name>
      <desc>Query and use all supported camera types of a IIDC 1394 compliant camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>tuple_strstr</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>1394iidc_crop.hdev</name>
      <desc>Grab images from IIDC 1394 compliant cameras (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>1394iidc_format7.hdev</name>
      <desc>Grab images from IIDC 1394 compliant cameras (using image format 7 with different frame rates)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>disp_rectangle1</operator>
      <operator>draw_rectangle1</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>tuple_round</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>1394iidc_parameters.hdev</name>
      <desc>Grab images from IIDC 1394 compliant cameras (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>1394iidc_simple.hdev</name>
      <desc>Use a IIDC 1394 compliant camera (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>1394iidc_software_trigger.hdev</name>
      <desc>Grab images with software trigger from a IIDC 1394 compliant camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>25industrial.hdev</name>
      <desc>Read a bar code of type 2/5 industrial</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>25interleaved.hdev</name>
      <desc>Read a bar code of type 2/5 interleaved</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>2d_data_codes_arbitrary_distortions.hdev</name>
      <desc>Demonstrate distorted symbols of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>dev_close_inspect_ctrl</operator>
      <operator>dev_inspect_ctrl</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>read_image</operator>
      <operator>set_data_code_2d_param</operator>
      <operator>wait_seconds</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>2d_data_codes_data_access.hdev</name>
      <desc>Access intermediate results when trying to read symbols of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>dev_close_inspect_ctrl</operator>
      <operator>dev_inspect_ctrl</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>2d_data_codes_first_example.hdev</name>
      <desc>Read symbols of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>2d_data_codes_global_settings.hdev</name>
      <desc>Switch between standard and enhanced mode for reading symbols of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>count_seconds</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>2d_data_codes_manual_settings.hdev</name>
      <desc>Set parameters manually for reading symbols of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>count_seconds</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_contour_xld</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>2d_data_codes_minimize_module_gaps.hdev</name>
      <desc>Minimize large gaps in a symbol of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>gray_erosion_shape</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>2d_data_codes_minimize_noise.hdev</name>
      <desc>Minimize noise in a symbol of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>gray_opening_shape</operator>
      <operator>median_image</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>2d_data_codes_rectify_symbol.hdev</name>
      <desc>Rectify a slanted symbol of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.trafo.rectif</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>hom_vector_to_proj_hom_mat2d</operator>
      <operator>projective_trans_image</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>2d_data_codes_training.hdev</name>
      <desc>Train a 2D data code model for symbols of type ECC200</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>dev_close_inspect_ctrl</operator>
      <operator>dev_inspect_ctrl</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>3d_coordinates.hdev</name>
      <desc>Measure slanted object in world coordinates</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.calib</method>
      <method>method.visual</method>
      <method>method.blob</method>
      <method>method.functions</method>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.trafo.wcoord</method>
      <method>method.metrol</method>
      <method>method.tuple</method>
      <method>method.numeric</method>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>close_measure</operator>
      <operator>contour_to_world_plane_xld</operator>
      <operator>disp_circle</operator>
      <operator>disp_rectangle2</operator>
      <operator>edges_sub_pix</operator>
      <operator>erosion_circle</operator>
      <operator>fill_up</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>fit_ellipse_contour_xld</operator>
      <operator>gen_contour_region_xld</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>get_contour_xld</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>measure_pos</operator>
      <operator>reduce_domain</operator>
      <operator>regress_contours_xld</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>select_shape</operator>
      <operator>threshold</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>3d_information_for_selected_points.hdev</name>
      <desc>Calculate world coordinates for a point in a stereo image pair</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.roi</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.wcoord</method>
      <method>method.stereo</method>
      <method>method.visual</method>
      <operator>affine_trans_point_3d</operator>
      <operator>binocular_disparity</operator>
      <operator>caltab_points</operator>
      <operator>disparity_to_distance</operator>
      <operator>disparity_to_point_3d</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>get_grayval</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>hom_mat3d_rotate_local</operator>
      <operator>hom_mat3d_translate_local</operator>
      <operator>intersect_lines_of_sight</operator>
      <operator>map_image</operator>
      <operator>min_max_gray</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>vector_to_pose</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>3d_matching_clamps.hdev</name>
      <desc>Recognize 3D objects in images using a 3D DXF model</desc>
      <path>hdevelop/Applications/Position-Recognition-3D/</path>
      <industry>industry.machine</industry>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.object3d</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.match3d.shape</method>
      <method>method.visual</method>
      <method>method.poseestim</method>
      <operator>affine_trans_image</operator>
      <operator>affine_trans_point_3d</operator>
      <operator>axis_angle_to_quat</operator>
      <operator>break</operator>
      <operator>clear_object_model_3d</operator>
      <operator>clear_shape_model_3d</operator>
      <operator>clear_window</operator>
      <operator>close_window</operator>
      <operator>compose3</operator>
      <operator>convert_point_3d_cart_to_spher</operator>
      <operator>convert_point_3d_spher_to_cart</operator>
      <operator>copy_rectangle</operator>
      <operator>count_seconds</operator>
      <operator>create_pose</operator>
      <operator>create_shape_model_3d</operator>
      <operator>dev_set_preferences</operator>
      <operator>disp_image</operator>
      <operator>disp_rectangle1</operator>
      <operator>disp_region</operator>
      <operator>disp_xld</operator>
      <operator>find_shape_model_3d</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>gen_image_const</operator>
      <operator>gen_region_points</operator>
      <operator>get_draw</operator>
      <operator>get_line_style</operator>
      <operator>get_mposition</operator>
      <operator>get_object_model_3d_params</operator>
      <operator>get_region_contour</operator>
      <operator>get_shape_model_3d_params</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>open_window</operator>
      <operator>paint_xld</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>prepare_object_model_3d</operator>
      <operator>project_3d_point</operator>
      <operator>project_object_model_3d</operator>
      <operator>project_shape_model_3d</operator>
      <operator>quat_compose</operator>
      <operator>quat_normalize</operator>
      <operator>quat_to_hom_mat3d</operator>
      <operator>read_shape_model_3d</operator>
      <operator>set_line_style</operator>
      <operator>set_line_width</operator>
      <operator>set_part</operator>
      <operator>test_region_point</operator>
      <operator>tuple_atan2</operator>
      <operator>tuple_chr</operator>
      <operator>wait_seconds</operator>
      <operator>write_shape_model_3d</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>3d_position_of_circles.hdev</name>
      <desc>Determine the pose of circles in 3D from their perspective 2D projections</desc>
      <path>hdevelop/Applications/Position-Recognition-3D/</path>
      <industry>industry.general</industry>
      <industry>industry.auto</industry>
      <industry>industry.machine</industry>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.blob</method>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.numeric</method>
      <method>method.tuple</method>
      <method>method.functions</method>
      <method>method.poseestim</method>
      <operator>affine_trans_point_3d</operator>
      <operator>dev_display</operator>
      <operator>difference</operator>
      <operator>dilation_circle</operator>
      <operator>disp_rectangle1</operator>
      <operator>erosion_circle</operator>
      <operator>fit_ellipse_contour_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_circle_pose</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>reduce_domain</operator>
      <operator>select_contours_xld</operator>
      <operator>select_shape</operator>
      <operator>set_tposition</operator>
      <operator>threshold</operator>
      <operator>tuple_sort_index</operator>
      <operator>union1</operator>
      <operator>write_string</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>3d_position_of_rectangle.hdev</name>
      <desc>Estimate 3D pose of rectangular objects</desc>
      <path>hdevelop/Applications/Position-Recognition-3D/</path>
      <industry>industry.metal</industry>
      <industry>industry.machine</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.poseestim</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.geom</method>
      <method>method.visual</method>
      <method>method.trafo.wcoord</method>
      <operator>affine_trans_point_3d</operator>
      <operator>area_center</operator>
      <operator>close_contours_xld</operator>
      <operator>complement</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>difference</operator>
      <operator>dilation_circle</operator>
      <operator>dilation_rectangle1</operator>
      <operator>dyn_threshold</operator>
      <operator>erosion_circle</operator>
      <operator>erosion_rectangle1</operator>
      <operator>fill_up</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>get_rectangle_pose</operator>
      <operator>get_system</operator>
      <operator>if</operator>
      <operator>intersection</operator>
      <operator>intersection_ll</operator>
      <operator>mean_image</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>reduce_domain</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>select_shape</operator>
      <operator>set_system</operator>
      <operator>tuple_find</operator>
      <operator>tuple_gen_const</operator>
      <operator>union_adjacent_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>abs.hdev</name>
      <desc>Grab images from ABS USB 2.0 cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>sobel_amp</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>abs_crop.hdev</name>
      <desc>Grab images from ABS cameras (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>abs_do_parameter.hdev</name>
      <desc>Grab images from ABS cameras (trigger multiple cameras)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>abs_image.hdev</name>
      <desc>Calculate absolute pixel values of an image</desc>
      <path>hdevelop/Filters/Arithmetic/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>abs_image</operator>
      <operator>convert_image_type</operator>
      <operator>sub_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>abs_parameters.hdev</name>
      <desc>Grab images from ABS cameras (query current parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>abs_simple.hdev</name>
      <desc>Grab images from ABS cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>adapt_pattern.hdev</name>
      <desc>Apply online pattern matching using an adapting gray value template</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.acqu</method>
      <method>method.match.gray</method>
      <operator>adapt_template</operator>
      <operator>add_channels</operator>
      <operator>best_match</operator>
      <operator>clear_template</operator>
      <operator>close_framegrabber</operator>
      <operator>create_template</operator>
      <operator>draw_rectangle1</operator>
      <operator>fast_match_mg</operator>
      <operator>gen_rectangle1</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>adaption_ocv.hdev</name>
      <desc>Analyze the impact of illumination changes on reported character quality</desc>
      <path>hdevelop/Applications/Print-Inspection/</path>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.ocv</method>
      <method>method.filter.general</method>
      <operator>create_ocv_proj</operator>
      <operator>do_ocv_simple</operator>
      <operator>paint_region</operator>
      <operator>scale_image</operator>
      <operator>traind_ocv_proj</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>add_image.hdev</name>
      <desc>Add two images</desc>
      <path>hdevelop/Filters/Arithmetic/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>add_image</operator>
      <operator>crop_part</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>adjust_circle_matrix.hdev</name>
      <desc>Demonstrate how to use matrices</desc>
      <path>hdevelop/Matrix/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.numeric</method>
      <method>method.tuple</method>
      <operator>add_matrix</operator>
      <operator>add_matrix_mod</operator>
      <operator>clear_matrix</operator>
      <operator>create_matrix</operator>
      <operator>get_full_matrix</operator>
      <operator>get_grayval_interpolated</operator>
      <operator>invert_matrix</operator>
      <operator>mean_matrix</operator>
      <operator>mult_element_matrix</operator>
      <operator>mult_matrix</operator>
      <operator>pow_scalar_element_matrix</operator>
      <operator>scale_matrix</operator>
      <operator>set_value_matrix</operator>
      <operator>sqrt_matrix_mod</operator>
      <operator>sub_matrix</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>adjust_mosaic_images.hdev</name>
      <desc>Create blended spherical mosaic image from radiometrically adjusted images</desc>
      <path>hdevelop/Tools/Mosaicking/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.match.point</method>
      <method>method.filter.points</method>
      <method>method.mosaic</method>
      <method>method.filter.general</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.align</method>
      <operator>adjust_mosaic_images</operator>
      <operator>cam_mat_to_cam_par</operator>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>gen_radial_distortion_map</operator>
      <operator>gen_spherical_mosaic</operator>
      <operator>hom_mat2d_compose</operator>
      <operator>hom_mat2d_invert</operator>
      <operator>hom_mat2d_transpose</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>map_image</operator>
      <operator>points_foerstner</operator>
      <operator>proj_match_points_ransac</operator>
      <operator>read_image</operator>
      <operator>rgb1_to_gray</operator>
      <operator>stationary_camera_self_calibration</operator>
      <operator>tile_images_offset</operator>
      <newinversion>8.0.1</newinversion>
   </example>
   <example>
      <name>adlink.hdev</name>
      <desc>Use an ADLINK interface (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>adlink_parameters.hdev</name>
      <desc>Query parameter settings from an ADLINK interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>adlink_simple.hdev</name>
      <desc>Grab images from an ADLINK interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>affine_trans_region.hdev</name>
      <desc>Apply affine transformations to regions</desc>
      <path>hdevelop/Regions/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>affine_trans_region</operator>
      <operator>draw_region</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_scale</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>affine_transform_image.hdev</name>
      <desc>Apply affine transformations to an image</desc>
      <path>hdevelop/Filters/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <operator>affine_trans_image</operator>
      <operator>affine_trans_region</operator>
      <operator>dev_update_pc</operator>
      <operator>dev_update_time</operator>
      <operator>dev_update_var</operator>
      <operator>dev_update_window</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>opening_circle</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>affine_transform_image_size.hdev</name>
      <desc>Apply affine transformations to an image part</desc>
      <path>hdevelop/Filters/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <operator>affine_trans_image_size</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>align_measurements.hdev</name>
      <desc>Inspect individual razor blades using shape-based matching to align ROIs for the measure tool</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.visual</method>
      <method>method.roi</method>
      <method>method.match.shape</method>
      <method>method.metrol</method>
      <method>method.trafo.align</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_pixel</operator>
      <operator>affine_trans_region</operator>
      <operator>clear_shape_model</operator>
      <operator>close_measure</operator>
      <operator>create_shape_model</operator>
      <operator>disp_rectangle2</operator>
      <operator>find_shape_model</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>get_shape_model_contours</operator>
      <operator>inspect_shape_model</operator>
      <operator>measure_pairs</operator>
      <operator>move_region</operator>
      <operator>translate_measure</operator>
      <operator>union2</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>andor.hdev</name>
      <desc>Use an Andor camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>andor_parameters.hdev</name>
      <desc>Query parameter settings from an Andor camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>andor_simple.hdev</name>
      <desc>Grab images from an Andor camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>angio.hdev</name>
      <desc>Extract blood vessels and their diameters from an angiogram</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.health</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <method>method.numeric</method>
      <method>method.functions</method>
      <method>method.tuple</method>
      <operator>assign</operator>
      <operator>concat_obj</operator>
      <operator>count_obj</operator>
      <operator>gen_empty_obj</operator>
      <operator>get_contour_attrib_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>lines_gauss</operator>
      <operator>select_contours_xld</operator>
      <operator>select_obj</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>angle_ll.hdev</name>
      <desc>Calculate the angle between two lines</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>angle_ll</operator>
      <operator>disp_line</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>angle_lx.hdev</name>
      <desc>Calculate the angle between a line and the vertical axis</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>angle_lx</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>anisotropic_diffusion.hdev</name>
      <desc>Smooth an image using edge-preserving anisotropic diffusion</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>anisotropic_diffusion</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>area_center.hdev</name>
      <desc>Calculate area and center of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>area_center</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>area_center_gray.hdev</name>
      <desc>Analyze the accuracy of calculating the gray area and center of gravity</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>area_center</operator>
      <operator>area_center_gray</operator>
      <operator>gen_circle</operator>
      <operator>gen_image_const</operator>
      <operator>paint_region</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>area_holes.hdev</name>
      <desc>Calculate area of the holes of a region</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>area_holes</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>arithmetic.hdev</name>
      <desc>Perform operations on scalars, tuples and strings</desc>
      <path>hdevelop/Manuals/HDevelop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <method>method.tuple</method>
      <method>method.string</method>
      <operator>assign</operator>
   </example>
   <example>
      <name>assign.hdev</name>
      <desc>Assign values to variables and tuple elements</desc>
      <path>hdevelop/Control/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.tuple</method>
      <method>method.functions</method>
      <method>method.controlstruct</method>
      <method>method.numeric</method>
      <operator>assign</operator>
      <operator>insert</operator>
      <operator>endfor</operator>
      <operator>for</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>assign.hdev</name>
      <desc>Assign values</desc>
      <path>hdevelop/Manuals/HDevelop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <method>method.tuple</method>
      <method>method.functions</method>
      <operator>assign</operator>
      <operator>insert</operator>
   </example>
   <example>
      <name>atoms.hdev</name>
      <desc>Locate irregularities in an atomic grid structure</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>crop_rectangle1</operator>
      <operator>gauss_image</operator>
      <operator>select_shape</operator>
      <operator>watersheds</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>auto_threshold.hdev</name>
      <desc>Segment an image using an automatically determined threshold</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <method>method.funct1d</method>
      <operator>auto_threshold</operator>
      <operator>create_funct_1d_array</operator>
      <operator>funct_1d_to_pairs</operator>
      <operator>gen_region_histo</operator>
      <operator>gray_histo</operator>
      <operator>smooth_funct_1d_gauss</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>autobahn.hdev</name>
      <desc>Detect lane markers fast</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.transp</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.filter.edge</method>
      <method>method.roi</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <operator>clip_region</operator>
      <operator>dev_display</operator>
      <operator>dilation_rectangle1</operator>
      <operator>fill_up</operator>
      <operator>gen_grid_region</operator>
      <operator>get_system</operator>
      <operator>read_image</operator>
      <operator>reduce_domain</operator>
      <operator>set_system</operator>
      <operator>sobel_amp</operator>
      <operator>threshold</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>background_seg.hdev</name>
      <desc>Calculate connected background components for given foreground regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <method>method.segm</method>
      <method>method.regionproc</method>
      <operator>background_seg</operator>
      <operator>fill_up_shape</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>ball.hdev</name>
      <desc>Inspect ball bondings</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.visual</method>
      <method>method.roi</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.functions</method>
      <method>method.filter.general</method>
      <operator>connection</operator>
      <operator>disp_circle</operator>
      <operator>fill_up_shape</operator>
      <operator>opening_circle</operator>
      <operator>reduce_domain</operator>
      <operator>set_font</operator>
      <operator>set_tposition</operator>
      <operator>smallest_circle</operator>
      <operator>sort_region</operator>
      <operator>threshold</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>ball_seq.hdev</name>
      <desc>Inspect ball bondings (multiple images)</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.visual</method>
      <method>method.roi</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.functions</method>
      <method>method.filter.general</method>
      <operator>difference</operator>
      <operator>expand_gray</operator>
      <operator>fill_up_shape</operator>
      <operator>gen_empty_region</operator>
      <operator>min_max_gray</operator>
      <operator>opening_circle</operator>
      <operator>read_image</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape_std</operator>
      <operator>shape_trans</operator>
      <operator>smallest_circle</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>bandpass_image.hdev</name>
      <desc>Extract lines using bandpass filter</desc>
      <path>hdevelop/Filters/Lines/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>bandpass_image</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>barcode_autodiscrimination.hdev</name>
      <desc>Read bar codes using autodiscrimination</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_result</operator>
      <operator>get_param_info</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>barcode_orientation.hdev</name>
      <desc>Use the bar code parameter 'orientation'</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>dev_set_window_extents</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_result</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>rotate_image</operator>
      <operator>set_rgb</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>barcode_param_element_height_min.hdev</name>
      <desc>Use the bar code parameter 'element_height_min'</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>copy_image</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_bar_code_object</operator>
      <operator>get_bar_code_param</operator>
      <operator>get_rgb</operator>
      <operator>overpaint_region</operator>
      <operator>set_bar_code_param</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>barcode_param_max_diff_orient.hdev</name>
      <desc>Use the bar code parameter 'max_diff_orient'</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>binomial_filter</operator>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_object</operator>
      <operator>get_bar_code_param</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>8.0.1</newinversion>
   </example>
   <example>
      <name>barcode_param_meas_thresh_abs.hdev</name>
      <desc>Use the bar code parameter 'meas_thresh_abs'</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>find_bar_code</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>barcode_param_num_scanlines.hdev</name>
      <desc>Control the number of scanlines for the 1D bar code reader</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>find_bar_code</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>barcode_param_orientation.hdev</name>
      <desc>Use the bar code parameters 'orientation' and 'orientation_tol'</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_param</operator>
      <operator>get_bar_code_result</operator>
      <operator>get_rgb</operator>
      <operator>set_bar_code_param</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>barcode_param_scanning_control.hdev</name>
      <desc>Control the scanning behavior of the 1D bar code reader</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>find_bar_code</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>barcode_param_stop_after_result_num.hdev</name>
      <desc>Use the bar code parameter 'stop_after_result_num'</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>get_bar_code_object</operator>
      <operator>get_image_size</operator>
      <operator>set_bar_code_param</operator>
      <operator>set_bar_code_param_specific</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>barcode_status.hdev</name>
      <desc>Access status messages for the bar code reader</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>get_bar_code_result</operator>
      <operator>tuple_number</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>barcode_training.hdev</name>
      <desc>Train the parameters of a bar code reader</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_param</operator>
      <operator>get_bar_code_param_specific</operator>
      <operator>query_bar_code_params</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>barcode_typical_cases.hdev</name>
      <desc>Preprocess 1D bar codes that are difficult to read</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>create_bar_code_model</operator>
      <operator>emphasize</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_object</operator>
      <operator>gray_erosion_shape</operator>
      <operator>min_max_gray</operator>
      <operator>scale_image</operator>
      <operator>set_bar_code_param</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>9.0.1</newinversion>
   </example>
   <example>
      <name>best_match.hdev</name>
      <desc>Find the best match of a gray value template</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <industry>industry.auto</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <operator>best_match</operator>
      <operator>create_template</operator>
      <operator>disp_rectangle1</operator>
      <operator>fill_interlace</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>best_match_mg.hdev</name>
      <desc>Find the best match of a gray value template in a pyramid</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <method>method.trafo.geom</method>
      <operator>adapt_template</operator>
      <operator>add_noise_white</operator>
      <operator>affine_trans_image</operator>
      <operator>best_match_mg</operator>
      <operator>create_template</operator>
      <operator>gen_rectangle1</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_translate</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>best_match_rot_mg.hdev</name>
      <desc>Find the best match (with rotation) of a gray value template in a pyramid</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_image</operator>
      <operator>best_match_rot_mg</operator>
      <operator>clear_template</operator>
      <operator>create_template_rot</operator>
      <operator>disp_arrow</operator>
      <operator>fill_interlace</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>best_match_rot_mg_clip1.hdev</name>
      <desc>Find position and orientation of clips using a gray value template</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <method>method.roi</method>
      <method>method.visual</method>
      <operator>best_match_rot_mg</operator>
      <operator>clear_template</operator>
      <operator>create_template_rot</operator>
      <operator>difference</operator>
      <operator>disp_arrow</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_domain</operator>
      <operator>if</operator>
      <operator>union1</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>best_match_rot_mg_clip2.hdev</name>
      <desc>Find position and orientation of clips by matching only the tips</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <method>method.roi</method>
      <method>method.visual</method>
      <operator>best_match_rot_mg</operator>
      <operator>clear_template</operator>
      <operator>create_template_rot</operator>
      <operator>difference</operator>
      <operator>dilation_circle</operator>
      <operator>disp_arrow</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_domain</operator>
      <operator>union1</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>bin_threshold.hdev</name>
      <desc>Segment an image using an automatically determined threshold</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>bin_threshold</operator>
      <operator>gen_region_histo</operator>
      <operator>gray_histo</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>bin_threshold2.hdev</name>
      <desc>Segment a black-and-white image using an automatically determined threshold</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>bin_threshold</operator>
      <operator>gray_histo</operator>
      <operator>histo_to_thresh</operator>
      <operator>threshold</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>binocular_calibration.hdev</name>
      <desc>Calibrate stereo systems and rectify image pairs</desc>
      <path>hdevelop/Calibration/Binocular/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.stereo</method>
      <method>method.calib</method>
      <method>method.visual</method>
      <method>method.trafo.rectif</method>
      <operator>binocular_calibration</operator>
      <operator>caltab_points</operator>
      <operator>disp_caltab</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>map_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>binocular_disparity.hdev</name>
      <desc>Calculate disparities from epipolar image pairs</desc>
      <path>hdevelop/3D-Reconstruction/Binocular-Stereo/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.stereo</method>
      <operator>binocular_disparity</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>binocular_disparity_mg.hdev</name>
      <desc>Calculate disparities from epipolar image pairs with different levels of accuracy</desc>
      <path>hdevelop/3D-Reconstruction/Binocular-Stereo/</path>
      <industry>industry.general</industry>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.stereo</method>
      <operator>binocular_disparity_mg</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>map_image</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>binocular_disparity_segmentation.hdev</name>
      <desc>Demonstrate stereo results using an artificial image pair</desc>
      <path>hdevelop/3D-Reconstruction/Binocular-Stereo/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.stereo</method>
      <method>method.visual</method>
      <method>method.filter.general</method>
      <method>method.feat</method>
      <method>method.roi</method>
      <method>method.typeconv.ico</method>
      <method>method.trafo.geom</method>
      <operator>add_noise_white</operator>
      <operator>affine_trans_image</operator>
      <operator>affine_trans_region</operator>
      <operator>bin_threshold</operator>
      <operator>binocular_disparity</operator>
      <operator>convert_image_type</operator>
      <operator>gen_circle</operator>
      <operator>gen_image_const</operator>
      <operator>gen_image_proto</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>min_max_gray</operator>
      <operator>paint_gray</operator>
      <operator>scale_image</operator>
      <operator>smallest_circle</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>binocular_distance_mg.hdev</name>
      <desc>Calculate the depths of the components on a PCB with high accuracy</desc>
      <path>hdevelop/3D-Reconstruction/Binocular-Stereo/</path>
      <industry>industry.general</industry>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.stereo</method>
      <operator>binocular_distance_mg</operator>
      <operator>gen_binocular_rectification_map</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>binomial_filter.hdev</name>
      <desc>Compare the performance of binomial and Gaussian filters</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>binomial_filter</operator>
      <operator>count_seconds</operator>
      <operator>disp_rectangle1</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_system</operator>
      <operator>get_window_extents</operator>
      <operator>info_smooth</operator>
      <operator>set_font</operator>
      <operator>set_rgb</operator>
      <operator>smooth_image</operator>
      <operator>sub_image</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>bit.hdev</name>
      <desc>Perform bitwise operations on scalars</desc>
      <path>hdevelop/Manuals/HDevelop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <method>method.functions</method>
      <operator>assign</operator>
   </example>
   <example>
      <name>bitflow.hdev</name>
      <desc>Use a BitFlow frame grabber board (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>5.2.4</newinversion>
   </example>
   <example>
      <name>bitflow_2boards.hdev</name>
      <desc>Use two BitFlow frame grabber boards</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>5.2.4</newinversion>
   </example>
   <example>
      <name>bitflow_2ports.hdev</name>
      <desc>Use a BitFlow frame grabber board with two cameras and port switching</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>disp_image</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>set_part</operator>
      <newinversion>5.2.4</newinversion>
   </example>
   <example>
      <name>bitflow_2simultaneous.hdev</name>
      <desc>Grab simultaneously with a BitFlow frame grabber board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>5.2.4</newinversion>
   </example>
   <example>
      <name>bitflow_cont.hdev</name>
      <desc>Parameterize a BitFlow frame grabber board (continuous grabbing)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>5.2.4</newinversion>
   </example>
   <example>
      <name>bitflow_lut.hdev</name>
      <desc>Set a lookup table for a BitFlow frame grabber board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_lut</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_lut</operator>
      <newinversion>5.2.4</newinversion>
   </example>
   <example>
      <name>bitflow_simple.hdev</name>
      <desc>Use a BitFlow frame grabber board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>5.2.4</newinversion>
   </example>
   <example>
      <name>blended_mosaic.hdev</name>
      <desc>Create blended spherical and cube map mosaic images</desc>
      <path>hdevelop/Filters/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.match.point</method>
      <method>method.filter.points</method>
      <method>method.mosaic</method>
      <method>method.filter.general</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.align</method>
      <operator>cam_mat_to_cam_par</operator>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>gen_cube_map_mosaic</operator>
      <operator>gen_radial_distortion_map</operator>
      <operator>gen_spherical_mosaic</operator>
      <operator>hom_mat2d_compose</operator>
      <operator>points_foerstner</operator>
      <operator>proj_match_points_ransac</operator>
      <operator>stationary_camera_self_calibration</operator>
      <operator>tile_images_offset</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>board.hdev</name>
      <desc>Detect missing solder in images taken with different illumination direction</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <method>method.functions</method>
      <operator>area_center</operator>
      <operator>channels_to_image</operator>
      <operator>complement</operator>
      <operator>dev_display</operator>
      <operator>difference</operator>
      <operator>expand_gray</operator>
      <operator>expand_region</operator>
      <operator>fill_up</operator>
      <operator>get_system</operator>
      <operator>intersection</operator>
      <operator>mean_n</operator>
      <operator>read_image</operator>
      <operator>union1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>board_components.hdev</name>
      <desc>Extract board components by height using binocular stereo</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.calib</method>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.filter.general</method>
      <method>method.blob</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <operator>binocular_distance</operator>
      <operator>calibrate_cameras</operator>
      <operator>caltab_points</operator>
      <operator>complement</operator>
      <operator>create_calib_data</operator>
      <operator>disp_caltab</operator>
      <operator>disp_cross</operator>
      <operator>disp_image</operator>
      <operator>disp_line</operator>
      <operator>emphasize</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>gen_circle</operator>
      <operator>gen_image_surface_first_order</operator>
      <operator>get_calib_data</operator>
      <operator>get_domain</operator>
      <operator>intersection</operator>
      <operator>invert_image</operator>
      <operator>map_image</operator>
      <operator>moments_gray_plane</operator>
      <operator>scale_image</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <operator>sub_image</operator>
      <operator>union1</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>board_segmentation_uncalib.hdev</name>
      <desc>Extract board components by height using uncalibrated binocular stereo</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <operator>auto_threshold</operator>
      <operator>binocular_disparity</operator>
      <operator>compose3</operator>
      <operator>gen_binocular_proj_rectification</operator>
      <operator>gen_circle</operator>
      <operator>gen_image_surface_first_order</operator>
      <operator>get_domain</operator>
      <operator>intersection</operator>
      <operator>map_image</operator>
      <operator>match_fundamental_matrix_ransac</operator>
      <operator>moments_gray_plane</operator>
      <operator>opening</operator>
      <operator>points_harris</operator>
      <operator>proj_match_points_ransac</operator>
      <operator>projective_trans_image</operator>
      <operator>projective_trans_point_2d</operator>
      <operator>scale_image</operator>
      <operator>scale_image_max</operator>
      <operator>sub_image</operator>
      <operator>tuple_gen_const</operator>
      <operator>tuple_sort_index</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>bottle.hdev</name>
      <desc>Read numbers on a beer bottle</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.food</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <method>method.blob</method>
      <operator>area_center</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>connection</operator>
      <operator>dev_set_shape</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>fill_up</operator>
      <operator>fill_up_shape</operator>
      <operator>intersection</operator>
      <operator>opening_circle</operator>
      <operator>opening_rectangle1</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>select_shape</operator>
      <operator>sort_region</operator>
      <operator>threshold</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>bottlet.hdev</name>
      <desc>Train numbers on a beer bottle</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.food</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.error</method>
      <operator>append_ocr_trainf</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>delete_file</operator>
      <operator>dev_set_check</operator>
      <operator>dev_set_shape</operator>
      <operator>fill_up</operator>
      <operator>fill_up_shape</operator>
      <operator>sort_region</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>write_ocr_class_mlp</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>bundle_adjusted_mosaicking.hdev</name>
      <desc>Use bundle-adjusted mosaicking to merge partial images of a BGA into one large image</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.general</applarea>
      <method>method.tuple</method>
      <method>method.filter.points</method>
      <method>method.mosaic</method>
      <method>method.match.point</method>
      <method>method.visual</method>
      <operator>bundle_adjust_mosaic</operator>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_image</operator>
      <operator>gen_bundle_adjusted_mosaic</operator>
      <operator>gen_image_const</operator>
      <operator>paint_region</operator>
      <operator>points_harris</operator>
      <operator>proj_match_points_ransac</operator>
      <operator>tile_images_offset</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>calibrate_cameras.hdev</name>
      <desc>Calibrate a multi-view stereo setup</desc>
      <path>hdevelop/Calibration/Multi-View/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <operator>calibrate_cameras</operator>
      <operator>clear_calib_data</operator>
      <operator>clear_camera_setup_model</operator>
      <operator>create_calib_data</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>get_calib_data</operator>
      <operator>get_camera_setup_param</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <operator>set_camera_setup_param</operator>
      <operator>set_origin_pose</operator>
      <operator>write_camera_setup_model</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>calibrate_cameras_precision.hdev</name>
      <desc>Compare the camera models 'division' and 'polynomial'</desc>
      <path>hdevelop/Calibration/Multi-View/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <operator>calibrate_cameras</operator>
      <operator>clear_calib_data</operator>
      <operator>create_calib_data</operator>
      <operator>disp_caltab</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>get_calib_data</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>calibrate_sheet_of_light.hdev</name>
      <desc>Calibrate a sheet-of-light measurement system</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.calib</method>
      <method>method.laser</method>
      <operator>apply_sheet_of_light_calibration</operator>
      <operator>calibrate_cameras</operator>
      <operator>clear_calib_data</operator>
      <operator>clear_sheet_of_light_model</operator>
      <operator>create_calib_data</operator>
      <operator>create_matrix</operator>
      <operator>create_sheet_of_light_model</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>get_calib_data</operator>
      <operator>get_sheet_of_light_result</operator>
      <operator>get_value_matrix</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>measure_profile_sheet_of_light</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <operator>set_origin_pose</operator>
      <operator>set_sheet_of_light_param</operator>
      <operator>svd_matrix</operator>
      <operator>transpose_matrix</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>calibration_aimdpm_1_2006.hdev</name>
      <desc>Apply a reflectance calibration before inspecting the print quality of 2D data codes</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.acqu</method>
      <method>method.metrol</method>
      <method>method.calib.radiom</method>
      <method>method.geom</method>
      <method>method.tuple</method>
      <operator>clear_bar_code_model</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>close_measure</operator>
      <operator>continue</operator>
      <operator>create_bar_code_model</operator>
      <operator>erosion_rectangle1</operator>
      <operator>find_bar_code</operator>
      <operator>fwrite_string</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>get_bar_code_object</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>measure_pairs</operator>
      <operator>open_file</operator>
      <operator>open_framegrabber</operator>
      <operator>overpaint_region</operator>
      <operator>projection_pl</operator>
      <operator>set_bar_code_param</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>camera_calibration.hdev</name>
      <desc>Determine camera parameters using a special calibration plate</desc>
      <path>hdevelop/Calibration/Monocular/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.measure.2D</applarea>
      <method>method.calib</method>
      <method>method.io</method>
      <operator>disp_caltab</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>write_cam_par</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>camera_calibration_exterior.hdev</name>
      <desc>Measure positions on a caliper rule using camera calibration</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.measure.3D</applarea>
      <method>method.calib</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.tuple</method>
      <method>method.metrol</method>
      <method>method.roi</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.wcoord</method>
      <method>method.visual</method>
      <operator>affine_trans_point_3d</operator>
      <operator>break</operator>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>close_measure</operator>
      <operator>contour_to_world_plane_xld</operator>
      <operator>create_pose</operator>
      <operator>dev_close_inspect_ctrl</operator>
      <operator>disp_polygon</operator>
      <operator>distance_pp</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_image_to_world_plane_map</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>gen_region_polygon_filled</operator>
      <operator>get_contour_xld</operator>
      <operator>get_mbutton</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_rotate_local</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>hom_mat3d_translate_local</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>image_to_world_plane</operator>
      <operator>lines_gauss</operator>
      <operator>map_image</operator>
      <operator>measure_pairs</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>read_cam_par</operator>
      <operator>set_origin_pose</operator>
      <operator>smallest_rectangle2</operator>
      <operator>tuple_mean</operator>
      <operator>write_pose</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>camera_calibration_interior.hdev</name>
      <desc>Calibrate and save interior camera parameters</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.visual</method>
      <operator>calibrate_cameras</operator>
      <operator>clear_calib_data</operator>
      <operator>create_calib_data</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>get_calib_data</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <operator>write_cam_par</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>camera_calibration_multi_image.hdev</name>
      <desc>Calibrate the camera and measures positions on a caliper rule</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.calib</method>
      <method>method.visual</method>
      <method>method.metrol</method>
      <method>method.trafo.wcoord</method>
      <method>method.tuple</method>
      <operator>calibrate_cameras</operator>
      <operator>caltab_points</operator>
      <operator>clear_calib_data</operator>
      <operator>close_measure</operator>
      <operator>create_calib_data</operator>
      <operator>distance_pp</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>get_calib_data</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>measure_pairs</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <operator>set_origin_pose</operator>
      <operator>tuple_deviation</operator>
      <operator>tuple_mean</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cancel_draw_result.hdev</name>
      <desc>Enable user-defined actions when a draw operation is canceled</desc>
      <path>hdevelop/Graphics/Parameters/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.error</method>
      <method>method.visual</method>
      <operator>catch</operator>
      <operator>dev_set_preferences</operator>
      <operator>endtry</operator>
      <operator>get_system</operator>
      <operator>set_system</operator>
      <operator>throw</operator>
      <operator>try</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>cbm_bin_switch.hdev</name>
      <desc>Locate a switch and test its state using component-based matching</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.comp</method>
      <method>method.visual</method>
      <method>method.functions</method>
      <operator>clear_component_model</operator>
      <operator>clear_training_components</operator>
      <operator>create_trained_component_model</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>difference</operator>
      <operator>disp_polygon</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_component_model</operator>
      <operator>get_component_model_tree</operator>
      <operator>get_component_relations</operator>
      <operator>get_found_component_model</operator>
      <operator>get_mposition</operator>
      <operator>get_training_components</operator>
      <operator>if</operator>
      <operator>modify_component_relations</operator>
      <operator>train_model_components</operator>
      <operator>wait_seconds</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cbm_caliper.hdev</name>
      <desc>Measure the setting of a caliper using component-based matching in a perspectively distorted image</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.measure.3D</applarea>
      <method>method.match.comp</method>
      <method>method.visual</method>
      <method>method.calib</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.wcoord</method>
      <method>method.functions</method>
      <operator>affine_trans_point_3d</operator>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>clear_component_model</operator>
      <operator>clear_training_components</operator>
      <operator>create_trained_component_model</operator>
      <operator>dev_set_window_extents</operator>
      <operator>disp_circle</operator>
      <operator>find_caltab</operator>
      <operator>find_component_model</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_image_to_world_plane_map</operator>
      <operator>get_component_model_params</operator>
      <operator>get_component_model_tree</operator>
      <operator>get_component_relations</operator>
      <operator>get_found_component_model</operator>
      <operator>get_mposition</operator>
      <operator>get_shape_model_contours</operator>
      <operator>get_training_components</operator>
      <operator>if</operator>
      <operator>insert</operator>
      <operator>map_image</operator>
      <operator>modify_component_relations</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>read_image</operator>
      <operator>set_origin_pose</operator>
      <operator>train_model_components</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cbm_dip_switch.hdev</name>
      <desc>Locate dip switches and test their state using component-based matching</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.electr</industry>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.comp</method>
      <method>method.error</method>
      <method>method.functions</method>
      <method>method.visual</method>
      <operator>affine_trans_point_2d</operator>
      <operator>clear_component_model</operator>
      <operator>clear_training_components</operator>
      <operator>create_trained_component_model</operator>
      <operator>find_component_model</operator>
      <operator>gen_region_points</operator>
      <operator>get_component_model_tree</operator>
      <operator>get_component_relations</operator>
      <operator>get_found_component_model</operator>
      <operator>get_mposition</operator>
      <operator>get_training_components</operator>
      <operator>insert</operator>
      <operator>modify_component_relations</operator>
      <operator>read_image</operator>
      <operator>read_training_components</operator>
      <operator>train_model_components</operator>
      <operator>wait_seconds</operator>
      <operator>write_training_components</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cbm_label_simple.hdev</name>
      <desc>Locate a label using component-based matching</desc>
      <path>hdevelop/Matching/Component-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.comp</method>
      <operator>clear_component_model</operator>
      <operator>clear_training_components</operator>
      <operator>close_framegrabber</operator>
      <operator>create_trained_component_model</operator>
      <operator>find_component_model</operator>
      <operator>gen_initial_components</operator>
      <operator>get_found_component_model</operator>
      <operator>get_system</operator>
      <operator>grab_image</operator>
      <operator>modify_component_relations</operator>
      <operator>open_framegrabber</operator>
      <operator>set_system</operator>
      <operator>train_model_components</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cbm_modules_simple.hdev</name>
      <desc>Locate modules on a board using component-based matching</desc>
      <path>hdevelop/Matching/Component-Based/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.match.comp</method>
      <method>method.visual</method>
      <operator>clear_component_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_component_model</operator>
      <operator>find_component_model</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_found_component_model</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cbm_param_visual.hdev</name>
      <desc>Analyze the parameters of component-based matching</desc>
      <path>hdevelop/Matching/Component-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.comp</method>
      <method>method.visual</method>
      <method>method.error</method>
      <operator>clear_component_model</operator>
      <operator>clear_training_components</operator>
      <operator>close_framegrabber</operator>
      <operator>create_trained_component_model</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>find_component_model</operator>
      <operator>gen_initial_components</operator>
      <operator>get_component_model_tree</operator>
      <operator>get_component_relations</operator>
      <operator>get_found_component_model</operator>
      <operator>get_system</operator>
      <operator>get_training_components</operator>
      <operator>grab_image</operator>
      <operator>inspect_clustered_components</operator>
      <operator>modify_component_relations</operator>
      <operator>open_framegrabber</operator>
      <operator>read_training_components</operator>
      <operator>set_system</operator>
      <operator>train_model_components</operator>
      <operator>write_training_components</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cbm_pipe_wrench.hdev</name>
      <desc>Locate a pipe wrench that consists of two components</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.comp</method>
      <method>method.visual</method>
      <method>method.tuple</method>
      <method>method.numeric</method>
      <method>method.functions</method>
      <operator>affine_trans_point_2d</operator>
      <operator>clear_component_model</operator>
      <operator>clear_training_components</operator>
      <operator>create_trained_component_model</operator>
      <operator>find_component_model</operator>
      <operator>gen_circle</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_component_model_tree</operator>
      <operator>get_component_relations</operator>
      <operator>get_found_component_model</operator>
      <operator>get_mbutton</operator>
      <operator>get_mposition</operator>
      <operator>get_training_components</operator>
      <operator>read_image</operator>
      <operator>train_model_components</operator>
      <operator>vector_angle_to_rigid</operator>
      <operator>wait_seconds</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cbm_pipe_wrench_simple.hdev</name>
      <desc>Locate compound objects using component-based matching</desc>
      <path>hdevelop/Matching/Component-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.comp</method>
      <operator>clear_component_model</operator>
      <operator>clear_training_components</operator>
      <operator>close_framegrabber</operator>
      <operator>create_trained_component_model</operator>
      <operator>find_component_model</operator>
      <operator>get_found_component_model</operator>
      <operator>get_training_components</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>train_model_components</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cbm_sbm.hdev</name>
      <desc>Compare component-based matching to shape-based matching</desc>
      <path>hdevelop/Matching/Component-Based/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.comp</method>
      <method>method.visual</method>
      <operator>affine_trans_region</operator>
      <operator>clear_component_model</operator>
      <operator>clear_shape_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_component_model</operator>
      <operator>create_shape_model</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>find_component_model</operator>
      <operator>find_shape_models</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_found_component_model</operator>
      <operator>get_mbutton</operator>
      <operator>get_mposition</operator>
      <operator>grab_image</operator>
      <operator>inspect_shape_model</operator>
      <operator>open_framegrabber</operator>
      <operator>query_all_colors</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>cfa_to_rgb.hdev</name>
      <desc>Convert a Bayer image (color filter array) into an RGB image</desc>
      <path>hdevelop/Filters/Color/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <method>method.color</method>
      <operator>cfa_to_rgb</operator>
      <operator>decompose3</operator>
      <operator>gen_checker_region</operator>
      <operator>gen_grid_region</operator>
      <operator>gen_image_const</operator>
      <operator>move_region</operator>
      <operator>paint_gray</operator>
      <operator>sub_image</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>change_radial_distortion_contours_xld.hdev</name>
      <desc>Eliminate radial distortions from extracted contours</desc>
      <path>hdevelop/Calibration/Rectification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.trafo.rectif</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_contours_xld</operator>
      <operator>edges_sub_pix</operator>
      <operator>rgb1_to_gray</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>change_radial_distortion_image.hdev</name>
      <desc>Eliminate radial distortions from an image</desc>
      <path>hdevelop/Calibration/Rectification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.trafo.rectif</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_image</operator>
      <operator>rgb1_to_gray</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>change_radial_distortion_points.hdev</name>
      <desc>Correct a radially distorted image</desc>
      <path>hdevelop/Calibration/Rectification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.trafo.rectif</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_image</operator>
      <operator>change_radial_distortion_points</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>char_threshold.hdev</name>
      <desc>Perform a threshold segmentation for character extraction</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.segm</method>
      <operator>char_threshold</operator>
      <operator>gen_region_histo</operator>
      <operator>gray_histo</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>check_blister.hdev</name>
      <desc>Check content of automatically filled blisters</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.pharm</industry>
      <industry>industry.pack</industry>
      <applarea>applarea.alignment</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.blob</method>
      <method>method.feat</method>
      <method>method.trafo.align</method>
      <operator>affine_trans_image</operator>
      <operator>affine_trans_region</operator>
      <operator>area_center</operator>
      <operator>closing_rectangle1</operator>
      <operator>difference</operator>
      <operator>min_max_gray</operator>
      <operator>orientation_region</operator>
      <operator>select_shape</operator>
      <operator>shape_trans</operator>
      <operator>var_threshold</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>check_blister_mixed.hdev</name>
      <desc>Check content of manually filled blisters</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.pharm</industry>
      <industry>industry.pack</industry>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.blob</method>
      <method>method.classif</method>
      <operator>add_samples_image_class_gmm</operator>
      <operator>classify_image_class_gmm</operator>
      <operator>clear_class_gmm</operator>
      <operator>create_class_gmm</operator>
      <operator>hysteresis_threshold</operator>
      <operator>invert_image</operator>
      <operator>train_class_gmm</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>check_bottle_crate.hdev</name>
      <desc>Count bottles contained in crates</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.food</industry>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>difference</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>check_difference.hdev</name>
      <desc>Compare two images pixel by pixel</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.segm</method>
      <operator>add_noise_white</operator>
      <operator>affine_trans_image</operator>
      <operator>check_difference</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>scale_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>check_fish_stick_dimension.hdev</name>
      <desc>Measure the size of raw fish sticks</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.food</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.segm</method>
      <operator>select_shape</operator>
      <operator>select_shape_proto</operator>
      <operator>tuple_find</operator>
      <operator>tuple_remove</operator>
      <operator>write_string</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>check_hazelnut_wafers.hdev</name>
      <desc>Inspect quality of hazelnut wafers</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.food</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.feat</method>
      <operator>area_holes</operator>
      <operator>bin_threshold</operator>
      <operator>rectangularity</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>check_smd_tilt.hdev</name>
      <desc>Check if SMDs are tilted</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.metrol</method>
      <method>method.funct1d</method>
      <operator>create_funct_1d_pairs</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>measure_projection</operator>
      <operator>num_points_funct_1d</operator>
      <operator>var_threshold</operator>
      <operator>x_range_funct_1d</operator>
      <operator>y_range_funct_1d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>check_soft_cheese.hdev</name>
      <desc>Check content of soft cheese packages</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.food</industry>
      <industry>industry.pack</industry>
      <applarea>applarea.inspect.complete</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.shape</method>
      <method>method.geom</method>
      <method>method.tuple</method>
      <operator>angle_lx</operator>
      <operator>clear_shape_model</operator>
      <operator>create_shape_model</operator>
      <operator>find_shape_models</operator>
      <operator>gen_region_polygon_filled</operator>
      <operator>get_shape_model_contours</operator>
      <operator>rgb1_to_gray</operator>
      <operator>tuple_remove</operator>
      <operator>tuple_sort_index</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>circles.hdev</name>
      <desc>Fit circles into curved contour segments</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.machine</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.blob</method>
      <method>method.visual</method>
      <operator>boundary</operator>
      <operator>clip_region_rel</operator>
      <operator>dilation_circle</operator>
      <operator>edges_sub_pix</operator>
      <operator>fast_threshold</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>gen_circle_contour_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>reduce_domain</operator>
      <operator>segment_contours_xld</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>circular_barcode.hdev</name>
      <desc>Read a circular bar code printed on a CD</desc>
      <path>hdevelop/Applications/Bar-Codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.visual</method>
      <method>method.feat</method>
      <method>method.regionproc</method>
      <method>method.trafo.geom</method>
      <method>method.barcode</method>
      <method>method.morphol</method>
      <operator>bin_threshold</operator>
      <operator>clear_bar_code_model</operator>
      <operator>complement</operator>
      <operator>connection</operator>
      <operator>create_bar_code_model</operator>
      <operator>dev_display</operator>
      <operator>dev_set_window_extents</operator>
      <operator>find_bar_code</operator>
      <operator>invert_image</operator>
      <operator>polar_trans_image_ext</operator>
      <operator>polar_trans_region_inv</operator>
      <operator>select_shape</operator>
      <operator>set_bar_code_param</operator>
      <operator>shape_trans</operator>
      <operator>smallest_circle</operator>
      <operator>zoom_image_factor</operator>
      <operator>zoom_region</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>circularity.hdev</name>
      <desc>Calculate the circularity of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>circularity</operator>
      <operator>select_shape</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>class_2dim_sup.hdev</name>
      <desc>Segment a color image using two-dimensional pixel classification</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.blob</method>
      <operator>class_2dim_sup</operator>
      <operator>closing_circle</operator>
      <operator>decompose3</operator>
      <operator>draw_region</operator>
      <operator>histo_2dim</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>class_2dim_unsup.hdev</name>
      <desc>Segment a color image by clustering</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.filter.general</method>
      <method>method.blob</method>
      <operator>class_2dim_unsup</operator>
      <operator>decompose3</operator>
      <operator>median_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>class_ndim_box.hdev</name>
      <desc>Classify pixels using hyper-cuboids</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.blob</method>
      <operator>class_ndim_box</operator>
      <operator>close_class_box</operator>
      <operator>create_class_box</operator>
      <operator>learn_ndim_box</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>class_ndim_norm.hdev</name>
      <desc>Classify pixels using hyper-spheres</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.blob</method>
      <operator>class_ndim_norm</operator>
      <operator>gen_empty_region</operator>
      <operator>learn_ndim_norm</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>class_overlap.hdev</name>
      <desc>Use an MLP for classifying two-dimensional data</desc>
      <path>hdevelop/Classification/Neural-Nets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.visual</method>
      <method>method.classif</method>
      <operator>add_noise_white</operator>
      <operator>add_sample_class_mlp</operator>
      <operator>classify_class_mlp</operator>
      <operator>clear_class_mlp</operator>
      <operator>compose3</operator>
      <operator>create_class_mlp</operator>
      <operator>evaluate_class_mlp</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_image_const</operator>
      <operator>get_region_points</operator>
      <operator>get_sample_num_class_mlp</operator>
      <operator>intersection</operator>
      <operator>label_to_region</operator>
      <operator>set_grayval</operator>
      <operator>train_class_mlp</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>class_overlap_gmm.hdev</name>
      <desc>Use a GMM for classifying two-dimensional data</desc>
      <path>hdevelop/Classification/Gaussian-Mixture-Models/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.visual</method>
      <method>method.classif</method>
      <operator>add_noise_white</operator>
      <operator>add_sample_class_gmm</operator>
      <operator>classify_class_gmm</operator>
      <operator>clear_class_gmm</operator>
      <operator>compose3</operator>
      <operator>create_class_gmm</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_image_const</operator>
      <operator>get_region_points</operator>
      <operator>get_sample_num_class_gmm</operator>
      <operator>intersection</operator>
      <operator>label_to_region</operator>
      <operator>set_grayval</operator>
      <operator>train_class_gmm</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>class_overlap_svm.hdev</name>
      <desc>Use an SVM for classifying two-dimensional data</desc>
      <path>hdevelop/Classification/Support-Vector-Machines/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.visual</method>
      <method>method.classif</method>
      <operator>add_noise_white</operator>
      <operator>add_sample_class_svm</operator>
      <operator>classify_class_svm</operator>
      <operator>clear_class_svm</operator>
      <operator>create_class_svm</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_image_const</operator>
      <operator>get_region_points</operator>
      <operator>get_sample_num_class_svm</operator>
      <operator>intersection</operator>
      <operator>label_to_region</operator>
      <operator>set_grayval</operator>
      <operator>train_class_svm</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>classify_characters_ocr.hdev</name>
      <desc>Read the characters of a previously trained font</desc>
      <path>solution_guide/classification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.blob</method>
      <method>method.ocr</method>
      <method>method.classif</method>
      <operator>clear_ocr_class_svm</operator>
      <operator>do_ocr_multi_class_svm</operator>
      <operator>file_exists</operator>
      <operator>read_ocr_class_svm</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>classify_citrus_fruits.hdev</name>
      <desc>Distinguish oranges and lemons using GMM-based classification</desc>
      <path>solution_guide/classification/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.classif</method>
      <method>method.feat</method>
      <method>method.blob</method>
      <method>method.visual</method>
      <operator>add_sample_class_gmm</operator>
      <operator>classify_class_gmm</operator>
      <operator>clear_class_gmm</operator>
      <operator>create_class_gmm</operator>
      <operator>train_class_gmm</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>classify_fuses_gmm_based_lut.hdev</name>
      <desc>Segment color fuses using a LUT classifier</desc>
      <path>hdevelop/Applications/Color-Inspection/</path>
      <industry>industry.electr</industry>
      <industry>industry.synth</industry>
      <applarea>applarea.inspect.color</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <operator>classify_image_class_lut</operator>
      <operator>clear_class_gmm</operator>
      <operator>clear_class_lut</operator>
      <operator>create_class_gmm</operator>
      <operator>create_class_lut_gmm</operator>
      <operator>train_class_gmm</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>classify_halogen_bulbs.hdev</name>
      <desc>Check halogen bulbs using SVM-based classification</desc>
      <path>solution_guide/classification/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.blob</method>
      <method>method.classif</method>
      <method>method.feat</method>
      <operator>add_sample_class_svm</operator>
      <operator>classify_class_svm</operator>
      <operator>clear_class_svm</operator>
      <operator>create_class_svm</operator>
      <operator>list_files</operator>
      <operator>moments_region_central_invar</operator>
      <operator>train_class_svm</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>classify_image_class_gmm.hdev</name>
      <desc>Segment an RGB image with a GMM classifier</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.blob</method>
      <operator>add_samples_image_class_gmm</operator>
      <operator>classify_image_class_gmm</operator>
      <operator>clear_class_gmm</operator>
      <operator>clear_samples_class_gmm</operator>
      <operator>create_class_gmm</operator>
      <operator>gen_rectangle1</operator>
      <operator>gen_rectangle2</operator>
      <operator>region_to_mean</operator>
      <operator>train_class_gmm</operator>
      <operator>union1</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>classify_image_class_lut.hdev</name>
      <desc>Compare runtime needed for LUT classifiers and conventional classifiers</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <operator>add_samples_image_class_gmm</operator>
      <operator>add_samples_image_class_mlp</operator>
      <operator>add_samples_image_class_svm</operator>
      <operator>classify_image_class_gmm</operator>
      <operator>classify_image_class_lut</operator>
      <operator>classify_image_class_mlp</operator>
      <operator>classify_image_class_svm</operator>
      <operator>clear_class_gmm</operator>
      <operator>clear_class_lut</operator>
      <operator>clear_class_mlp</operator>
      <operator>clear_class_svm</operator>
      <operator>create_class_gmm</operator>
      <operator>create_class_lut_gmm</operator>
      <operator>create_class_lut_mlp</operator>
      <operator>create_class_lut_svm</operator>
      <operator>create_class_mlp</operator>
      <operator>create_class_svm</operator>
      <operator>train_class_gmm</operator>
      <operator>train_class_mlp</operator>
      <operator>train_class_svm</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>classify_image_class_mlp.hdev</name>
      <desc>Segment an RGB image with an MLP classifier</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.blob</method>
      <operator>add_samples_image_class_mlp</operator>
      <operator>classify_image_class_mlp</operator>
      <operator>clear_class_mlp</operator>
      <operator>copy_obj</operator>
      <operator>create_class_mlp</operator>
      <operator>gen_rectangle1</operator>
      <operator>gen_rectangle2</operator>
      <operator>region_to_mean</operator>
      <operator>train_class_mlp</operator>
      <operator>union1</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>classify_image_class_svm.hdev</name>
      <desc>Segment an RGB image with an SVM classifier</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.blob</method>
      <operator>add_samples_image_class_svm</operator>
      <operator>classify_image_class_svm</operator>
      <operator>clear_class_svm</operator>
      <operator>clear_samples_class_svm</operator>
      <operator>create_class_svm</operator>
      <operator>gen_rectangle1</operator>
      <operator>gen_rectangle2</operator>
      <operator>region_to_mean</operator>
      <operator>train_class_svm</operator>
      <operator>union1</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>classify_metal_parts.hdev</name>
      <desc>Distinguish metal parts using MLP-based classification</desc>
      <path>solution_guide/classification/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.blob</method>
      <method>method.classif</method>
      <operator>add_sample_class_mlp</operator>
      <operator>classify_class_mlp</operator>
      <operator>clear_class_mlp</operator>
      <operator>clear_samples_class_mlp</operator>
      <operator>create_class_mlp</operator>
      <operator>moments_region_central_invar</operator>
      <operator>roundness</operator>
      <operator>train_class_mlp</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>classify_metal_parts_ocr.hdev</name>
      <desc>Distinguish metal parts using MLP-based OCR classification</desc>
      <path>solution_guide/classification/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.ident.ocr</applarea>
      <applarea>applarea.ident.ocr</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.blob</method>
      <method>method.classif</method>
      <operator>append_ocr_trainf</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>do_ocr_single_class_mlp</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>write_ocr_trainf</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>classify_wood.hdev</name>
      <desc>Classify different kinds of wood according to their surface texture</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.wood</industry>
      <applarea>applarea.inspect.texture</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.classif</method>
      <method>method.texture</method>
      <method>method.tuple</method>
      <operator>add_sample_class_mlp</operator>
      <operator>classify_class_mlp</operator>
      <operator>clear_class_mlp</operator>
      <operator>cooc_feature_image</operator>
      <operator>create_class_mlp</operator>
      <operator>entropy_gray</operator>
      <operator>file_exists</operator>
      <operator>gray_histo_abs</operator>
      <operator>list_files</operator>
      <operator>read_class_mlp</operator>
      <operator>sobel_amp</operator>
      <operator>train_class_mlp</operator>
      <operator>write_class_mlp</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>clip.hdev</name>
      <desc>Determine the position and orientation of clips</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.blob</method>
      <method>method.visual</method>
      <operator>area_center</operator>
      <operator>bin_threshold</operator>
      <operator>dev_display</operator>
      <operator>dev_set_color</operator>
      <operator>dev_set_draw</operator>
      <operator>dev_set_line_width</operator>
      <operator>dev_update_window</operator>
      <operator>disp_arrow</operator>
      <operator>for</operator>
      <operator>orientation_region</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>clip_contours_xld.hdev</name>
      <desc>Clip an XLD contour</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>clip_contours_xld</operator>
      <operator>dev_close_window</operator>
      <operator>dev_open_window</operator>
      <operator>dev_set_part</operator>
      <operator>disp_arrow</operator>
      <operator>lines_gauss</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>clip_end_points_contours_xld.hdev</name>
      <desc>Demonstrate how to use the two modes of clip_end_points_contours_xld</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>clip_end_points_contours_xld</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>clip_region.hdev</name>
      <desc>Clip regions to rectangles</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>clip_region</operator>
      <operator>get_system</operator>
      <operator>set_system</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>clip_region_rel.hdev</name>
      <desc>Clip regions to rectangles relative to their size</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>clip_region_rel</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>close_contour_gaps.hdev</name>
      <desc>Close gaps in extracted straight contours</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.metrol</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>dev_set_color</operator>
      <operator>edges_sub_pix</operator>
      <operator>mean_image</operator>
      <operator>paint_gray</operator>
      <operator>rectangle1_domain</operator>
      <operator>region_to_bin</operator>
      <operator>regress_contours_xld</operator>
      <operator>segment_contours_xld</operator>
      <operator>sort_contours_xld</operator>
      <operator>union_collinear_contours_xld</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>close_contours_xld.hdev</name>
      <desc>Close XLD contours</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>close_contours_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>select_contours_xld</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>close_edges.hdev</name>
      <desc>Close edge gaps using the edge amplitude image</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <method>method.regionproc</method>
      <operator>close_edges</operator>
      <operator>sobel_amp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>close_edgeslength.hdev</name>
      <desc>Close edge gaps using the edge amplitude image</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <method>method.regionproc</method>
      <operator>close_edges_length</operator>
      <operator>sobel_amp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>closest_point_transform.hdev</name>
      <desc>Compute the closest-point transform of a region.</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <method>method.regionproc</method>
      <operator>closest_point_transform</operator>
      <operator>gen_circle</operator>
      <operator>set_paint</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>codabar.hdev</name>
      <desc>Read a bar code of type Codabar</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>set_bar_code_param</operator>
      <operator>set_tposition</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>code128.hdev</name>
      <desc>Read a bar code of type Code 128</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>create_bar_code_model</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_result</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_rgb</operator>
      <newinversion>6.0.1</newinversion>
   </example>
   <example>
      <name>code39.hdev</name>
      <desc>Read a bar code of type Code 39</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_object</operator>
      <operator>get_bar_code_result</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>coherence_enhancing_diff.hdev</name>
      <desc>Enhance fingerprint image</desc>
      <path>hdevelop/Filters/Enhancement/</path>
      <industry>industry.secure</industry>
      <applarea>applarea.security</applarea>
      <method>method.filter.general</method>
      <operator>coherence_enhancing_diff</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>color_fuses.hdev</name>
      <desc>Sort fuses by color</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.auto</industry>
      <industry>industry.electr</industry>
      <applarea>applarea.inspect.color</applarea>
      <method>method.color</method>
      <method>method.blob</method>
      <operator>decompose3</operator>
      <operator>trans_from_rgb</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>color_fuses_lut_trans.hdev</name>
      <desc>Classify fuses using color-space transformation</desc>
      <path>hdevelop/Applications/Color-Inspection/</path>
      <industry>industry.electr</industry>
      <industry>industry.synth</industry>
      <applarea>applarea.inspect.color</applarea>
      <method>method.color</method>
      <method>method.blob</method>
      <operator>apply_color_trans_lut</operator>
      <operator>create_color_trans_lut</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>color_pieces.hdev</name>
      <desc>Check for completeness of colored game pieces using MLP classification</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.color</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.color</method>
      <method>method.blob</method>
      <method>method.classif</method>
      <operator>add_samples_image_class_mlp</operator>
      <operator>classify_image_class_mlp</operator>
      <operator>compose3</operator>
      <operator>copy_obj</operator>
      <operator>create_class_mlp</operator>
      <operator>draw_rectangle1</operator>
      <operator>rgb1_to_gray</operator>
      <operator>train_class_mlp</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>color_pieces_euclid.hdev</name>
      <desc>Check for completeness of game color pieces using Euclidean classification</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.color</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.color</method>
      <method>method.blob</method>
      <method>method.classif</method>
      <operator>class_ndim_norm</operator>
      <operator>compose3</operator>
      <operator>draw_rectangle1</operator>
      <operator>gen_empty_region</operator>
      <operator>learn_ndim_norm</operator>
      <operator>rgb1_to_gray</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>color_segmentation_pizza.hdev</name>
      <desc>Find salami pieces on pizza based on color image processing</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.color</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>closing_circle</operator>
      <operator>connection</operator>
      <operator>decompose3</operator>
      <operator>opening_circle</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape</operator>
      <operator>select_shape_std</operator>
      <operator>shape_trans</operator>
      <operator>threshold</operator>
      <operator>trans_from_rgb</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>color_simple.hdev</name>
      <desc>Segment color image in HSV color space</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.inspect.color</applarea>
      <method>method.color</method>
      <method>method.blob</method>
      <operator>closing_circle</operator>
      <operator>decompose3</operator>
      <operator>read_image</operator>
      <operator>select_shape_std</operator>
      <operator>trans_from_rgb</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>color_trans_lut.hdev</name>
      <desc>Compare the run time of color space transformations with or without a LUT</desc>
      <path>hdevelop/Filters/Color/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <operator>apply_color_trans_lut</operator>
      <operator>clear_color_trans_lut</operator>
      <operator>count_seconds</operator>
      <operator>create_color_trans_lut</operator>
      <operator>get_param_info</operator>
      <operator>trans_from_rgb</operator>
      <operator>trans_to_rgb</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>comment.hdev</name>
      <desc>Use comments and verbatim code export</desc>
      <path>hdevelop/Control/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <operator>comment</operator>
      <operator>stop</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>compactness.hdev</name>
      <desc>Calculate the compactness of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>compactness</operator>
      <operator>regiongrowing</operator>
      <operator>select_shape</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>compare.hdev</name>
      <desc>Perform comparisons on scalars, tuples and strings</desc>
      <path>hdevelop/Manuals/HDevelop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <method>method.functions</method>
      <method>method.tuple</method>
      <method>method.string</method>
      <operator>assign</operator>
   </example>
   <example>
      <name>compare_calibration_models.hdev</name>
      <desc>Compare the results of camera calibration with different camera models</desc>
      <path>hdevelop/Calibration/Monocular/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <operator>caltab_points</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>compare_ocr_svm_mlp.hdev</name>
      <desc>Compare the recognition rates and the training and classification speeds of the SVM and MLP OCR classifiers</desc>
      <path>hdevelop/OCR/Support-Vector-Machines/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.classif</method>
      <operator>add_image</operator>
      <operator>add_noise_white</operator>
      <operator>affine_trans_image</operator>
      <operator>append_ocr_trainf</operator>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>clear_ocr_class_svm</operator>
      <operator>count_seconds</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>create_ocr_class_svm</operator>
      <operator>delete_file</operator>
      <operator>do_ocr_single_class_mlp</operator>
      <operator>do_ocr_single_class_svm</operator>
      <operator>expand_domain_gray</operator>
      <operator>file_exists</operator>
      <operator>full_domain</operator>
      <operator>gen_image_proto</operator>
      <operator>get_support_vector_num_ocr_class_svm</operator>
      <operator>gray_dilation_shape</operator>
      <operator>gray_erosion_shape</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>intersection</operator>
      <operator>read_ocr_trainf</operator>
      <operator>read_ocr_trainf_names</operator>
      <operator>reduce_ocr_class_svm</operator>
      <operator>rotate_image</operator>
      <operator>scale_image</operator>
      <operator>smooth_image</operator>
      <operator>sort_region</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>trainf_ocr_class_svm</operator>
      <operator>write_ocr_trainf</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>compose_funct_1d.hdev</name>
      <desc>Compose two 1D functions and compare the result with the analytical composition result</desc>
      <path>hdevelop/Tools/Function/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.numeric</method>
      <method>method.funct1d</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <operator>compose_funct_1d</operator>
      <operator>create_funct_1d_pairs</operator>
      <operator>funct_1d_to_pairs</operator>
      <operator>get_window_extents</operator>
      <operator>x_range_funct_1d</operator>
      <operator>y_range_funct_1d</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>composite_print_quality_isoiec15416.hdev</name>
      <desc>Inspect the print quality of composite bar codes (isoiec15416)</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.print</applarea>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <method>method.visual</method>
      <method>method.filter.general</method>
      <operator>add_image</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_result</operator>
      <operator>gray_dilation_shape</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>compute_devices.hdev</name>
      <desc>Demonstrate how to use compute devices with HALCON</desc>
      <path>hdevelop/System/Compute-Devices/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.opsys</method>
      <method>method.trafo.geom</method>
      <operator>activate_compute_device</operator>
      <operator>deactivate_compute_device</operator>
      <operator>get_compute_device_info</operator>
      <operator>init_compute_device</operator>
      <operator>open_compute_device</operator>
      <operator>query_available_compute_devices</operator>
      <operator>set_compute_device_param</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>connect_and_holes.hdev</name>
      <desc>Calculate the number of connected components and holes of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>complement</operator>
      <operator>connect_and_holes</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>connection.hdev</name>
      <desc>Calculate connected components of regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.feat</method>
      <operator>connection</operator>
      <operator>fill_up</operator>
      <operator>threshold</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>contlength.hdev</name>
      <desc>Calculate the contour length of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>contlength</operator>
      <operator>regiongrowing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>convert_map_type.hdev</name>
      <desc>Convert a map type</desc>
      <path>hdevelop/Filters/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <operator>convert_map_type</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>convexity.hdev</name>
      <desc>Calculate the convexity of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>convexity</operator>
      <operator>regiongrowing</operator>
      <operator>shape_trans</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>cooc_feature_image.hdev</name>
      <desc>Calculate texture features that are based on a co-occurence matrix</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.feat</method>
      <method>method.texture</method>
      <operator>cooc_feature_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>cooc_feature_matrix.hdev</name>
      <desc>Calculate a co-occurence matrix and derive texture features</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.feat</method>
      <method>method.texture</method>
      <operator>cooc_feature_matrix</operator>
      <operator>dev_set_lut</operator>
      <operator>gen_cooc_matrix</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>corner_response.hdev</name>
      <desc>Extract corners from images</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.filter.points</method>
      <operator>corner_response</operator>
      <operator>sobel_amp</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>correct_measure_direction.hdev</name>
      <desc>Automatically correct the orientation of a measure object</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.alignment</applarea>
      <method>method.metrol</method>
      <method>method.visual</method>
      <operator>close_measure</operator>
      <operator>draw_rectangle2_mod</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>get_contour_angle_xld</operator>
      <operator>measure_pairs</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>count_fish_sticks.hdev</name>
      <desc>Perform a completeness check for fish sticks</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.food</industry>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.blob</method>
      <method>method.funct1d</method>
      <method>method.metrol</method>
      <operator>create_funct_1d_array</operator>
      <operator>funct_1d_to_pairs</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>get_image_size</operator>
      <operator>local_min_max_funct_1d</operator>
      <operator>measure_projection</operator>
      <operator>num_points_funct_1d</operator>
      <operator>x_range_funct_1d</operator>
      <operator>y_range_funct_1d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>count_pellets.hdev</name>
      <desc>Detect pellets with morphology</desc>
      <path>hdevelop/Morphology/Region/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.regionproc</method>
      <operator>bin_threshold</operator>
      <operator>dilation_circle</operator>
      <operator>erosion_circle</operator>
      <operator>fill_up_shape</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>create_average_shape_model.hdev</name>
      <desc>Create a shape model from an average image</desc>
      <path>hdevelop/Matching/Shape-Based/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.trafo.geom</method>
      <method>method.image</method>
      <operator>channels_to_image</operator>
      <operator>create_scaled_shape_model</operator>
      <operator>find_scaled_shape_model</operator>
      <operator>mean_n</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>create_local_deformable_model_xld.hdev</name>
      <desc>Create a local deformable model from XLD contours</desc>
      <path>hdevelop/Matching/Deformable/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.deform</method>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.morphol</method>
      <method>method.segm</method>
      <method>method.trafo.geom</method>
      <method>method.xld</method>
      <method>method.typeconv.ico</method>
      <operator>create_local_deformable_model_xld</operator>
      <operator>find_local_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>set_local_deformable_model_metric</operator>
      <operator>unwarp_image_vector_field</operator>
      <operator>vector_field_length</operator>
      <operator>vector_field_to_real</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>create_model_green_dot.hdev</name>
      <desc>Create a model for shape-based matching with scaling</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.match.shape</method>
      <operator>clear_shape_model</operator>
      <operator>create_scaled_shape_model</operator>
      <operator>inspect_shape_model</operator>
      <operator>write_shape_model</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>create_planar_calib_deformable_model_xld.hdev</name>
      <desc>Create a calibrated perspective, deformable model with contours from a DXF file</desc>
      <path>hdevelop/Matching/Deformable/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.match.deform</method>
      <method>method.trafo.wcoord</method>
      <method>method.poseestim</method>
      <method>method.xld</method>
      <operator>clear_deformable_model</operator>
      <operator>create_planar_calib_deformable_model_xld</operator>
      <operator>find_planar_calib_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>read_contour_xld_dxf</operator>
      <operator>set_deformable_model_origin</operator>
      <operator>set_planar_calib_deformable_model_metric</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>create_planar_uncalib_deformable_model_xld.hdev</name>
      <desc>Create an uncalibrated perspective, deformable model with contours from a DXF file</desc>
      <path>hdevelop/Matching/Deformable/</path>
      <industry>industry.auto</industry>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.deform</method>
      <operator>clear_deformable_model</operator>
      <operator>create_planar_uncalib_deformable_model_xld</operator>
      <operator>find_planar_uncalib_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>get_deformable_model_params</operator>
      <operator>projective_trans_contour_xld</operator>
      <operator>read_contour_xld_dxf</operator>
      <operator>set_planar_uncalib_deformable_model_metric</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>create_roi_via_vision.hdev</name>
      <desc>Create a shape model ROI via blob processing</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.roi</method>
      <method>method.morphol</method>
      <method>method.match.shape</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>close_framegrabber</operator>
      <operator>connection</operator>
      <operator>create_shape_model</operator>
      <operator>dilation_circle</operator>
      <operator>fill_up</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>grab_image</operator>
      <operator>inspect_shape_model</operator>
      <operator>open_framegrabber</operator>
      <operator>reduce_domain</operator>
      <operator>threshold</operator>
      <operator>union1</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>create_shape_model_3d_ignore_part_polarity.hdev</name>
      <desc>Speed-up the shape-based 3D matching on a textured background</desc>
      <path>hdevelop/3D-Matching/Shape-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object3d</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.match3d.shape</method>
      <method>method.poseestim</method>
      <operator>clear_object_model_3d</operator>
      <operator>clear_shape_model_3d</operator>
      <operator>create_shape_model_3d</operator>
      <operator>find_shape_model_3d</operator>
      <operator>prepare_object_model_3d</operator>
      <operator>project_shape_model_3d</operator>
      <operator>read_object_model_3d</operator>
      <operator>read_shape_model_3d</operator>
      <operator>write_shape_model_3d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>create_shape_model_3d_lowest_model_level.hdev</name>
      <desc>Reduce the memory needed for a 3D shape model</desc>
      <path>hdevelop/3D-Matching/Shape-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object3d</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.match3d.shape</method>
      <method>method.poseestim</method>
      <method>method.trafo.geom</method>
      <operator>clear_object_model_3d</operator>
      <operator>clear_shape_model_3d</operator>
      <operator>create_shape_model_3d</operator>
      <operator>find_shape_model_3d</operator>
      <operator>get_shape_model_3d_params</operator>
      <operator>prepare_object_model_3d</operator>
      <operator>project_shape_model_3d</operator>
      <operator>read_object_model_3d</operator>
      <operator>read_shape_model_3d</operator>
      <operator>write_shape_model_3d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>create_shape_model_xld.hdev</name>
      <desc>Create shape models from XLD contours</desc>
      <path>hdevelop/Matching/Shape-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <method>method.functions</method>
      <operator>area_center_xld</operator>
      <operator>create_shape_model_xld</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>get_shape_model_params</operator>
      <operator>line_orientation</operator>
      <operator>orientation_xld</operator>
      <operator>polar_trans_image</operator>
      <operator>set_shape_model_metric</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>create_template_rot.hdev</name>
      <desc>Find the best match (with rotation) of a gray value template</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_image</operator>
      <operator>best_match_rot</operator>
      <operator>create_template_rot</operator>
      <operator>fill_interlace</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>set_reference_template</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>crevis.hdev</name>
      <desc>Use a Crevis USB camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.1</newinversion>
   </example>
   <example>
      <name>crevis_binning.hdev</name>
      <desc>Grab images from a Crevis USB camera (HRS 1/4 binning mode)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0.1</newinversion>
   </example>
   <example>
      <name>crevis_parameters.hdev</name>
      <desc>Query parameter settings from a Crevis USB camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0.1</newinversion>
   </example>
   <example>
      <name>crevis_simple.hdev</name>
      <desc>Grab images from a Crevis USB camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0.1</newinversion>
   </example>
   <example>
      <name>crevis_trigger.hdev</name>
      <desc>Use a Crevis USB camera (external trigger)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.1</newinversion>
   </example>
   <example>
      <name>critical_points.hdev</name>
      <desc>Locate saddle point markers in an image</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.visual</method>
      <method>method.roi</method>
      <method>method.filter.general</method>
      <method>method.xld</method>
      <operator>critical_points_sub_pix</operator>
      <operator>draw_region</operator>
      <operator>gen_cross_contour_xld</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>critical_points_sub_pix.hdev</name>
      <desc>Detect critical points with subpixel accuracy</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <method>method.visual</method>
      <operator>critical_points_sub_pix</operator>
      <operator>derivate_gauss</operator>
      <operator>dev_open_window</operator>
      <operator>dev_set_part</operator>
      <operator>disp_arrow</operator>
      <operator>disp_rectangle1</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>tuple_concat</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>crop_contours_xld.hdev</name>
      <desc>Crop an XLD contour</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>crop_contours_xld</operator>
      <operator>disp_arrow</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>lines_gauss</operator>
      <operator>union2</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>crystal.hdev</name>
      <desc>Extract hexagonally shaped crystals via local thresholding and region post-processing</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.filter.general</method>
      <method>method.blob</method>
      <operator>connection</operator>
      <operator>dyn_threshold</operator>
      <operator>mean_image</operator>
      <operator>select_gray</operator>
      <operator>shape_trans</operator>
      <operator>stop</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>dahengcam.hdev</name>
      <desc>Use a Daheng USB camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>gen_struct_elements</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>dahengcam_2cameras.hdev</name>
      <desc>Grab images from two Daheng USB cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>dahengcam_parameters.hdev</name>
      <desc>Grab images from Daheng USB cameras (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>dahengcam_simple.hdev</name>
      <desc>Use a Daheng USB camera (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>decode_bar_code_rectangle2.hdev</name>
      <desc>Decode a bar code within a rectangular ROI</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>decode_bar_code_rectangle2</operator>
      <operator>get_bar_code_object</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>defect_barcode.hdev</name>
      <desc>Show the bar code reader's ability to read defect bar codes</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <method>method.error</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>gen_rectangle1</operator>
      <operator>get_bar_code_object</operator>
      <operator>paint_region</operator>
      <operator>set_bar_code_param</operator>
      <operator>wait_seconds</operator>
      <newinversion>6.1.1</newinversion>
   </example>
   <example>
      <name>dem.hdev</name>
      <desc>Extract high objects from a digital elevation model</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.filter.general</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <operator>crop_part</operator>
      <operator>dev_display</operator>
      <operator>dev_set_lut</operator>
      <operator>dev_set_paint</operator>
      <operator>dual_rank</operator>
      <operator>scale_image_max</operator>
      <operator>sub_image</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dem_trees.hdev</name>
      <desc>Extract trees using texture and a digital elevation model</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.texture</method>
      <method>method.filter.general</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>clip_region</operator>
      <operator>closing_circle</operator>
      <operator>dual_rank</operator>
      <operator>fill_up</operator>
      <operator>intersection</operator>
      <operator>median_separate</operator>
      <operator>move_region</operator>
      <operator>scale_image_max</operator>
      <operator>sub_image</operator>
      <operator>texture_laws</operator>
      <operator>threshold</operator>
      <operator>zoom_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>depth_from_focus.hdev</name>
      <desc>Extract depth using multiple focus levels</desc>
      <path>hdevelop/3D-Reconstruction/Depth-From-Focus/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.dff</method>
      <method>method.image</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>access_channel</operator>
      <operator>channels_to_image</operator>
      <operator>depth_from_focus</operator>
      <operator>dev_set_paint</operator>
      <operator>mean_image</operator>
      <operator>scale_image_max</operator>
      <operator>select_grayvalues_from_channels</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>derivate_gauss.hdev</name>
      <desc>Convolve an image with derivatives of the Gaussian (various usages)</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>convert_image_type</operator>
      <operator>derivate_gauss</operator>
      <operator>watersheds</operator>
      <operator>zero_crossing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>detect_brochure_pages.hdev</name>
      <desc>Find pages of articles in a picture database</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.paper</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.descr</method>
      <method>method.geom</method>
      <operator>angle_ll</operator>
      <operator>clear_all_descriptor_models</operator>
      <operator>clear_descriptor_model</operator>
      <operator>create_uncalib_descriptor_model</operator>
      <operator>find_uncalib_descriptor_model</operator>
      <operator>get_descriptor_model_points</operator>
      <operator>projective_trans_pixel</operator>
      <operator>projective_trans_region</operator>
      <operator>set_descriptor_model_origin</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>detect_indent_fft.hdev</name>
      <desc>Detect defects on the surface of plastic items</desc>
      <path>hdevelop/Applications/Surface-Inspection/</path>
      <industry>industry.synth</industry>
      <applarea>applarea.inspect.surface</applarea>
      <method>method.morphol</method>
      <method>method.fft</method>
      <method>method.filter.general</method>
      <operator>convol_fft</operator>
      <operator>gen_gauss_filter</operator>
      <operator>gray_range_rect</operator>
      <operator>optimize_rft_speed</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>detect_mura_defects_blur.hdev</name>
      <desc>Detect mura defects in blurred images</desc>
      <path>hdevelop/Applications/Surface-Inspection/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.surface</applarea>
      <method>method.fft</method>
      <method>method.filter.general</method>
      <method>method.morphol</method>
      <method>method.trafo.geom</method>
      <operator>convol_fft</operator>
      <operator>gen_gauss_filter</operator>
      <operator>lines_gauss</operator>
      <operator>rft_generic</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>detect_mura_defects_texture.hdev</name>
      <desc>Detect mura defects in highly textured images</desc>
      <path>hdevelop/Applications/Surface-Inspection/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.surface</applarea>
      <method>method.filter.general</method>
      <method>method.fft</method>
      <method>method.texture</method>
      <method>method.tuple</method>
      <operator>convol_fft</operator>
      <operator>cooc_feature_image</operator>
      <operator>gen_gauss_filter</operator>
      <operator>rft_generic</operator>
      <operator>tuple_find</operator>
      <operator>watersheds_threshold</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>detect_road_signs.hdev</name>
      <desc>Detect road signs</desc>
      <path>hdevelop/Applications/Traffic-Monitoring/</path>
      <industry>industry.transp</industry>
      <applarea>applarea.traffic</applarea>
      <method>method.match.deform</method>
      <method>method.trafo.geom</method>
      <operator>access_channel</operator>
      <operator>clear_deformable_model</operator>
      <operator>create_planar_uncalib_deformable_model</operator>
      <operator>find_planar_uncalib_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>get_deformable_model_params</operator>
      <operator>inspect_shape_model</operator>
      <operator>projective_trans_contour_xld</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>determine_die_pitch_fft_correlation.hdev</name>
      <desc>Locate dies on a wafer using auto-correlation</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.fft</method>
      <operator>correlation_fft</operator>
      <operator>distance_pp</operator>
      <operator>local_max_sub_pix</operator>
      <operator>rft_generic</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>determine_grid_rotation_fft.hdev</name>
      <desc>Determine the rotation angle of a grid</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.fft</method>
      <method>method.funct1d</method>
      <method>method.visual</method>
      <operator>correlation_fft</operator>
      <operator>gen_region_polygon_filled</operator>
      <operator>get_y_value_funct_1d</operator>
      <operator>gray_histo_range</operator>
      <operator>local_min_max_funct_1d</operator>
      <operator>optimize_fft_speed</operator>
      <operator>rft_generic</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>determine_ncc_model_params.hdev</name>
      <desc>Determine parameters for a correlation-based matching</desc>
      <path>hdevelop/Matching/Correlation-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.correl</method>
      <operator>determine_ncc_model_params</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>determine_pose_square_tube.hdev</name>
      <desc>Estimate the pose of a rectangular shaped object</desc>
      <path>hdevelop/Applications/Position-Recognition-3D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.xld</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.wcoord</method>
      <operator>affine_trans_point_3d</operator>
      <operator>area_center_points_xld</operator>
      <operator>close_contours_xld</operator>
      <operator>get_rectangle_pose</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>tuple_atan2</operator>
      <operator>union_adjacent_contours_xld</operator>
      <operator>union_collinear_contours_xld</operator>
      <operator>vector_to_pose</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>determine_sharpness.hdev</name>
      <desc>Demonstrate how to measure the sharpness of an image</desc>
      <path>hdevelop/Applications/General/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.fft</method>
      <method>method.filter.general</method>
      <method>method.funct1d</method>
      <operator>abs_image</operator>
      <operator>convert_image_type</operator>
      <operator>correlation_fft</operator>
      <operator>create_funct_1d_array</operator>
      <operator>funct_1d_to_pairs</operator>
      <operator>power_real</operator>
      <operator>rft_generic</operator>
      <operator>tile_images_offset</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>determine_wafer_rotation_angle.hdev</name>
      <desc>Determine the angle of rotation of a wafer using text_line_orientation</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.general</method>
      <operator>text_line_orientation</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>dev_clear_window.hdev</name>
      <desc>Clear a graphics window in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <operator>dev_clear_window</operator>
      <operator>dev_update_window</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_close_inspect_ctrl.hdev</name>
      <desc>Close a variable inspection window in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <method>method.io</method>
      <operator>dev_close_inspect_ctrl</operator>
      <operator>dev_inspect_ctrl</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_close_window.hdev</name>
      <desc>Close graphics windows in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <operator>dev_close_window</operator>
      <operator>dev_open_window</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_display.hdev</name>
      <desc>Display image objects in graphics windows in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <operator>dev_clear_window</operator>
      <operator>dev_display</operator>
      <operator>dev_set_colored</operator>
      <operator>dev_set_draw</operator>
      <operator>read_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_error_var.hdev</name>
      <desc>Catch errors in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.error</method>
      <method>method.file</method>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_inspect_ctrl.hdev</name>
      <desc>Use a variable inspection window in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <method>method.io</method>
      <operator>area_center</operator>
      <operator>dev_inspect_ctrl</operator>
      <operator>regiongrowing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_map_par.hdev</name>
      <desc>Open the window for adjusting display parameters in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <operator>dev_map_par</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_open_window.hdev</name>
      <desc>Open graphics windows in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <operator>dev_close_window</operator>
      <operator>dev_display</operator>
      <operator>dev_open_window</operator>
      <operator>dev_set_lut</operator>
      <operator>dev_set_part</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_set_check.hdev</name>
      <desc>Enable/Disable error handling in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.error</method>
      <method>method.file</method>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_set_paint.hdev</name>
      <desc>Paint data using different representations into a graphics window in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <method>method.io</method>
      <operator>dev_set_lut</operator>
      <operator>dev_set_paint</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_set_part.hdev</name>
      <desc>Set the part of an image to be displayed (zoomed) in a graphics window in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <operator>dev_display</operator>
      <operator>dev_set_part</operator>
      <operator>dev_set_window_extents</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dev_set_window_extents.hdev</name>
      <desc>Set size and position of a graphics window in HDevelop</desc>
      <path>hdevelop/Develop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <operator>dev_set_window_extents</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>diameter_region.hdev</name>
      <desc>Calculate the diameter of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>diameter_region</operator>
      <operator>disp_line</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>diff_of_gauss.hdev</name>
      <desc>Approximate the LoG operator (Laplace of Gaussian)</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>derivate_gauss</operator>
      <operator>diff_of_gauss</operator>
      <operator>laplace_of_gauss</operator>
      <operator>zero_crossing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>difference_closed_contours_xld.hdev</name>
      <desc>Demonstrate the use of difference_closed_contours_xld</desc>
      <path>hdevelop/XLD/Sets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>difference_closed_contours_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>difference_closed_polygons_xld.hdev</name>
      <desc>Demonstrate the use of difference_closed_polygons_xld</desc>
      <path>hdevelop/XLD/Sets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>difference_closed_polygons_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>gen_polygons_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>directfile.hdev</name>
      <desc>Use the HALCON frame grabber interface for DirectShow file reader</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>directshow.hdev</name>
      <desc>Use a DirectShow compatible capture device (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>directshow_2cameras.hdev</name>
      <desc>Use two DirectShow compatible capture devices</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>disp_image</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>directshow_camera_types.hdev</name>
      <desc>Use a DirectShow compatible capture device with all available camera types</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_str_last_n</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>directshow_exposure.hdev</name>
      <desc>Grab images from a DirectShow compatible capture device (using exposure)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>directshow_frame_rates.hdev</name>
      <desc>Grab images from a DirectShow compatible capture device (frame rate)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>directshow_parameters.hdev</name>
      <desc>Query parameter values from a DirectShow compatible capture device</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>directshow_simple.hdev</name>
      <desc>Grab images from a DirectShow compatible capture device (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>disp_xld.hdev</name>
      <desc>Display an XLD object</desc>
      <path>hdevelop/Graphics/Output/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <method>method.edgeextr</method>
      <method>method.filter.edge</method>
      <method>method.xld</method>
      <operator>disp_xld</operator>
      <operator>edges_image</operator>
      <operator>edges_sub_pix</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>disparity.hdev</name>
      <desc>Display disparity image for different stereo image pairs</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.stereo</method>
      <operator>binocular_disparity</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>disparity_image_to_xyz.hdev</name>
      <desc>Transform a disparity image into the coordinate images X, Y, and Z</desc>
      <path>hdevelop/3D-Reconstruction/Binocular-Stereo/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.stereo</method>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <operator>binocular_disparity</operator>
      <operator>continue</operator>
      <operator>disparity_image_to_xyz</operator>
      <operator>full_domain</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>harmonic_interpolation</operator>
      <operator>map_image</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>disparity_to_point_3d.hdev</name>
      <desc>Reconstruct 3D information from disparity</desc>
      <path>hdevelop/3D-Reconstruction/Binocular-Stereo/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.geom</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <operator>affine_trans_point_3d</operator>
      <operator>caltab_points</operator>
      <operator>create_pose</operator>
      <operator>disparity_to_distance</operator>
      <operator>disparity_to_point_3d</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>map_image</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>sim_caltab</operator>
      <operator>tuple_sub</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>display_operators.hdev</name>
      <desc>Visualize results</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>area_center</operator>
      <operator>dev_clear_window</operator>
      <operator>dev_close_window</operator>
      <operator>dev_display</operator>
      <operator>dev_open_window</operator>
      <operator>dev_set_color</operator>
      <operator>dev_set_colored</operator>
      <operator>dev_set_draw</operator>
      <operator>dev_set_line_width</operator>
      <operator>dev_set_lut</operator>
      <operator>dev_set_paint</operator>
      <operator>dev_set_part</operator>
      <operator>dev_set_shape</operator>
      <operator>dev_set_window</operator>
      <operator>dev_update_pc</operator>
      <operator>dev_update_var</operator>
      <operator>dev_update_window</operator>
      <operator>edges_sub_pix</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>gen_rectangle1</operator>
      <operator>get_contour_xld</operator>
      <operator>get_image_size</operator>
      <operator>get_mbutton</operator>
      <operator>read_image</operator>
      <operator>regiongrowing</operator>
      <operator>select_region_point</operator>
      <operator>select_shape_xld</operator>
      <operator>set_font</operator>
      <operator>set_tposition</operator>
      <operator>stop</operator>
      <operator>write_string</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>distance_cc_min.hdev</name>
      <desc>Calculate the distance between two contours</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <method>method.xld</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <operator>disp_arrow</operator>
      <operator>disp_cross</operator>
      <operator>disp_polygon</operator>
      <operator>distance_cc_min</operator>
      <operator>gen_contour_polygon_rounded_xld</operator>
      <operator>get_line_style</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_line_style</operator>
      <operator>set_rgb</operator>
      <operator>set_tposition</operator>
      <operator>tuple_concat</operator>
      <operator>tuple_max</operator>
      <operator>tuple_min</operator>
      <operator>tuple_select_range</operator>
      <operator>tuple_sort</operator>
      <operator>tuple_sort_index</operator>
      <operator>tuple_string</operator>
      <operator>write_string</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>distance_lr.hdev</name>
      <desc>Calculate the distance between a line and a region</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>disp_line</operator>
      <operator>distance_lr</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>distance_pc.hdev</name>
      <desc>Determine the minimum and maximum radius of drill holes by calculating the distance between a point and a contour</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.auto</industry>
      <industry>industry.metal</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <method>method.visual</method>
      <method>method.string</method>
      <method>method.edgeextr</method>
      <operator>disp_cross</operator>
      <operator>distance_pc</operator>
      <operator>edges_sub_pix</operator>
      <operator>get_string_extents</operator>
      <operator>select_shape_xld</operator>
      <operator>set_tposition</operator>
      <operator>smallest_circle_xld</operator>
      <operator>sort_contours_xld</operator>
      <operator>tuple_string</operator>
      <operator>write_string</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>distance_pl.hdev</name>
      <desc>Calculate the distances between points and a line</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>disp_line</operator>
      <operator>distance_pl</operator>
      <operator>get_region_contour</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>distance_pp.hdev</name>
      <desc>Calculate the distance between two points</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>distance_pp</operator>
      <operator>get_region_contour</operator>
      <operator>set_draw</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>distance_pr.hdev</name>
      <desc>Calculate the distance between a point and a region</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>distance_pr</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>distance_ps.hdev</name>
      <desc>Calculate the distance between a point and a line segment</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>distance_ps</operator>
      <operator>get_region_contour</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>distance_sl.hdev</name>
      <desc>Calculate the distance between a line segment and a line</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>distance_sl</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>distance_sr.hdev</name>
      <desc>Calculate the distance between a line segment and a region</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>distance_sr</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>distance_ss.hdev</name>
      <desc>Calculate the distances between line segments</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>distance_ss</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>distance_transform.hdev</name>
      <desc>Inspect a simulated circuit board for defects</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.blob</method>
      <method>method.feat</method>
      <method>method.visual</method>
      <method>method.regionproc</method>
      <operator>difference</operator>
      <operator>dilation_circle</operator>
      <operator>disp_circle</operator>
      <operator>distance_transform</operator>
      <operator>gen_circle</operator>
      <operator>gen_region_polygon</operator>
      <operator>pruning</operator>
      <operator>skeleton</operator>
      <operator>union2</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>distance_transform_interactive.hdev</name>
      <desc>Calculate the distance transformation of a region</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.io</method>
      <method>method.filter.general</method>
      <operator>distance_transform</operator>
      <operator>draw_region</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>distance_transform_metrics.hdev</name>
      <desc>Calculate distances using different metrics</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.io</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>boundary</operator>
      <operator>distance_transform</operator>
      <operator>gen_circle</operator>
      <operator>gen_region_points</operator>
      <operator>intensity</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>div_image.hdev</name>
      <desc>Divide two images</desc>
      <path>hdevelop/Filters/Arithmetic/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>div_image</operator>
      <operator>gen_image_gray_ramp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dotprt.hdev</name>
      <desc>Read a dot print</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.trafo.align</method>
      <method>method.visual</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <method>method.blob</method>
      <method>method.tuple</method>
      <operator>affine_trans_image</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>clip_region</operator>
      <operator>dev_set_shape</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>opening_rectangle1</operator>
      <operator>partition_rectangle</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>set_font</operator>
      <operator>shape_trans</operator>
      <operator>smallest_rectangle1</operator>
      <operator>sort_region</operator>
      <operator>text_line_orientation</operator>
      <operator>union1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>dots_image.hdev</name>
      <desc>Segment a dot print using dots_image</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.morphol</method>
      <method>method.segm</method>
      <method>method.ocr</method>
      <method>method.filter.points</method>
      <operator>closing</operator>
      <operator>closing_rectangle1</operator>
      <operator>crop_part</operator>
      <operator>dots_image</operator>
      <operator>gen_rectangle2</operator>
      <operator>intersection</operator>
      <operator>mult_image</operator>
      <operator>partition_dynamic</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>dual_threshold.hdev</name>
      <desc>Segment signed images into positive and negative regions</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.roi</method>
      <method>method.regionproc</method>
      <method>method.segm</method>
      <operator>bin_threshold</operator>
      <operator>convert_image_type</operator>
      <operator>dilation_circle</operator>
      <operator>dual_threshold</operator>
      <operator>select_gray</operator>
      <operator>shape_trans</operator>
      <operator>sub_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>dump_window_data.hdev</name>
      <desc>Dump the content of the graphics window to an image object</desc>
      <path>hdevelop/Graphics/Window/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>area_center_xld</operator>
      <operator>dump_window_image</operator>
      <operator>gen_contour_region_xld</operator>
      <operator>set_tposition</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>dxf_input_output.hdev</name>
      <desc>Write and read DXF files</desc>
      <path>hdevelop/File/XLD/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.file</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>edges_sub_pix</operator>
      <operator>gen_polygons_xld</operator>
      <operator>query_contour_attribs_xld</operator>
      <operator>query_contour_global_attribs_xld</operator>
      <operator>read_contour_xld_dxf</operator>
      <operator>read_polygon_xld_dxf</operator>
      <operator>regress_contours_xld</operator>
      <operator>write_contour_xld_dxf</operator>
      <operator>write_polygon_xld_dxf</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>dyn_threshold.hdev</name>
      <desc>Segment an image using a local threshold</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>dyn_threshold</operator>
      <operator>fill_interlace</operator>
      <operator>mean_image</operator>
      <operator>opening_circle</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ean13.hdev</name>
      <desc>Read a bar code of type EAN13</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_bar_code_param</operator>
      <operator>set_rgb</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>ean13addon5.hdev</name>
      <desc>Read a bar code of type EAN13 Add-On 5</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_bar_code_param</operator>
      <operator>set_rgb</operator>
      <newinversion>6.0.1</newinversion>
   </example>
   <example>
      <name>ean8.hdev</name>
      <desc>Read a bar code of type EAN 8</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_rgb</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>ecc200_default_settings.hdev</name>
      <desc>Read a 2d data code of type ECC200</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>get_string_extents</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ecc200_finder_pattern_tolerance.hdev</name>
      <desc>Demonstrate how to read ECC200 symbols with disturbed finder patterns</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <method>method.tuple</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>tuple_regexp_select</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>ecc200_optimized.hdev</name>
      <desc>Optimize parameters to read 2D data codes of type ECC200</desc>
      <path>hdevelop/Applications/Data-Codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>count_seconds</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ecc200_optimized_settings.hdev</name>
      <desc>Optimize parameters for reading a 2d data code of type ECC200</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>get_string_extents</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ecc200_print_quality.hdev</name>
      <desc>Inspect the print quality of an ECC200 data code</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <applarea>applarea.inspect.print</applarea>
      <method>method.datacode</method>
      <operator>affine_trans_image</operator>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>crop_rectangle1</operator>
      <operator>find_data_code_2d</operator>
      <operator>gen_region_contour_xld</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>min_max_gray</operator>
      <operator>paint_gray</operator>
      <operator>paint_region</operator>
      <operator>projective_trans_image</operator>
      <operator>scale_image</operator>
      <operator>set_data_code_2d_param</operator>
      <operator>vector_to_proj_hom_mat2d</operator>
      <operator>wait_seconds</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>ecc200_read_model.hdev</name>
      <desc>Load previously stored parameters for 2d data codes of type ECC200</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>read_data_code_2d_model</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ecc200_simple.hdev</name>
      <desc>Read 2D data codes of type ECC200</desc>
      <path>hdevelop/Applications/Data-Codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>count_seconds</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_contour_xld</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ecc200_small_modules_robustness.hdev</name>
      <desc>Demonstrate how to read ECC200 symbols with very small modules</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>set_data_code_2d_param</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>ecc200_training.hdev</name>
      <desc>Train parameters for reading a 2d data code of type ECC200</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>dev_inspect_ctrl</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>query_data_code_2d_params</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ecc200_training_simple.hdev</name>
      <desc>Train a 2D data code model and then read data codes of type ECC200</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_data_code_2d_param</operator>
      <operator>set_font</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ecc200_write_model.hdev</name>
      <desc>Store parameters for 2d data codes of type ECC200</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>dev_inspect_ctrl</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>write_data_code_2d_model</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>eccentricity.hdev</name>
      <desc>Calculate the eccentrity of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>eccentricity</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>edge_segments.hdev</name>
      <desc>Extract connected edges segments</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <method>method.blob</method>
      <operator>edges_image</operator>
      <operator>split_skeleton_lines</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>edges_color.hdev</name>
      <desc>Extract edges using color information</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <method>method.color</method>
      <operator>dev_set_part</operator>
      <operator>edges_color</operator>
      <operator>edges_image</operator>
      <operator>rgb1_to_gray</operator>
      <operator>skeleton</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>edges_color_sub_pix.hdev</name>
      <desc>Extract edges with sub-pixel precision using color information</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.color</method>
      <operator>dev_set_part</operator>
      <operator>edges_color_sub_pix</operator>
      <operator>edges_sub_pix</operator>
      <operator>rgb1_to_gray</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>edges_image.hdev</name>
      <desc>Extract edges (amplitude and direction) using Deriche, Lanser, Shen, or Canny filters</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>edges_image</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>edges_sub_pix.hdev</name>
      <desc>Extract edges with sub-pixel precision</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <operator>edges_sub_pix</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>eliminate_runs.hdev</name>
      <desc>Eliminate runs with a given length from a region (runlength encoding)</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>eliminate_runs</operator>
      <operator>gen_circle</operator>
      <operator>opening</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>elliptic_axis.hdev</name>
      <desc>Calculate the equivalent ellipse of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>disp_ellipse</operator>
      <operator>elliptic_axis</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>elliptic_axis_gray.hdev</name>
      <desc>Analyze the accuracy of calculating the gray value moments (elliptic_axis_gray)</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.measure.2D</applarea>
      <method>method.feat</method>
      <operator>affine_trans_region</operator>
      <operator>elliptic_axis</operator>
      <operator>elliptic_axis_gray</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_image_const</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>paint_region</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>emphasize.hdev</name>
      <desc>Enhance image contrast</desc>
      <path>hdevelop/Filters/Enhancement/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>emphasize</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>eneo.hdev</name>
      <desc>Grab remote images from a eneo SC camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>eneo_parameters.hdev</name>
      <desc>Query current parameter settings from a remote eneo SC camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>eneo_simple.hdev</name>
      <desc>Simple usage of a remote eneo SC camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>engraved.hdev</name>
      <desc>Read characters on a metal surface</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.machine</industry>
      <industry>industry.metal</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <method>method.blob</method>
      <operator>clear_ocr_class_mlp</operator>
      <operator>dev_set_shape</operator>
      <operator>do_ocr_single_class_mlp</operator>
      <operator>gray_range_rect</operator>
      <operator>invert_image</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>sort_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>engravedt.hdev</name>
      <desc>Train characters on a metal surface</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.machine</industry>
      <industry>industry.metal</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.error</method>
      <operator>append_ocr_trainf</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>delete_file</operator>
      <operator>dev_set_shape</operator>
      <operator>gray_range_rect</operator>
      <operator>invert_image</operator>
      <operator>sort_region</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>write_ocr_class_mlp</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>entropy_gray.hdev</name>
      <desc>Calculate the entropy and anisotropy of images</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.feat</method>
      <method>method.texture</method>
      <operator>entropy_gray</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>entropy_image.hdev</name>
      <desc>Segment an image based on the entropy of gray values</desc>
      <path>hdevelop/Filters/Texture/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.texture</method>
      <method>method.blob</method>
      <method>method.feat</method>
      <method>method.segm</method>
      <operator>entropy_image</operator>
      <operator>fill_up_shape</operator>
      <operator>opening_circle</operator>
      <operator>select_gray</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>equ_histo_image.hdev</name>
      <desc>Linearize Histogram for byte images</desc>
      <path>hdevelop/Filters/Enhancement/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>equ_histo_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>error_handling_timeout_falcon.hdev</name>
      <desc>Handle grab errors</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <method>method.error</method>
      <operator>close_framegrabber</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>get_error_text</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>error_handling_timeout_leutron.hdev</name>
      <desc>Handle grab errors</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <method>method.error</method>
      <operator>close_framegrabber</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>get_error_text</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>set_system</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>estimate_noise.hdev</name>
      <desc>Estimate the noise within an image</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>add_noise_distribution</operator>
      <operator>disp_rectangle1</operator>
      <operator>estimate_noise</operator>
      <operator>gauss_distribution</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>euclid_distance.hdev</name>
      <desc>Calculate euclidian distances for a tuple of coordinates</desc>
      <path>hdevelop/Manuals/HDevelop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <method>method.functions</method>
      <method>method.tuple</method>
      <operator>assign</operator>
   </example>
   <example>
      <name>euler_number.hdev</name>
      <desc>Calculate the Euler number of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>complement</operator>
      <operator>euler_number</operator>
      <operator>get_system</operator>
      <operator>set_system</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>exhaustive_match.hdev</name>
      <desc>Match template and image (gray-value-based matching)</desc>
      <path>hdevelop/Filters/Match/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <operator>exhaustive_match</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>exit.hdev</name>
      <desc>Terminate HDevelop after the task is finished</desc>
      <path>hdevelop/Control/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <method>method.file</method>
      <operator>close_file</operator>
      <operator>exit</operator>
      <operator>fwrite_string</operator>
      <operator>intensity</operator>
      <operator>open_file</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>expand_gray.hdev</name>
      <desc>Fill gaps between regions (depending on gray value)</desc>
      <path>hdevelop/Segmentation/Region-Growing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>expand_gray</operator>
      <operator>gen_empty_region</operator>
      <operator>regiongrowing</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>expand_gray_ref.hdev</name>
      <desc>Fill gaps between regions (depending on gray value)</desc>
      <path>hdevelop/Segmentation/Region-Growing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>expand_gray_ref</operator>
      <operator>gen_empty_region</operator>
      <operator>intensity</operator>
      <operator>regiongrowing</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>expand_line.hdev</name>
      <desc>Expand a region from a given line</desc>
      <path>hdevelop/Segmentation/Region-Growing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>expand_line</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>expand_region.hdev</name>
      <desc>Fill gaps between regions or split overlapping regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <method>method.visual</method>
      <method>method.morphol</method>
      <operator>dilation_circle</operator>
      <operator>expand_region</operator>
      <operator>gen_empty_region</operator>
      <operator>regiongrowing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>extract_clips_xl.hdev</name>
      <desc>Demonstrate how to process a large image with HALCON XL</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.visual</method>
      <method>method.feat</method>
      <operator>get_system</operator>
      <operator>tile_images</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>fast_match_mg.hdev</name>
      <desc>Find matches of a gray value template in a pyramid</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.gray</method>
      <operator>add_channels</operator>
      <operator>best_match</operator>
      <operator>create_template</operator>
      <operator>fast_match_mg</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>fast_threshold.hdev</name>
      <desc>Fast selection of grayvalues within an intervall</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>fast_threshold</operator>
      <operator>threshold</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>fast_threshold_vs_threshold.hdev</name>
      <desc>Compare fast_threshold and threshold</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>area_center</operator>
      <operator>count_seconds</operator>
      <operator>difference</operator>
      <operator>fast_threshold</operator>
      <operator>threshold</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>features_points_xld.hdev</name>
      <desc>Compare *_xld with corresponding *_points_xld operators</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>area_center_points_xld</operator>
      <operator>area_center_xld</operator>
      <operator>close_contours_xld</operator>
      <operator>elliptic_axis_points_xld</operator>
      <operator>elliptic_axis_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>lines_gauss</operator>
      <operator>select_shape_xld</operator>
      <operator>set_color</operator>
      <operator>tuple_length</operator>
      <operator>union_adjacent_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>file.hdev</name>
      <desc>Use the virtual frame grabber (file, single image)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>file_directory.hdev</name>
      <desc>Use the virtual frame grabber (read all files from directory)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_environment</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>file_exists.hdev</name>
      <desc>Check the existence of a file</desc>
      <path>hdevelop/File/Misc/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.string</method>
      <method>method.error</method>
      <method>method.file</method>
      <method>method.opsys</method>
      <method>method.functions</method>
      <operator>close_file</operator>
      <operator>delete_file</operator>
      <operator>file_exists</operator>
      <operator>fread_string</operator>
      <operator>get_system</operator>
      <operator>open_file</operator>
      <operator>system_call</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>file_sequence.hdev</name>
      <desc>Use the virtual frame grabber (file, image sequence)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>fill_interlace.hdev</name>
      <desc>Interpolate video half images</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <method>method.filter.general</method>
      <operator>dev_set_part</operator>
      <operator>fill_interlace</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fill_up.hdev</name>
      <desc>Fill up holes in regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>difference</operator>
      <operator>fill_up</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fill_up_shape.hdev</name>
      <desc>Fill up holes in regions that have a given shape</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.feat</method>
      <method>method.regionproc</method>
      <operator>difference</operator>
      <operator>fill_up_shape</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fin.hdev</name>
      <desc>Inspect a contour for fins</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.synth</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <operator>area_center</operator>
      <operator>bin_threshold</operator>
      <operator>closing_circle</operator>
      <operator>difference</operator>
      <operator>opening_rectangle1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>find_aniso_shape_model.hdev</name>
      <desc>Find SMD capacitors using shape-based matching (with anisotropic scaling and rotation)</desc>
      <path>hdevelop/Matching/Shape-Based/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>count_seconds</operator>
      <operator>create_aniso_shape_model</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>find_aniso_shape_model</operator>
      <operator>gen_contour_polygon_rounded_xld</operator>
      <operator>gen_image_const</operator>
      <operator>get_mposition</operator>
      <operator>get_shape_model_contours</operator>
      <operator>get_string_extents</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>paint_xld</operator>
      <operator>set_system</operator>
      <operator>set_tposition</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>find_cocoa_packages_local_deformable.hdev</name>
      <desc>Find a cocoa label using local deformable matching</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.ldeform</method>
      <method>method.trafo.geom</method>
      <operator>clear_deformable_model</operator>
      <operator>create_local_deformable_model</operator>
      <operator>find_local_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>vector_field_to_real</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_cocoa_packages_max_deformation.hdev</name>
      <desc>Find a cocoa label using shape-based matching with 'max_deformation'</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.shape</method>
      <method>method.trafo.geom</method>
      <operator>create_shape_model</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_local_deformable_model.hdev</name>
      <desc>Find an object despite local deformations using local deformable matching</desc>
      <path>hdevelop/Matching/Deformable/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.deform</method>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.morphol</method>
      <method>method.segm</method>
      <method>method.trafo.geom</method>
      <method>method.xld</method>
      <method>method.typeconv.ico</method>
      <operator>clear_deformable_model</operator>
      <operator>create_local_deformable_model</operator>
      <operator>crop_domain</operator>
      <operator>find_local_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>get_grayval_interpolated</operator>
      <operator>optical_flow_mg</operator>
      <operator>real_to_vector_field</operator>
      <operator>unwarp_image_vector_field</operator>
      <operator>vector_field_length</operator>
      <operator>vector_field_to_real</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_mirror_dies.hdev</name>
      <desc>Locate mirror dies on a wafer</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.trafo.geom</method>
      <method>method.match.shape</method>
      <operator>create_shape_model</operator>
      <operator>find_shape_model</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_ncc_model_defocused.hdev</name>
      <desc>Find an object despite changes in texture and focus using correlation-based matching</desc>
      <path>hdevelop/Matching/Correlation-Based/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.correl</method>
      <operator>affine_trans_region</operator>
      <operator>clear_ncc_model</operator>
      <operator>create_ncc_model</operator>
      <operator>find_ncc_model</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>find_ncc_model_defocused_precision.hdev</name>
      <desc>Examine ncc matches in images with different focuses of the lens</desc>
      <path>hdevelop/Matching/Correlation-Based/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.general</applarea>
      <method>method.match.correl</method>
      <method>method.xld</method>
      <method>method.geom</method>
      <method>method.tuple</method>
      <operator>clear_ncc_model</operator>
      <operator>create_ncc_model</operator>
      <operator>diameter_xld</operator>
      <operator>find_ncc_model</operator>
      <operator>tuple_sub</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>find_ncc_model_exposure.hdev</name>
      <desc>Find an object despite linear illumination changes using correlation-based matching</desc>
      <path>hdevelop/Matching/Correlation-Based/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.correl</method>
      <operator>affine_trans_region</operator>
      <operator>clear_ncc_model</operator>
      <operator>create_ncc_model</operator>
      <operator>find_ncc_model</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>find_neighbors.hdev</name>
      <desc>Test neighborhood relation of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.regionproc</method>
      <operator>disp_line</operator>
      <operator>expand_region</operator>
      <operator>find_neighbors</operator>
      <operator>gen_empty_region</operator>
      <operator>regiongrowing</operator>
      <operator>shape_trans</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>find_pads.hdev</name>
      <desc>Find pads on a die.</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.blob</method>
      <method>method.roi</method>
      <operator>boundary</operator>
      <operator>connection</operator>
      <operator>dev_close_window</operator>
      <operator>dev_open_window</operator>
      <operator>dev_update_pc</operator>
      <operator>dev_update_var</operator>
      <operator>dev_update_window</operator>
      <operator>dilation_circle</operator>
      <operator>edges_sub_pix</operator>
      <operator>fast_threshold</operator>
      <operator>fill_up</operator>
      <operator>fit_rectangle2_contour_xld</operator>
      <operator>gen_rectangle2_contour_xld</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape</operator>
      <operator>select_shape_xld</operator>
      <operator>shape_trans</operator>
      <operator>union1</operator>
      <operator>union_adjacent_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>find_peanut_chocolate_candies_local_deformable.hdev</name>
      <desc>Find a peanut chocolat candy label using local deformable matching</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.shape</method>
      <method>method.trafo.geom</method>
      <operator>clear_deformable_model</operator>
      <operator>create_local_deformable_model</operator>
      <operator>find_local_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_scaled_shape_model.hdev</name>
      <desc>Find objects using shape-based matching (with scaling and rotation)</desc>
      <path>hdevelop/Matching/Shape-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.visual</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>create_scaled_shape_model</operator>
      <operator>find_scaled_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>find_scratches_bandpass_fft.hdev</name>
      <desc>Demonstrate how to detect defects using a bandpass filter</desc>
      <path>hdevelop/Filters/FFT/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.surface</applarea>
      <method>method.fft</method>
      <method>method.morphol</method>
      <operator>gen_region_contour_xld</operator>
      <operator>gen_sin_bandpass</operator>
      <operator>optimize_rft_speed</operator>
      <operator>rft_generic</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_shape_model_max_deformation.hdev</name>
      <desc>Find slightly deformed objects with shape-based matching.</desc>
      <path>hdevelop/Matching/Shape-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.edgeextr</method>
      <method>method.match.shape</method>
      <method>method.morphol</method>
      <method>method.regionproc</method>
      <method>method.segm</method>
      <method>method.roi</method>
      <method>method.trafo.align</method>
      <method>method.xld</method>
      <operator>clear_shape_model</operator>
      <operator>close_contours_xld</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_smd_fast.hdev</name>
      <desc>Find SMDs on a back illuminated plate</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.regionproc</method>
      <method>method.xld</method>
      <operator>gen_rectangle2_contour_xld</operator>
      <operator>select_shape_std</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_surface_model.hdev</name>
      <desc>Find an object in a 3D scene using surface-based matching</desc>
      <path>hdevelop/3D-Matching/Surface-Based/</path>
      <industry>industry.auto</industry>
      <applarea>applarea.recog.object3d</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.match3d.surface</method>
      <method>method.poseestim</method>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <operator>affine_trans_object_model_3d</operator>
      <operator>axis_angle_to_quat</operator>
      <operator>clear_object_model_3d</operator>
      <operator>clear_surface_matching_result</operator>
      <operator>clear_surface_model</operator>
      <operator>convert_pose_type</operator>
      <operator>create_surface_model</operator>
      <operator>find_surface_model</operator>
      <operator>get_line_of_sight</operator>
      <operator>get_object_model_3d_params</operator>
      <operator>get_surface_matching_result</operator>
      <operator>global</operator>
      <operator>hom_mat3d_translate_local</operator>
      <operator>project_object_model_3d</operator>
      <operator>quat_to_hom_mat3d</operator>
      <operator>xyz_to_object_model_3d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_text_bottle_label.hdev</name>
      <desc>Segment text on a bottle label for an OCR task</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.food</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.segm</method>
      <operator>clear_text_model</operator>
      <operator>clear_text_result</operator>
      <operator>create_text_model</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>find_text</operator>
      <operator>get_text_model_param</operator>
      <operator>get_text_object</operator>
      <operator>get_text_result</operator>
      <operator>set_text_model_param</operator>
      <operator>text_line_orientation</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>find_text_dongle.hdev</name>
      <desc>Segment text on a dongle for an OCR task</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.segm</method>
      <method>method.ocr</method>
      <operator>clear_text_model</operator>
      <operator>clear_text_result</operator>
      <operator>create_text_model</operator>
      <operator>do_ocr_word_mlp</operator>
      <operator>find_text</operator>
      <operator>set_text_model_param</operator>
      <operator>text_line_orientation</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>first_example_acquisition_falcon.hdev</name>
      <desc>Present the basic operators for image acquisition</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <method>method.segm</method>
      <method>method.visual</method>
      <operator>auto_threshold</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>get_mposition</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_system</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>first_example_shape_matching.hdev</name>
      <desc>Introduce HALCON's shape-based matching</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.visual</method>
      <method>method.match.shape</method>
      <method>method.roi</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_shape_model</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>grab_image</operator>
      <operator>inspect_shape_model</operator>
      <operator>open_framegrabber</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>fit_circle_contour_xld.hdev</name>
      <desc>Approximate an XLD contour with a circle</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.xld</method>
      <operator>fit_circle_contour_xld</operator>
      <operator>gen_circle_contour_xld</operator>
      <operator>gen_contour_region_xld</operator>
      <operator>rgb1_to_gray</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fit_ellipse_contour_xld.hdev</name>
      <desc>Approximate XLD contours with ellipses or elliptic arcs</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.xld</method>
      <operator>complement</operator>
      <operator>edges_sub_pix</operator>
      <operator>fit_ellipse_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>gen_image_const</operator>
      <operator>get_contour_xld</operator>
      <operator>paint_region</operator>
      <operator>union2</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fit_ellipse_tooth_rim_xld.hdev</name>
      <desc>Approximate the contour of a tooth rim with an ellipse to find its center.</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.machine</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.funct1d</method>
      <method>method.feat</method>
      <operator>clip_contours_xld</operator>
      <operator>create_funct_1d_array</operator>
      <operator>dev_open_window</operator>
      <operator>dev_set_part</operator>
      <operator>dist_ellipse_contour_points_xld</operator>
      <operator>dist_ellipse_contour_xld</operator>
      <operator>edges_sub_pix</operator>
      <operator>fit_ellipse_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>length_xld</operator>
      <operator>local_min_max_funct_1d</operator>
      <operator>set_tposition</operator>
      <operator>tuple_max</operator>
      <operator>tuple_median</operator>
      <operator>tuple_sort_index</operator>
      <operator>write_string</operator>
      <operator>zero_crossings_funct_1d</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>fit_line_contour_xld.hdev</name>
      <desc>Approximate XLD contours with line segments</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.io</method>
      <method>method.visual</method>
      <method>method.xld</method>
      <operator>disp_line</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>get_mbutton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fit_primitives_object_model_3d.hdev</name>
      <desc>Fit a cylinder into 2.5D data</desc>
      <path>hdevelop/3D-Tools/3D-Segmentation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object3d</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.fitting3d</method>
      <operator>clear_object_model_3d</operator>
      <operator>fit_primitives_object_model_3d</operator>
      <operator>get_object_model_3d_params</operator>
      <operator>object_model_3d_to_xyz</operator>
      <operator>xyz_to_object_model_3d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>fit_rectangle2_contour_xld.hdev</name>
      <desc>Detect errors in punched rectangular holes.</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.functions</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.feat</method>
      <method>method.visual</method>
      <method>method.tuple</method>
      <operator>boundary</operator>
      <operator>dilation_rectangle1</operator>
      <operator>dist_rectangle2_contour_points_xld</operator>
      <operator>edges_sub_pix</operator>
      <operator>fast_threshold</operator>
      <operator>fit_rectangle2_contour_xld</operator>
      <operator>gen_rectangle2_contour_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>get_string_extents</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape_xld</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>fnew_line.hdev</name>
      <desc>Write line feeds to a text file</desc>
      <path>hdevelop/File/Text/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <operator>close_file</operator>
      <operator>fnew_line</operator>
      <operator>fwrite_string</operator>
      <operator>open_file</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>font.hdev</name>
      <desc>Read printed characters with interactive selection</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.visual</method>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>dev_set_shape</operator>
      <operator>dilation_rectangle1</operator>
      <operator>do_ocr_single_class_mlp</operator>
      <operator>get_params_ocr_class_mlp</operator>
      <operator>get_region_index</operator>
      <operator>min_max_gray</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>scale_image</operator>
      <operator>set_font</operator>
      <operator>shape_trans</operator>
      <operator>sort_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fontt.hdev</name>
      <desc>Train printed characters and reclassify them</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.error</method>
      <operator>append_ocr_trainf</operator>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>copy_obj</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>delete_file</operator>
      <operator>dev_set_shape</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>min_max_gray</operator>
      <operator>reduce_domain</operator>
      <operator>scale_image</operator>
      <operator>sort_region</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>write_ocr_class_mlp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>for.hdev</name>
      <desc>Use a for loop to iterate over extracted blobs</desc>
      <path>hdevelop/Control/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <operator>else</operator>
      <operator>endfor</operator>
      <operator>endif</operator>
      <operator>for</operator>
      <operator>stop</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>forest.hdev</name>
      <desc>Extract trees and meadows from forest</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.blob</method>
      <method>method.color</method>
      <method>method.visual</method>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <method>method.roi</method>
      <method>method.tuple</method>
      <operator>closing_circle</operator>
      <operator>complement</operator>
      <operator>connection</operator>
      <operator>decompose3</operator>
      <operator>difference</operator>
      <operator>invert_image</operator>
      <operator>min_max_gray</operator>
      <operator>opening_circle</operator>
      <operator>reduce_domain</operator>
      <operator>select_gray</operator>
      <operator>select_shape_std</operator>
      <operator>smooth_image</operator>
      <operator>threshold</operator>
      <operator>union1</operator>
      <operator>union2</operator>
      <operator>watersheds</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fread_char.hdev</name>
      <desc>Read characters from a text file</desc>
      <path>hdevelop/File/Text/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <operator>close_file</operator>
      <operator>fnew_line</operator>
      <operator>fread_char</operator>
      <operator>fread_string</operator>
      <operator>fwrite_string</operator>
      <operator>open_file</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fread_line.hdev</name>
      <desc>Read lines from a text file</desc>
      <path>hdevelop/File/Text/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <operator>close_file</operator>
      <operator>fread_line</operator>
      <operator>fwrite_string</operator>
      <operator>open_file</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>fread_string.hdev</name>
      <desc>Read strings from a text file</desc>
      <path>hdevelop/File/Text/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <operator>close_file</operator>
      <operator>fread_string</operator>
      <operator>open_file</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>frei_amp.hdev</name>
      <desc>Extract edges (amplitude) using the Frei-Chen operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>frei_amp</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>frei_dir.hdev</name>
      <desc>Extract edges (amplitude and direction) using the Frei-Chen operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>frei_dir</operator>
      <operator>nonmax_suppression_dir</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fuse.hdev</name>
      <desc>Measure the thickness of a fuse wire</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.visual</method>
      <operator>close_measure</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>gen_rectangle2</operator>
      <operator>measure_pairs</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>fuzzy_entropy.hdev</name>
      <desc>Calculate the fuzzy entropy of regions</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.feat</method>
      <method>method.texture</method>
      <operator>fuzzy_entropy</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>fuzzy_measure_pin.hdev</name>
      <desc>Measure pins of an IC using fuzzy measuring</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.visual</method>
      <operator>close_measure</operator>
      <operator>create_funct_1d_pairs</operator>
      <operator>disp_circle</operator>
      <operator>for</operator>
      <operator>fuzzy_measure_pairs</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>set_fuzzy_measure_norm_pair</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>fuzzy_measure_switch.hdev</name>
      <desc>Determine the width of and the distance between the pins of a switch with a fuzzy measure object</desc>
      <path>solution_guide/1d_measuring/</path>
      <industry>industry.general</industry>
      <industry>industry.electr</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.funct1d</method>
      <method>method.visual</method>
      <operator>close_measure</operator>
      <operator>create_funct_1d_pairs</operator>
      <operator>fuzzy_measure_pairs</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>gen_rectangle2</operator>
      <operator>measure_pairs</operator>
      <operator>set_fuzzy_measure</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>fuzzy_perimeter.hdev</name>
      <desc>Calculate the fuzzy perimeter of a region</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.feat</method>
      <method>method.texture</method>
      <operator>fuzzy_perimeter</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gauss_image.hdev</name>
      <desc>Smooth an image using discrete gauss functions</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>dev_set_colored</operator>
      <operator>dev_set_draw</operator>
      <operator>gauss_image</operator>
      <operator>watersheds</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_arbitrary_distortion_map.hdev</name>
      <desc>Rectify an arbitrarily distorted image using a regular grid with known correspondences</desc>
      <path>hdevelop/Tools/Grid-Rectification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.rectif</method>
      <method>method.visual</method>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_arbitrary_distortion_map</operator>
      <operator>map_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>gen_checker_region.hdev</name>
      <desc>Create a chessboard region</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>connection</operator>
      <operator>dev_set_colored</operator>
      <operator>gen_checker_region</operator>
      <operator>get_system</operator>
      <operator>set_system</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_circle.hdev</name>
      <desc>Create a circle region</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.feat</method>
      <operator>gen_circle</operator>
      <operator>inner_circle</operator>
      <operator>regiongrowing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_contour_region_xld.hdev</name>
      <desc>Extract the contours of regions as XLD objects</desc>
      <path>hdevelop/XLD/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.xld</method>
      <operator>gen_contour_region_xld</operator>
      <operator>regiongrowing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_cooc_matrix.hdev</name>
      <desc>Calculate a co-occurrence matrix</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.texture</method>
      <operator>dev_set_lut</operator>
      <operator>gen_cooc_matrix</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_ellipse.hdev</name>
      <desc>Create an ellipse region</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.feat</method>
      <operator>elliptic_axis</operator>
      <operator>gen_ellipse</operator>
      <operator>regiongrowing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_empty_region.hdev</name>
      <desc>Create an empty region</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>gen_empty_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_filter_mask.hdev</name>
      <desc>Store a filter mask in the spatial domain as a real-image</desc>
      <path>hdevelop/Filters/FFT/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.fft</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>fft_image</operator>
      <operator>gen_filter_mask</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_gauss_pyramid.hdev</name>
      <desc>Create a pyramid of scaled down images</desc>
      <path>hdevelop/Filters/Match/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>count_obj</operator>
      <operator>gen_gauss_pyramid</operator>
      <operator>select_obj</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_grid_region.hdev</name>
      <desc>Create a grid region consisting of lines or points</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.roi</method>
      <method>method.morphol</method>
      <method>method.segm</method>
      <operator>dilation_rectangle1</operator>
      <operator>gen_grid_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_image_interleaved.hdev</name>
      <desc>Demonstrate various ways of creating a three-channel HALCON image from an input matrix with interleaved pixels.</desc>
      <path>hdevelop/Image/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <operator>affine_trans_image_size</operator>
      <operator>clip_region</operator>
      <operator>convert_image_type</operator>
      <operator>decompose3</operator>
      <operator>gen_grid_region</operator>
      <operator>gen_image_const</operator>
      <operator>gen_image_interleaved</operator>
      <operator>get_image_pointer3</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>move_region</operator>
      <operator>overpaint_gray</operator>
      <operator>scale_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>gen_mean_filter.hdev</name>
      <desc>Demonstrate how to filter an image using a circular mean filter</desc>
      <path>hdevelop/Filters/FFT/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.fft</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>convol_fft</operator>
      <operator>gen_mean_filter</operator>
      <operator>mean_image</operator>
      <operator>rft_generic</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>gen_measure_arc.hdev</name>
      <desc>Measure edges perpendicular to a given arc</desc>
      <path>hdevelop/1D-Measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <operator>close_measure</operator>
      <operator>distance_pp</operator>
      <operator>gen_measure_arc</operator>
      <operator>measure_pos</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_measure_rectangle2.hdev</name>
      <desc>Measure edges perpendicular to a given line</desc>
      <path>hdevelop/1D-Measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <operator>close_measure</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>gen_rectangle2</operator>
      <operator>measure_pairs</operator>
      <operator>measure_pos</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_nurbs_interp.hdev</name>
      <desc>Create a NURBS curve that interpolates a list of points</desc>
      <path>hdevelop/XLD/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>gen_contour_nurbs_xld</operator>
      <operator>gen_nurbs_interp</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>gen_parallel_contour_xld.hdev</name>
      <desc>Compute the parallel contour of an XLD contour</desc>
      <path>hdevelop/XLD/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>edges_sub_pix</operator>
      <operator>gen_image_const</operator>
      <operator>gen_parallel_contour_xld</operator>
      <operator>paint_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_principal_comp_trans.hdev</name>
      <desc>Extract forest, water, and trees from a multi-channel image using principal component analysis</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.classif</method>
      <operator>class_2dim_sup</operator>
      <operator>closing_circle</operator>
      <operator>convert_image_type</operator>
      <operator>decompose7</operator>
      <operator>dilation_circle</operator>
      <operator>disp_rectangle1</operator>
      <operator>gen_principal_comp_trans</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>histo_2dim</operator>
      <operator>linear_trans_color</operator>
      <operator>scale_image</operator>
      <operator>select_shape_std</operator>
      <operator>set_rgb</operator>
      <operator>set_tposition</operator>
      <operator>threshold</operator>
      <operator>write_string</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>gen_projective_mosaic.hdev</name>
      <desc>Combine several images of a PCB into a large mosaic image</desc>
      <path>hdevelop/Tools/Mosaicking/</path>
      <industry>industry.general</industry>
      <industry>industry.semicon</industry>
      <applarea>applarea.general</applarea>
      <method>method.mosaic</method>
      <method>method.functions</method>
      <method>method.match.point</method>
      <method>method.filter.points</method>
      <method>method.visual</method>
      <operator>bundle_adjust_mosaic</operator>
      <operator>dev_set_window_extents</operator>
      <operator>gen_bundle_adjusted_mosaic</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>gen_image_const</operator>
      <operator>gen_projective_mosaic</operator>
      <operator>paint_region</operator>
      <operator>points_foerstner</operator>
      <operator>proj_match_points_ransac</operator>
      <operator>tile_images_offset</operator>
      <operator>wait_seconds</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>gen_random_region.hdev</name>
      <desc>Create a random region (noise)</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>gen_random_region</operator>
      <operator>remove_noise_region</operator>
      <operator>runlength_features</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_random_regions.hdev</name>
      <desc>Create a region with random parameters (circle, rectangle, ...)</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>gen_random_regions</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_rectangle1.hdev</name>
      <desc>Create a rectangle region parallel to the coordinate axes</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>closing_rectangle1</operator>
      <operator>gen_rectangle1</operator>
      <operator>smallest_rectangle1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_rectangle2.hdev</name>
      <desc>Create a rectangle region of arbitrary orientation</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>gen_rectangle2</operator>
      <operator>smallest_rectangle2</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_region_histo.hdev</name>
      <desc>Create a region based on a histogram (256 values)</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.visual</method>
      <method>method.funct1d</method>
      <operator>create_funct_1d_array</operator>
      <operator>funct_1d_to_pairs</operator>
      <operator>gen_region_histo</operator>
      <operator>gray_histo</operator>
      <operator>smooth_funct_1d_gauss</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_region_hline.hdev</name>
      <desc>Create a line region based on Hessian normal form</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>gen_region_hline</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_region_line.hdev</name>
      <desc>Create a line region based on start and end point</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>gen_region_line</operator>
      <operator>intensity</operator>
      <operator>set_check</operator>
      <operator>set_gray</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_region_points.hdev</name>
      <desc>Create a point region</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>gen_region_points</operator>
      <operator>get_mbutton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_region_polygon.hdev</name>
      <desc>Create a polygon region</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>gen_region_polygon</operator>
      <operator>get_mbutton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_region_polygon_filled.hdev</name>
      <desc>Create a filled polygon region</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>gen_region_polygon_filled</operator>
      <operator>get_mbutton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_region_runs.hdev</name>
      <desc>Create a region based on horizontal lines (runlength coding)</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>gen_region_runs</operator>
      <operator>get_mbutton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gen_training_file.hdev</name>
      <desc>Generate a training file for the OCR</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.file</method>
      <method>method.ocr</method>
      <operator>append_ocr_trainf</operator>
      <operator>delete_file</operator>
      <operator>intersection</operator>
      <operator>smallest_rectangle1</operator>
      <operator>sort_region</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>generate_system_font.hdev</name>
      <desc>Create OCR training samples from system fonts</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.segm</method>
      <method>method.trafo.geom</method>
      <operator>clear_ocr_class_mlp</operator>
      <operator>clear_text_model</operator>
      <operator>clear_text_result</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>create_text_model</operator>
      <operator>distance_transform</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>get_text_object</operator>
      <operator>query_font</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>read_ocr_trainf</operator>
      <operator>set_text_model_param</operator>
      <operator>text_line_orientation</operator>
      <operator>tile_images_offset</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>unwarp_image_vector_field</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>generic_socket_receive_data.hdev</name>
      <desc>Use generic sockets to receive data</desc>
      <path>hdevelop/System/Sockets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.comm</method>
      <operator>close_socket</operator>
      <operator>get_socket_param</operator>
      <operator>open_socket_accept</operator>
      <operator>receive_data</operator>
      <operator>send_data</operator>
      <operator>set_socket_param</operator>
      <operator>socket_accept_connect</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>generic_socket_send_data.hdev</name>
      <desc>Use generic sockets to send data</desc>
      <path>hdevelop/System/Sockets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.comm</method>
      <operator>close_socket</operator>
      <operator>get_socket_param</operator>
      <operator>open_socket_connect</operator>
      <operator>receive_data</operator>
      <operator>send_data</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>genicamtl.hdev</name>
      <desc>Grab images from a GenICamTL interface (benchmark test)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>genicamtl_parameters.hdev</name>
      <desc>Grab images via the GenICamTL interface (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>genicamtl_simple.hdev</name>
      <desc>Use the GenICamTL interface (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>get_circle_pose.hdev</name>
      <desc>Determine the pose of circles in 3D from their perspective 2D projections</desc>
      <path>hdevelop/Transformations/Poses/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.calib</method>
      <method>method.visual</method>
      <method>method.functions</method>
      <method>method.numeric</method>
      <method>method.poseestim</method>
      <method>method.tuple</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_point_3d</operator>
      <operator>assign</operator>
      <operator>binomial_filter</operator>
      <operator>concat_obj</operator>
      <operator>count_obj</operator>
      <operator>create_pose</operator>
      <operator>edges_sub_pix</operator>
      <operator>find_caltab</operator>
      <operator>gen_circle_contour_xld</operator>
      <operator>gen_empty_obj</operator>
      <operator>get_circle_pose</operator>
      <operator>get_contour_xld</operator>
      <operator>get_mbutton</operator>
      <operator>get_mposition</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>select_contours_xld</operator>
      <operator>sim_caltab</operator>
      <operator>tuple_sort_index</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>get_grayval_contour_xld.hdev</name>
      <desc>Get gray values at the positions of an XLD contour</desc>
      <path>hdevelop/Image/Access/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.funct1d</method>
      <method>method.xld</method>
      <method>method.tuple</method>
      <operator>create_funct_1d_array</operator>
      <operator>get_grayval_contour_xld</operator>
      <operator>local_min_max_funct_1d</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>get_grayval_interpolated.hdev</name>
      <desc>Get gray values at specific row and column positions</desc>
      <path>hdevelop/Image/Access/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.funct1d</method>
      <method>method.feat</method>
      <method>method.tuple</method>
      <operator>create_funct_1d_array</operator>
      <operator>get_grayval_interpolated</operator>
      <operator>local_min_max_funct_1d</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>get_modules.hdev</name>
      <desc>Query the used modules and the module key</desc>
      <path>hdevelop/System/Database/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.general</method>
      <operator>close_edges</operator>
      <operator>get_modules</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>get_mposition.hdev</name>
      <desc>Query mouse position and button status</desc>
      <path>hdevelop/Graphics/Mouse/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.io</method>
      <method>method.error</method>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>dev_set_preferences</operator>
      <operator>disp_rectangle1</operator>
      <operator>get_grayval</operator>
      <operator>get_mposition</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>get_operator_info.hdev</name>
      <desc>Query information about operators</desc>
      <path>hdevelop/System/Information/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.general</method>
      <operator>continue</operator>
      <operator>get_operator_info</operator>
      <operator>get_operator_name</operator>
      <operator>get_param_names</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>get_param_info.hdev</name>
      <desc>Query information about parameters of operators</desc>
      <path>hdevelop/System/Information/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.general</method>
      <operator>get_operator_name</operator>
      <operator>get_param_info</operator>
      <operator>get_param_names</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>get_rectangle_pose_barcode.hdev</name>
      <desc>Estimate 3D pose of bar codes</desc>
      <path>hdevelop/Applications/Position-Recognition-3D/</path>
      <industry>industry.metal</industry>
      <industry>industry.machine</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.poseestim</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.geom</method>
      <method>method.visual</method>
      <method>method.trafo.wcoord</method>
      <operator>affine_trans_point_3d</operator>
      <operator>area_center</operator>
      <operator>clear_bar_code_model</operator>
      <operator>close_contours_xld</operator>
      <operator>complement</operator>
      <operator>connection</operator>
      <operator>contour_to_world_plane_xld</operator>
      <operator>create_bar_code_model</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>difference</operator>
      <operator>dilation_rectangle1</operator>
      <operator>distance_pp</operator>
      <operator>dyn_threshold</operator>
      <operator>edges_sub_pix</operator>
      <operator>erosion_rectangle1</operator>
      <operator>fill_up</operator>
      <operator>find_bar_code</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_rectangle1</operator>
      <operator>get_rectangle_pose</operator>
      <operator>get_rgb</operator>
      <operator>get_system</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>image_to_world_plane</operator>
      <operator>intersection</operator>
      <operator>mean_image</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape_xld</operator>
      <operator>set_origin_pose</operator>
      <operator>set_rgb</operator>
      <operator>set_system</operator>
      <operator>smallest_rectangle1_xld</operator>
      <operator>tuple_find</operator>
      <operator>union_adjacent_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>get_region_contour.hdev</name>
      <desc>Access the contour of an object</desc>
      <path>hdevelop/Regions/Access/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>disp_line</operator>
      <operator>get_region_contour</operator>
      <operator>select_shape_std</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>get_region_index.hdev</name>
      <desc>Find regions that contain a given pixel</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.io</method>
      <method>method.regionproc</method>
      <operator>get_mbutton</operator>
      <operator>get_region_index</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>get_region_thickness.hdev</name>
      <desc>Calculate the thickness of regions (along the main axis)</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>get_region_thickness</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>get_support_vector_class_svm.hdev</name>
      <desc>Read out the support vectors from an SVM and visualize them along with the class boundaries</desc>
      <path>hdevelop/Classification/Support-Vector-Machines/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.classif</method>
      <method>method.visual</method>
      <operator>add_sample_class_svm</operator>
      <operator>classify_class_svm</operator>
      <operator>clear_class_svm</operator>
      <operator>create_class_svm</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_image_const</operator>
      <operator>gen_region_points</operator>
      <operator>get_region_points</operator>
      <operator>get_sample_class_svm</operator>
      <operator>get_support_vector_class_svm</operator>
      <operator>get_support_vector_num_class_svm</operator>
      <operator>intersection</operator>
      <operator>label_to_region</operator>
      <operator>set_grayval</operator>
      <operator>train_class_svm</operator>
      <operator>union2</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>gigevision.hdev</name>
      <desc>Grab images from a GigE Vision compliant camera (benchmark test)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>gigevision_crop.hdev</name>
      <desc>Grab images via the GigEVision interface (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>gigevision_forceip.hdev</name>
      <desc>Use ForceIP to correctly configure a misconfigured GigEVision device</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_regexp_match</operator>
      <operator>tuple_regexp_select</operator>
      <operator>tuple_str_first_n</operator>
      <operator>tuple_str_last_n</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>gigevision_frame_rate.hdev</name>
      <desc>Grab images from a GigE Vision compliant camera (frame rate)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>gigevision_parameters.hdev</name>
      <desc>Grab images via the GigEVision interface (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_file</operator>
      <operator>close_framegrabber</operator>
      <operator>fwrite_string</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>gigevision_simple.hdev</name>
      <desc>Use the GigEVision interface (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>ginga++.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (benchmark test)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>ginga++_2cameras.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (two cameras)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>ginga++_capture_freq.hdev</name>
      <desc>Capture frequency control of a LinX GINGA++ frame grabber board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>ginga++_continuous.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (continuous grabbing) (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>ginga++_crop.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>ginga++_external_drive.hdev</name>
      <desc>Grab simultaneously with two cameras using a LinX GINGA++ frame grabber board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>ginga++_frame_exposure.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (frame exposure)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>ginga++_parameters.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (parameters)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>ginga++_sequence.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (sequence grabbing)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>ginga++_simple.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>ginga++_trigger.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (triggering)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>ginga++_walking.hdev</name>
      <desc>Use a LinX GINGA++ frame grabber board (continuous grabbing)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.4</newinversion>
   </example>
   <example>
      <name>gray_closing_rect.hdev</name>
      <desc>Perform a gray value closing with a rectangular mask</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>gray_closing_rect</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>gray_closing_shape.hdev</name>
      <desc>Perform a gray value closing within a chosen shape for each point</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>gray_closing_shape</operator>
      <operator>sub_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>gray_dilation_rect.hdev</name>
      <desc>Determine the maximum gray value within a rectangle for each point</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>gray_dilation_rect</operator>
      <operator>gray_erosion_rect</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gray_dilation_shape.hdev</name>
      <desc>Perform a gray value dilation within a chosen shape for each point</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>gray_dilation_shape</operator>
      <operator>gray_erosion_shape</operator>
      <operator>sub_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>gray_erosion_rect.hdev</name>
      <desc>Determine the minimum gray value within a rectangle for each point</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>gray_dilation_rect</operator>
      <operator>gray_erosion_rect</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gray_erosion_shape.hdev</name>
      <desc>Perform a gray value erosion within a chosen shape for each point</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>gray_dilation_shape</operator>
      <operator>gray_erosion_shape</operator>
      <operator>sub_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>gray_erosion_subpix.hdev</name>
      <desc>Show how to use gray_erosion_shape with subpixel-precision</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <operator>gray_erosion_shape</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>gray_features.hdev</name>
      <desc>Calculate standard gray value features</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.feat</method>
      <operator>area_center</operator>
      <operator>area_center_gray</operator>
      <operator>connection</operator>
      <operator>elliptic_axis</operator>
      <operator>elliptic_axis_gray</operator>
      <operator>select_shape</operator>
      <operator>threshold</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>gray_histo.hdev</name>
      <desc>Calculate the gray value distribution for a region</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.visual</method>
      <operator>gen_region_histo</operator>
      <operator>gray_histo</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gray_histo_range.hdev</name>
      <desc>Calculate the gray value histogram of an image in a user-defined gray value range</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>gray_histo_range</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>gray_moments.hdev</name>
      <desc>Calculate gray value moments and approximate by a plane</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>dev_set_lut</operator>
      <operator>gen_image_gray_ramp</operator>
      <operator>moments_gray_plane</operator>
      <operator>sub_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>gray_opening.hdev</name>
      <desc>Segment drill holes using gray value morphology</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.morphol</method>
      <method>method.segm</method>
      <operator>gray_closing</operator>
      <operator>gray_opening</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>gray_opening_rect.hdev</name>
      <desc>Perform a gray value opening with a rectangular mask</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>gray_opening_rect</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>gray_opening_shape.hdev</name>
      <desc>Perform a gray value opening within a chosen shape for each point</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>gray_opening_shape</operator>
      <operator>sub_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>gray_projections.hdev</name>
      <desc>Calculate horizontal and vertical gray-value projections of a region</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>disp_line</operator>
      <operator>gray_projections</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>grid_rectification.hdev</name>
      <desc>Rectify an arbitrarily distorted image using a regular grid</desc>
      <path>hdevelop/Tools/Grid-Rectification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <applarea>applarea.general</applarea>
      <method>method.trafo.rectif</method>
      <method>method.barcode</method>
      <method>method.roi</method>
      <method>method.visual</method>
      <method>method.error</method>
      <operator>clear_bar_code_model</operator>
      <operator>connect_grid_points</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>find_rectification_grid</operator>
      <operator>gen_grid_rectification_map</operator>
      <operator>get_bar_code_object</operator>
      <operator>map_image</operator>
      <operator>saddle_points_sub_pix</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>grid_rectification_arbitrary_distortion.hdev</name>
      <desc>Determine differences between two printed pages, even if there are distortions in the vertical direction</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <method>method.blob</method>
      <method>method.trafo.rectif</method>
      <method>method.funct1d</method>
      <method>method.match.comp</method>
      <method>method.visual</method>
      <operator>clear_component_model</operator>
      <operator>create_component_model</operator>
      <operator>create_funct_1d_pairs</operator>
      <operator>crop_part</operator>
      <operator>dyn_threshold</operator>
      <operator>elliptic_axis</operator>
      <operator>find_component_model</operator>
      <operator>funct_1d_to_pairs</operator>
      <operator>gen_arbitrary_distortion_map</operator>
      <operator>intersection</operator>
      <operator>map_image</operator>
      <operator>mean_image</operator>
      <operator>sample_funct_1d</operator>
      <operator>smallest_rectangle1</operator>
      <operator>sub_image</operator>
      <operator>tuple_gen_const</operator>
      <operator>tuple_sort_index</operator>
      <newinversion>7.0.1</newinversion>
   </example>
   <example>
      <name>grid_rectification_ruled_surface.hdev</name>
      <desc>Rectify an arbitrarily distorted image using a regular grid</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <applarea>applarea.general</applarea>
      <method>method.trafo.rectif</method>
      <method>method.barcode</method>
      <method>method.roi</method>
      <method>method.visual</method>
      <method>method.error</method>
      <operator>clear_bar_code_model</operator>
      <operator>connect_grid_points</operator>
      <operator>create_bar_code_model</operator>
      <operator>create_rectification_grid</operator>
      <operator>find_bar_code</operator>
      <operator>find_rectification_grid</operator>
      <operator>gen_grid_rectification_map</operator>
      <operator>map_image</operator>
      <operator>saddle_points_sub_pix</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>7.0.1</newinversion>
   </example>
   <example>
      <name>hamming_change_region.hdev</name>
      <desc>Generate a region with a given Hamming distance to a given region</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>hamming_change_region</operator>
      <operator>hamming_distance</operator>
      <operator>union1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>hamming_distance.hdev</name>
      <desc>Calculate the Hamming distance between two regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>hamming_distance</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>handeye_create_robot_poses.hdev</name>
      <desc>Allow the user to input robot poses for hand-eye calibration and writes them into files</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.robotvis</applarea>
      <method>method.calib.handeye</method>
      <method>method.visual</method>
      <method>method.file</method>
      <method>method.trafo.geom</method>
      <operator>clear_window</operator>
      <operator>create_pose</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_rotate_local</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>hom_mat3d_translate</operator>
      <operator>read_string</operator>
      <operator>write_pose</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>handeye_movingcam_calibration.hdev</name>
      <desc>Perform hand-eye calibration for a hand-eye system with a moving camera</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.robotvis</applarea>
      <method>method.calib.handeye</method>
      <method>method.calib</method>
      <method>method.visual</method>
      <method>method.file</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_point_3d</operator>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>hand_eye_calibration</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>read_cam_par</operator>
      <operator>read_pose</operator>
      <operator>write_cam_par</operator>
      <operator>write_pose</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>handeye_stationarycam_calibration.hdev</name>
      <desc>Perform hand-eye calibration for a hand-eye system with a stationary camera</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.robotvis</applarea>
      <method>method.calib.handeye</method>
      <method>method.calib</method>
      <method>method.visual</method>
      <method>method.file</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_point_3d</operator>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>hand_eye_calibration</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>read_cam_par</operator>
      <operator>read_pose</operator>
      <operator>write_cam_par</operator>
      <operator>write_pose</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>handeye_stationarycam_grasp_nut.hdev</name>
      <desc>Calculate pose for grasping a nut based on results of hand-eye calibration for a stationary camera</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.robotvis</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.calib.handeye</method>
      <method>method.visual</method>
      <method>method.file</method>
      <method>method.trafo.geom</method>
      <method>method.poseestim</method>
      <method>method.xld</method>
      <method>method.blob</method>
      <method>method.trafo.wcoord</method>
      <operator>affine_trans_point_3d</operator>
      <operator>break</operator>
      <operator>caltab_points</operator>
      <operator>convert_pose_type</operator>
      <operator>dev_close_inspect_ctrl</operator>
      <operator>dev_inspect_ctrl</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_parallels_xld</operator>
      <operator>gen_polygons_xld</operator>
      <operator>get_parallels_xld</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>hom_mat3d_translate</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>read_cam_par</operator>
      <operator>read_pose</operator>
      <operator>segment_contours_xld</operator>
      <operator>vector_to_pose</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>harmonic_interpolation.hdev</name>
      <desc>Fill up unreconstructed areas in a distance image created by stereo reconstruction</desc>
      <path>hdevelop/Filters/Inpainting/</path>
      <industry>industry.semicon</industry>
      <industry>industry.electr</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.measure.3D</applarea>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.filter.general</method>
      <operator>binocular_distance</operator>
      <operator>complement</operator>
      <operator>emphasize</operator>
      <operator>full_domain</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>get_domain</operator>
      <operator>harmonic_interpolation</operator>
      <operator>map_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>height_above_reference_plane_from_stereo.hdev</name>
      <desc>Extract chips using height information from binocular stereo</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.feat</method>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>binocular_disparity</operator>
      <operator>binocular_distance</operator>
      <operator>emphasize</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>gen_image_surface_first_order</operator>
      <operator>get_domain</operator>
      <operator>intersection</operator>
      <operator>invert_image</operator>
      <operator>map_image</operator>
      <operator>moments_gray_plane</operator>
      <operator>scale_image</operator>
      <operator>sub_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>height_displacement.hdev</name>
      <desc>Calculate height displacements (for known heights)</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.measure.3D</applarea>
      <method>method.trafo.wcoord</method>
      <operator>affine_trans_point_3d</operator>
      <operator>distance_pp</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>read_cam_par</operator>
      <operator>read_pose</operator>
      <operator>set_origin_pose</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>high.hdev</name>
      <desc>Extract high objects</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.filter.general</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <operator>clip_region</operator>
      <operator>dual_rank</operator>
      <operator>dyn_threshold</operator>
      <operator>gen_disc_se</operator>
      <operator>get_system</operator>
      <operator>gray_tophat</operator>
      <operator>mean_image</operator>
      <operator>move_region</operator>
      <operator>scale_image_max</operator>
      <operator>set_system</operator>
      <operator>sub_image</operator>
      <operator>zoom_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>highpass_image.hdev</name>
      <desc>Extract high frequency components from an image</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>highpass_image</operator>
      <operator>opening_circle</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>histo_2dim.hdev</name>
      <desc>Calculate a two-dimensional histogram (based on two gray value channels)</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.texture</method>
      <method>method.feat</method>
      <operator>dev_set_lut</operator>
      <operator>histo_2dim</operator>
      <operator>texture_laws</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>histo_to_thresh.hdev</name>
      <desc>Determine gray value thresholds from a histogram</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>gray_histo</operator>
      <operator>histo_to_thresh</operator>
      <operator>threshold</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>holes.hdev</name>
      <desc>Extract positions and radii of holes</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.roi</method>
      <method>method.blob</method>
      <method>method.visual</method>
      <method>method.numeric</method>
      <method>method.functions</method>
      <operator>elliptic_axis</operator>
      <operator>reduce_domain</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>hom_mat2d_rotate.hdev</name>
      <desc>Apply a rotation using a homogeneous 2D transformation matrix</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <operator>affine_trans_image</operator>
      <operator>gen_image_gray_ramp</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>set_grayval</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>hom_mat2d_slant.hdev</name>
      <desc>Apply a slant using a homogeneous 2D transformation matrix</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <operator>affine_trans_image</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_slant</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>hom_mat2d_to_affine_par.hdev</name>
      <desc>Decompose an affine transformation into geometric parameters</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.io</method>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <operator>affine_trans_image</operator>
      <operator>draw_point</operator>
      <operator>hom_mat2d_to_affine_par</operator>
      <operator>vector_to_hom_mat2d</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>hom_mat2d_translate.hdev</name>
      <desc>Apply a translation using a homogeneous 2D transformation matrix</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <operator>affine_trans_image</operator>
      <operator>gen_image_gray_ramp</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>set_grayval</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>hom_mat_3d_from_3d_point_correspondences.hdev</name>
      <desc>Estimate a 3D homography from given 3D point correspondences</desc>
      <path>hdevelop/Matrix/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.linalg</method>
      <method>method.numeric</method>
      <method>method.poseestim</method>
      <method>method.trafo.wcoord</method>
      <operator>add_matrix_mod</operator>
      <operator>clear_matrix</operator>
      <operator>create_matrix</operator>
      <operator>create_pose</operator>
      <operator>determinant_matrix</operator>
      <operator>get_full_matrix</operator>
      <operator>get_size_matrix</operator>
      <operator>get_sub_matrix</operator>
      <operator>get_value_matrix</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>mean_matrix</operator>
      <operator>mult_matrix</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>scale_matrix</operator>
      <operator>set_sub_matrix</operator>
      <operator>set_value_matrix</operator>
      <operator>sub_matrix</operator>
      <operator>sum_matrix</operator>
      <operator>svd_matrix</operator>
      <operator>transpose_matrix_mod</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>hom_vector_to_proj_hom_mat2d.hdev</name>
      <desc>Demonstrate various 2D transformations that move points to infinity</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <operator>hom_vector_to_proj_hom_mat2d</operator>
      <operator>projective_trans_image_size</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>hough_lines.hdev</name>
      <desc>Detect lines in an image using the Hough transform</desc>
      <path>hdevelop/Tools/Hough/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <method>method.regionproc</method>
      <method>method.hough</method>
      <method>method.roi</method>
      <operator>gen_region_hline</operator>
      <operator>hough_lines</operator>
      <operator>rectangle1_domain</operator>
      <operator>sobel_amp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>hough_lines_dir.hdev</name>
      <desc>Detect lines in an image using the Hough transform and local gradient directions</desc>
      <path>hdevelop/Tools/Hough/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <method>method.regionproc</method>
      <method>method.hough</method>
      <method>method.roi</method>
      <operator>gen_region_hline</operator>
      <operator>hough_lines_dir</operator>
      <operator>rectangle1_domain</operator>
      <operator>sobel_dir</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>hull.hdev</name>
      <desc>Inspect an injection molded nozzle</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.synth</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>closing_circle</operator>
      <operator>difference</operator>
      <operator>opening_circle</operator>
      <operator>select_shape</operator>
      <operator>shape_trans</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>hysteresis_threshold.hdev</name>
      <desc>Perform a hysteresis threshold operation on an edge image</desc>
      <path>hdevelop/Segmentation/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <method>method.filter.edge</method>
      <operator>hysteresis_threshold</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ic.hdev</name>
      <desc>Extract resistors, capacitors and ICs from a board using color information</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.visual</method>
      <method>method.color</method>
      <method>method.roi</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>add_channels</operator>
      <operator>decompose3</operator>
      <operator>dilation_rectangle1</operator>
      <operator>dyn_threshold</operator>
      <operator>shape_trans</operator>
      <operator>trans_from_rgb</operator>
      <operator>union1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>illuminate.hdev</name>
      <desc>Enhance detail in bright and dark regions</desc>
      <path>hdevelop/Filters/Enhancement/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>illuminate</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>image_to_world_plane.hdev</name>
      <desc>Rectify an image with regard to the plane of measurment</desc>
      <path>hdevelop/Calibration/Rectification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.trafo.rectif</method>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>image_to_world_plane</operator>
      <operator>set_origin_pose</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>info_edges.hdev</name>
      <desc>Estimate the width of a filter in edges_image</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>edges_image</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>info_edges</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>info_framegrabber_falcon.hdev</name>
      <desc>Query information about a frame grabber interface</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>info_framegrabber</operator>
      <operator>set_system</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>inner_circle.hdev</name>
      <desc>Calculate the inner circle of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>inner_circle</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>inner_rectangle1.hdev</name>
      <desc>Find knot-free rectangles in a piece of wood</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.wood</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.feat</method>
      <method>method.segm</method>
      <method>method.blob</method>
      <operator>difference</operator>
      <operator>dilation_circle</operator>
      <operator>dyn_threshold</operator>
      <operator>erosion_circle</operator>
      <operator>gen_rectangle1</operator>
      <operator>get_domain</operator>
      <operator>inner_rectangle1</operator>
      <operator>mean_image</operator>
      <operator>union1</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>inpainting_aniso.hdev</name>
      <desc>Fill up unreconstructed areas in a distance image created by stereo reconstruction</desc>
      <path>hdevelop/Filters/Inpainting/</path>
      <industry>industry.semicon</industry>
      <industry>industry.electr</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.measure.3D</applarea>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.filter.general</method>
      <operator>binocular_distance</operator>
      <operator>clip_region</operator>
      <operator>complement</operator>
      <operator>emphasize</operator>
      <operator>full_domain</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>get_domain</operator>
      <operator>harmonic_interpolation</operator>
      <operator>inpainting_aniso</operator>
      <operator>map_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>inpainting_ced.hdev</name>
      <desc>Fill up unreconstructed areas in a distance image created by stereo reconstruction</desc>
      <path>hdevelop/Filters/Inpainting/</path>
      <industry>industry.semicon</industry>
      <industry>industry.electr</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.measure.3D</applarea>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.filter.general</method>
      <operator>binocular_distance</operator>
      <operator>clip_region</operator>
      <operator>complement</operator>
      <operator>emphasize</operator>
      <operator>full_domain</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>get_domain</operator>
      <operator>harmonic_interpolation</operator>
      <operator>inpainting_ced</operator>
      <operator>map_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>inpainting_ct.hdev</name>
      <desc>Remove the fence in an image of a lynx</desc>
      <path>hdevelop/Filters/Inpainting/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>inpainting_ct</operator>
      <operator>read_region</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>inpainting_mcf.hdev</name>
      <desc>Fill up unreconstructed areas in a distance image created by stereo reconstruction</desc>
      <path>hdevelop/Filters/Inpainting/</path>
      <industry>industry.semicon</industry>
      <industry>industry.electr</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.measure.3D</applarea>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.filter.general</method>
      <operator>binocular_distance</operator>
      <operator>clip_region</operator>
      <operator>complement</operator>
      <operator>emphasize</operator>
      <operator>full_domain</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>get_domain</operator>
      <operator>harmonic_interpolation</operator>
      <operator>inpainting_mcf</operator>
      <operator>map_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>inpainting_texture.hdev</name>
      <desc>Remove unwanted objects from an image by texture inpainting</desc>
      <path>hdevelop/Filters/Inpainting/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>decompose3</operator>
      <operator>dilation_circle</operator>
      <operator>inpainting_texture</operator>
      <operator>opening_circle</operator>
      <operator>trans_from_rgb</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>inspect_bga.hdev</name>
      <desc>Inspect BGA for missing or deviating balls</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.trafo.align</method>
      <operator>affine_trans_point_2d</operator>
      <operator>area_center_gray</operator>
      <operator>dilation_rectangle1</operator>
      <operator>disp_cross</operator>
      <operator>distance_pp</operator>
      <operator>elliptic_axis_gray</operator>
      <operator>fast_threshold</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_region_points</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>smallest_rectangle2</operator>
      <operator>vector_to_rigid</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>inspect_bottle_mouth.hdev</name>
      <desc>Check bottle mouths for defects</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.food</industry>
      <industry>industry.glass</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>auto_threshold</operator>
      <operator>boundary</operator>
      <operator>dyn_threshold</operator>
      <operator>edges_sub_pix</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>length_xld</operator>
      <operator>mirror_region</operator>
      <operator>polar_trans_image</operator>
      <operator>polar_trans_region_inv</operator>
      <operator>union_cocircular_contours_xld</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>inspect_gasket_local_deformable.hdev</name>
      <desc>Find and inspect a gasket</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.auto</industry>
      <industry>industry.machine</industry>
      <applarea>applarea.inspect.complete</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.ldeform</method>
      <method>method.varmodel</method>
      <operator>clear_deformable_model</operator>
      <operator>clear_variation_model</operator>
      <operator>compare_variation_model</operator>
      <operator>create_local_deformable_model</operator>
      <operator>create_variation_model</operator>
      <operator>find_local_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>prepare_direct_variation_model</operator>
      <operator>vector_field_to_real</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>inspect_harddisk_temperature.hdev</name>
      <desc>Determine heat emission of a harddisc from an infrared image</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>intensity</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>inspect_scanlines.hdev</name>
      <desc>Inspect scanlines of bar codes</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_object</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>inspect_shampoo_label.hdev</name>
      <desc>Check the position of a label on a shampoo bottle</desc>
      <path>hdevelop/Applications/Alignment/</path>
      <industry>industry.pack</industry>
      <applarea>applarea.alignment</applarea>
      <applarea>applarea.inspect.print</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.regionproc</method>
      <method>method.match.shape</method>
      <operator>add_channels</operator>
      <operator>create_shape_model</operator>
      <operator>find_shape_model</operator>
      <operator>find_shape_models</operator>
      <operator>get_shape_model_contours</operator>
      <operator>inspect_shape_model</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>inspect_solar_fingers.hdev</name>
      <desc>Extract broken fingers on solar cells</desc>
      <path>hdevelop/Applications/Completeness-Check/</path>
      <industry>industry.solar</industry>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>difference</operator>
      <operator>dilation_circle</operator>
      <operator>erosion_rectangle1</operator>
      <operator>select_shape</operator>
      <operator>threshold</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>inspecta.hdev</name>
      <desc>Use a Mikrotron INSPECTA frame grabber board (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.1</newinversion>
   </example>
   <example>
      <name>inspecta5.hdev</name>
      <desc>Use a Mikrotron INSPECTA5 frame grabber board (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>inspecta5_parameters.hdev</name>
      <desc>Use a Mikrotron INSPECTA5 frame grabber board (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>inspecta5_simple.hdev</name>
      <desc>Use a Mikrotron INSPECTA5 frame grabber board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>inspecta5_trigger.hdev</name>
      <desc>Use a Mikrotron INSPECTA5 frame grabber board (external trigger)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>inspecta_2parallel.hdev</name>
      <desc>Use a Mikrotron INSPECTA frame grabber board with two cameras (parallel input)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>decompose2</operator>
      <operator>disp_image</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>set_part</operator>
      <newinversion>6.0.1</newinversion>
   </example>
   <example>
      <name>inspecta_2ports.hdev</name>
      <desc>Use a Mikrotron INSPECTA frame grabber board with two cameras (port switching)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>disp_image</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>set_part</operator>
      <newinversion>6.0.1</newinversion>
   </example>
   <example>
      <name>inspecta_parameters.hdev</name>
      <desc>Use a Mikrotron INSPECTA frame grabber board (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>inspecta_simple.hdev</name>
      <desc>Use a Mikrotron INSPECTA frame grabber board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.1</newinversion>
   </example>
   <example>
      <name>intensity.hdev</name>
      <desc>Calculate the mean gray value and the deviation within a region</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>intensity</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>interest_points_comparison.hdev</name>
      <desc>Compare the result of different point operators</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <operator>overpaint_region</operator>
      <operator>points_foerstner</operator>
      <operator>points_harris</operator>
      <operator>points_harris_binomial</operator>
      <operator>points_lepetit</operator>
      <operator>points_sojka</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>interjacent.hdev</name>
      <desc>Partition the image plane using given regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <method>method.visual</method>
      <method>method.regionproc</method>
      <operator>interjacent</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>intersect_lines_of_sight.hdev</name>
      <desc>Reconstruct 3D information by intersecting lines of sight</desc>
      <path>hdevelop/3D-Reconstruction/Binocular-Stereo/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.geom</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <operator>affine_trans_point_3d</operator>
      <operator>caltab_points</operator>
      <operator>create_pose</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>intersect_lines_of_sight</operator>
      <operator>map_image</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>sim_caltab</operator>
      <operator>tuple_sub</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>intersect_lines_of_sight_targets.hdev</name>
      <desc>Measure the height of a workpiece using a stereo setup</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.edgeextr</method>
      <method>method.stereo</method>
      <operator>critical_points_sub_pix</operator>
      <operator>intersect_lines_of_sight</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>intersection_closed_contours_xld.hdev</name>
      <desc>Demonstrate the use of intersection_closed_contours_xld</desc>
      <path>hdevelop/XLD/Sets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>intersection_closed_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>intersection_closed_polygons_xld.hdev</name>
      <desc>Demonstrate the use of intersection_closed_polygons_xld</desc>
      <path>hdevelop/XLD/Sets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>gen_polygons_xld</operator>
      <operator>intersection_closed_polygons_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>intersection_ll.hdev</name>
      <desc>Calculate the intersection point of two lines</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>intersection_ll</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>invert_funct_1d.hdev</name>
      <desc>Invert a 1D function and compare the result with the analytical inverse</desc>
      <path>hdevelop/Tools/Function/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.funct1d</method>
      <method>method.tuple</method>
      <operator>create_funct_1d_pairs</operator>
      <operator>funct_1d_to_pairs</operator>
      <operator>get_window_extents</operator>
      <operator>invert_funct_1d</operator>
      <operator>x_range_funct_1d</operator>
      <operator>y_range_funct_1d</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>isotropic_diffusion.hdev</name>
      <desc>Smooth an image using isotropic diffusion</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>isotropic_diffusion</operator>
      <operator>reduce_domain</operator>
      <operator>smooth_image</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>junction_skeleton.hdev</name>
      <desc>Split a skeleton at junction points</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.morphol</method>
      <operator>dyn_threshold</operator>
      <operator>junctions_skeleton</operator>
      <operator>mean_image</operator>
      <operator>opening_rectangle1</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>kirsch_amp.hdev</name>
      <desc>Extract edges (amplitude) using the Kirsch operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>kirsch_amp</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>kirsch_dir.hdev</name>
      <desc>Extract edges (amplitude and direction) using the Kirsch operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>kirsch_dir</operator>
      <operator>nonmax_suppression_dir</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>label_to_region.hdev</name>
      <desc>Extract regions with equal gray values (labelled region)</desc>
      <path>hdevelop/Regions/Creation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.regionproc</method>
      <operator>label_to_region</operator>
      <operator>scale_image</operator>
      <operator>union1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>label_word_process_mlp.hdev</name>
      <desc>Read a best-before label using a lexicon to improve results</desc>
      <path>hdevelop/OCR/Neural-Nets/</path>
      <industry>industry.food</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.blob</method>
      <method>method.trafo.align</method>
      <method>method.roi</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <operator>affine_trans_image</operator>
      <operator>affine_trans_region</operator>
      <operator>area_center</operator>
      <operator>clear_lexicon</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>connection</operator>
      <operator>create_lexicon</operator>
      <operator>dev_set_color</operator>
      <operator>dev_set_colored</operator>
      <operator>do_ocr_word_mlp</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>move_region</operator>
      <operator>opening_circle</operator>
      <operator>partition_dynamic</operator>
      <operator>read_image</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape</operator>
      <operator>shape_trans</operator>
      <operator>smallest_rectangle1</operator>
      <operator>sort_region</operator>
      <operator>text_line_orientation</operator>
      <operator>threshold</operator>
      <operator>var_threshold</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>laplace.hdev</name>
      <desc>Extract edges using the Laplace Operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>laplace</operator>
      <operator>laplace_of_gauss</operator>
      <operator>zero_crossing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>laplace_of_gauss.hdev</name>
      <desc>Extract edges using the LoG operator (Laplace of Gaussian)</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>derivate_gauss</operator>
      <operator>diff_of_gauss</operator>
      <operator>laplace_of_gauss</operator>
      <operator>zero_crossing</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>lens_distortions.hdev</name>
      <desc>Eliminate distortions of edges extracted from a distorted image</desc>
      <path>hdevelop/Calibration/Rectification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.rectif</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_contours_xld</operator>
      <operator>edges_sub_pix</operator>
      <operator>rgb1_to_gray</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>letter.hdev</name>
      <desc>Read printed characters with interactive selection</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.visual</method>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>dev_set_shape</operator>
      <operator>dilation_circle</operator>
      <operator>do_ocr_single_class_mlp</operator>
      <operator>get_mbutton</operator>
      <operator>get_region_index</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>sort_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>letters_mlp.hdev</name>
      <desc>Train an MLP OCR classifier and reclassifiy the training samples</desc>
      <path>hdevelop/OCR/Neural-Nets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.classif</method>
      <method>method.segm</method>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>delete_file</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>file_exists</operator>
      <operator>intersection</operator>
      <operator>read_ocr_trainf_names</operator>
      <operator>sort_region</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>write_ocr_trainf</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>letters_svm.hdev</name>
      <desc>Train an SVM OCR classifier and reclassify the training samples</desc>
      <path>hdevelop/OCR/Support-Vector-Machines/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.classif</method>
      <method>method.blob</method>
      <operator>area_center</operator>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_svm</operator>
      <operator>connection</operator>
      <operator>create_ocr_class_svm</operator>
      <operator>delete_file</operator>
      <operator>dilation_circle</operator>
      <operator>do_ocr_multi_class_svm</operator>
      <operator>file_exists</operator>
      <operator>intersection</operator>
      <operator>read_ocr_trainf_names</operator>
      <operator>set_tposition</operator>
      <operator>sort_region</operator>
      <operator>trainf_ocr_class_svm</operator>
      <operator>write_ocr_trainf</operator>
      <operator>write_string</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>lettert.hdev</name>
      <desc>Train printed characters and reclassify them</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.error</method>
      <operator>append_ocr_trainf</operator>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>copy_obj</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>delete_file</operator>
      <operator>dev_set_shape</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>sort_region</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>write_ocr_class_mlp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>leutron.hdev</name>
      <desc>Use a Leutron Picport Stereo H4D board (benchmark test)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>leutron_2cameras.hdev</name>
      <desc>Use a Leutron Picport Stereo H4D board with two cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>leutron_trigger.hdev</name>
      <desc>Use a Leutron Picport Stereo H4S board with external trigger</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>lexicon.hdev</name>
      <desc>Demonstrate the use of lexica</desc>
      <path>hdevelop/OCR/Lexica/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.lexica</method>
      <operator>clear_lexicon</operator>
      <operator>create_lexicon</operator>
      <operator>inspect_lexicon</operator>
      <operator>lookup_lexicon</operator>
      <operator>suggest_lexicon</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>line_scan.hdev</name>
      <desc>Simulate grabbing from a line scan camera and merge images and extracted regions</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <method>method.blob</method>
      <method>method.feat</method>
      <method>method.regionproc</method>
      <operator>add_channels</operator>
      <operator>close_framegrabber</operator>
      <operator>copy_obj</operator>
      <operator>crop_part</operator>
      <operator>gen_empty_region</operator>
      <operator>gen_image_const</operator>
      <operator>grab_image</operator>
      <operator>merge_regions_line_scan</operator>
      <operator>move_region</operator>
      <operator>open_framegrabber</operator>
      <operator>orientation_region</operator>
      <operator>tile_images_offset</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>line_scan_calibration.hdev</name>
      <desc>Show the use of camera calibration with line scan images</desc>
      <path>hdevelop/Calibration/Monocular/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.io</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <operator>disp_caltab</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>lines_color.hdev</name>
      <desc>Extract lines using color information</desc>
      <path>hdevelop/Filters/Lines/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.color</method>
      <method>method.visual</method>
      <operator>assign</operator>
      <operator>concat_obj</operator>
      <operator>count_obj</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_empty_obj</operator>
      <operator>get_contour_attrib_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>lines_color</operator>
      <operator>lines_gauss</operator>
      <operator>rgb1_to_gray</operator>
      <operator>select_contours_xld</operator>
      <operator>select_obj</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>lines_facet.hdev</name>
      <desc>Extract lines using the facet model</desc>
      <path>hdevelop/Filters/Lines/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <operator>lines_facet</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>lines_gauss.hdev</name>
      <desc>Extract lines and their widths</desc>
      <path>hdevelop/Filters/Lines/</path>
      <industry>industry.general</industry>
      <industry>industry.health</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>assign</operator>
      <operator>count_obj</operator>
      <operator>disp_polygon</operator>
      <operator>get_contour_attrib_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>lines_gauss</operator>
      <operator>select_obj</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>linx.hdev</name>
      <desc>Grab images from a LinX frame grabber board (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>linx_2boards.hdev</name>
      <desc>Grab images from two LinX frame grabber boards</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>linx_2ports.hdev</name>
      <desc>Use a LinX frame grabber board with two cameras (port switching)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>linx_2simultaneous.hdev</name>
      <desc>Grab images simultaneously from a LinX frame grabber board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>linx_cont.hdev</name>
      <desc>Parameterize a LinX frame grabber board (continuous grabbing)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>linx_simple.hdev</name>
      <desc>Grab images from a LinX frame grabber board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>list_files.hdev</name>
      <desc>List all files within a directory</desc>
      <path>hdevelop/File/Misc/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <method>method.opsys</method>
      <operator>get_system</operator>
      <operator>list_files</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>local_max.hdev</name>
      <desc>Detect local maxima in an image</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>get_system</operator>
      <operator>local_max</operator>
      <operator>set_system</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>local_max_sub_pix.hdev</name>
      <desc>Detect local maxima with subpixel accuracy</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <method>method.visual</method>
      <operator>corner_response</operator>
      <operator>local_max_sub_pix</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>local_min.hdev</name>
      <desc>Detect local minima and maxima in an image</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>get_system</operator>
      <operator>invert_image</operator>
      <operator>local_max</operator>
      <operator>local_min</operator>
      <operator>set_system</operator>
      <operator>symm_difference</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>locate_car_door.hdev</name>
      <desc>Locate a car door using perspective, deformable matching</desc>
      <path>hdevelop/Applications/Position-Recognition-3D/</path>
      <industry>industry.auto</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.calib</method>
      <method>method.match.deform</method>
      <method>method.trafo.geom</method>
      <method>method.poseestim</method>
      <method>method.tuple</method>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>clear_deformable_model</operator>
      <operator>contour_to_world_plane_xld</operator>
      <operator>create_planar_calib_deformable_model</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>find_planar_calib_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>get_deformable_model_params</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>locate_cookie_box.hdev</name>
      <desc>Locate a cookie box using descriptor-based matching</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.food</industry>
      <industry>industry.pack</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.descr</method>
      <method>method.poseestim</method>
      <method>method.trafo.geom</method>
      <operator>clear_descriptor_model</operator>
      <operator>close_contours_xld</operator>
      <operator>create_calib_descriptor_model</operator>
      <operator>find_calib_descriptor_model</operator>
      <operator>get_descriptor_model_points</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>read_descriptor_model</operator>
      <operator>vector_to_pose</operator>
      <operator>write_descriptor_model</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>locate_cookie_box_multiple_models.hdev</name>
      <desc>Locate cookie boxes using descriptor-based matching</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.descr</method>
      <method>method.poseestim</method>
      <operator>clear_descriptor_model</operator>
      <operator>create_calib_descriptor_model</operator>
      <operator>find_calib_descriptor_model</operator>
      <operator>get_descriptor_model_points</operator>
      <operator>image_points_to_world_plane</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>locate_cylinder_3d.hdev</name>
      <desc>Find the highest cylinder in a heap by combining stereo and 3D matching</desc>
      <path>hdevelop/Applications/Object-Recognition-3D/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.object3d</applarea>
      <method>method.stereo</method>
      <method>method.match3d.shape</method>
      <method>method.tuple</method>
      <operator>binocular_disparity</operator>
      <operator>clear_object_model_3d</operator>
      <operator>clear_shape_model_3d</operator>
      <operator>create_shape_model_3d</operator>
      <operator>find_shape_model_3d</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>get_shape_model_3d_params</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>prepare_object_model_3d</operator>
      <operator>project_3d_point</operator>
      <operator>project_shape_model_3d</operator>
      <operator>read_object_model_3d</operator>
      <operator>read_shape_model_3d</operator>
      <operator>regiongrowing_n</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>locate_engine_parts.hdev</name>
      <desc>Locate an engine part using perspective, deformable matching</desc>
      <path>hdevelop/Applications/Position-Recognition-3D/</path>
      <industry>industry.auto</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.blob</method>
      <method>method.match.deform</method>
      <method>method.poseestim</method>
      <method>method.trafo.geom</method>
      <method>method.tuple</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>clear_deformable_model</operator>
      <operator>contour_to_world_plane_xld</operator>
      <operator>create_planar_calib_deformable_model</operator>
      <operator>find_planar_calib_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>get_deformable_model_params</operator>
      <operator>vector_to_pose</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>locate_pipe_joints_stereo.hdev</name>
      <desc>Locate pipe joints using multi-view stereo and surface-based 3D matching</desc>
      <path>hdevelop/Applications/Robot-Vision/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.object3d</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <applarea>applarea.robotvis</applarea>
      <method>method.match3d.surface</method>
      <method>method.poseestim</method>
      <method>method.stereo.multi</method>
      <operator>affine_trans_object_model_3d</operator>
      <operator>clear_camera_setup_model</operator>
      <operator>clear_object_model_3d</operator>
      <operator>clear_stereo_model</operator>
      <operator>clear_surface_model</operator>
      <operator>convert_pose_type</operator>
      <operator>create_camera_setup_model</operator>
      <operator>create_stereo_model</operator>
      <operator>create_surface_model</operator>
      <operator>find_surface_model</operator>
      <operator>get_camera_setup_param</operator>
      <operator>get_object_model_3d_params</operator>
      <operator>global</operator>
      <operator>prepare_object_model_3d</operator>
      <operator>project_object_model_3d</operator>
      <operator>read_camera_setup_model</operator>
      <operator>read_object_model_3d</operator>
      <operator>reconstruct_surface_stereo</operator>
      <operator>set_camera_setup_cam_param</operator>
      <operator>set_stereo_model_image_pairs</operator>
      <operator>set_stereo_model_param</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>lowlands.hdev</name>
      <desc>Detect gray value plateus and lowlands</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>invert_image</operator>
      <operator>lowlands</operator>
      <operator>plateaus</operator>
      <operator>smooth_image</operator>
      <operator>symm_difference</operator>
      <operator>union1</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>lowlands_center.hdev</name>
      <desc>Detect centers of gray value plateaus and lowlands</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>invert_image</operator>
      <operator>lowlands_center</operator>
      <operator>plateaus_center</operator>
      <operator>smooth_image</operator>
      <operator>symm_difference</operator>
      <operator>union1</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>lps36_parameters.hdev</name>
      <desc>Query parameter settings from an LPS36 interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>lps36_simple.hdev</name>
      <desc>Grab images from an LPS36 interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_data</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>lucam_2cameras.hdev</name>
      <desc>Grab images from two Lumenera USB cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>lucam_crop.hdev</name>
      <desc>Grab images from Lumenera USB cameras (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>lucam_parameters.hdev</name>
      <desc>Grab images from Lumenera USB cameras (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>lucam_simple.hdev</name>
      <desc>Use a Lumenera USB camera (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>lut_trans.hdev</name>
      <desc>Transform gray values using a lookup table</desc>
      <path>hdevelop/Filters/Misc/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>lut_trans</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>map_image.hdev</name>
      <desc>Apply a general transformation to an image</desc>
      <path>hdevelop/Filters/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.error</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.rectif</method>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_image_to_world_plane_map</operator>
      <operator>get_mposition</operator>
      <operator>map_image</operator>
      <operator>set_origin_pose</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>match_function_trans.hdev</name>
      <desc>Calculate transformation parameters between two functions</desc>
      <path>hdevelop/Tools/Function/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.funct1d</method>
      <method>method.numeric</method>
      <method>method.tuple</method>
      <operator>create_funct_1d_array</operator>
      <operator>create_funct_1d_pairs</operator>
      <operator>for</operator>
      <operator>match_funct_1d_trans</operator>
      <operator>sample_funct_1d</operator>
      <operator>transform_funct_1d</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>match_function_trans_plot.hdev</name>
      <desc>Calculate transformation parameters between two functions and plot results (gnuplot)</desc>
      <path>hdevelop/Tools/Function/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.funct1d</method>
      <method>method.tuple</method>
      <method>method.numeric</method>
      <method>method.visual</method>
      <operator>create_funct_1d_array</operator>
      <operator>create_funct_1d_pairs</operator>
      <operator>gnuplot_close</operator>
      <operator>gnuplot_open_file</operator>
      <operator>gnuplot_plot_funct_1d</operator>
      <operator>match_funct_1d_trans</operator>
      <operator>sample_funct_1d</operator>
      <operator>transform_funct_1d</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>match_function_trans_time.hdev</name>
      <desc>Measure time to calculate transformation parameters between two functions</desc>
      <path>hdevelop/Tools/Function/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.funct1d</method>
      <method>method.numeric</method>
      <method>method.tuple</method>
      <operator>count_seconds</operator>
      <operator>create_funct_1d_array</operator>
      <operator>create_funct_1d_pairs</operator>
      <operator>match_funct_1d_trans</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>matching_coins.hdev</name>
      <desc>Distinguish coins using shape-based matching</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.roi</method>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>create_shape_model</operator>
      <operator>find_shape_models</operator>
      <operator>get_shape_model_contours</operator>
      <operator>select_shape_std</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>matching_defocused_pcb.hdev</name>
      <desc>Determine the position of a PCB in defocused images</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <operator>clear_shape_model</operator>
      <operator>create_shape_model</operator>
      <operator>find_shape_model</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>matching_deformed_bulb.hdev</name>
      <desc>Locate leads of halogen bulbs with increased tolerance regarding deformations</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <method>method.tuple</method>
      <method>method.regexp</method>
      <operator>continue</operator>
      <operator>create_shape_model</operator>
      <operator>find_shape_model</operator>
      <operator>tuple_regexp_select</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>matching_green_dot.hdev</name>
      <desc>Find scaled and rotated shape models</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>find_scaled_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>read_shape_model</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>matching_image_border.hdev</name>
      <desc>Locate multiple dies even if they extend beyond the image border</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>create_shape_model</operator>
      <operator>dev_update_pc</operator>
      <operator>dev_update_var</operator>
      <operator>dev_update_window</operator>
      <operator>find_shape_models</operator>
      <operator>gen_rectangle1</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>read_image</operator>
      <operator>set_system</operator>
      <operator>tuple_gen_const</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>matching_multi_channel_clamp.hdev</name>
      <desc>Locate upper clamp from a pile using color shape-based matching</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.synth</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <method>method.color</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_all_shape_models</operator>
      <operator>copy_obj</operator>
      <operator>create_aniso_shape_model</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_aniso_shape_models</operator>
      <operator>get_draw</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>rgb1_to_gray</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>matching_multi_channel_yogurt.hdev</name>
      <desc>Find yogurts of different flavors using color shape-based matching</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <method>method.color</method>
      <method>method.blob</method>
      <method>method.xld</method>
      <method>method.roi</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>create_shape_model</operator>
      <operator>disp_rectangle1</operator>
      <operator>fast_threshold</operator>
      <operator>fill_up</operator>
      <operator>find_shape_models</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>gen_circle</operator>
      <operator>gen_contour_region_xld</operator>
      <operator>get_draw</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>opening_circle</operator>
      <operator>read_image</operator>
      <operator>tuple_find</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>matrixvisionacquire.hdev</name>
      <desc>Grab images with the MatrixVisionAcquire interface (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>gen_struct_elements</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>matrixvisionacquire_crop.hdev</name>
      <desc>Grab images with the MatrixVisionAcquire interface (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>matrixvisionacquire_multiple_instances.hdev</name>
      <desc>Grab images with the MatrixVisionAcquire interface (two handles to one camera with different parameter sets)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>matrixvisionacquire_parameters.hdev</name>
      <desc>Grab images with the MatrixVisionAcquire interface (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>matrixvisionacquire_properties.hdev</name>
      <desc>Set parameters and grab images with the MatrixVisionAcquire interface (using different parameters and varying exposure time)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>matrixvisionacquire_simple.hdev</name>
      <desc>Use the MatrixVisionAcquire interface (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>max_connection.hdev</name>
      <desc>Limit the number of regions returned by the connection operator</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.blob</method>
      <operator>connection</operator>
      <operator>get_system</operator>
      <operator>set_system</operator>
      <newinversion>6.0.1</newinversion>
   </example>
   <example>
      <name>max_image.hdev</name>
      <desc>Calculate the maximum of two images pixel by pixel</desc>
      <path>hdevelop/Filters/Arithmetic/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>crop_part</operator>
      <operator>max_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>mean_curvature_flow.hdev</name>
      <desc>Enhance an angiographic image using the mean curvature flow</desc>
      <path>hdevelop/Filters/Enhancement/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>mean_curvature_flow</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>measure_arc.hdev</name>
      <desc>Measure the width of a metal part along a circular arc</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.metal</industry>
      <industry>industry.machine</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.visual</method>
      <operator>close_measure</operator>
      <operator>disp_arc</operator>
      <operator>disp_line</operator>
      <operator>distance_pp</operator>
      <operator>gen_measure_arc</operator>
      <operator>get_points_ellipse</operator>
      <operator>measure_pos</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>measure_ball_bond.hdev</name>
      <desc>Inspect the position of ball bonds on a pad</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.segm</method>
      <method>method.xld</method>
      <operator>area_center_xld</operator>
      <operator>boundary</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>gen_circle_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>union_adjacent_contours_xld</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>measure_bga_dff.hdev</name>
      <desc>Reconstruct the height of a solder ball on a BGA using depth from focus</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.dff</method>
      <method>method.image</method>
      <operator>channels_to_image</operator>
      <operator>depth_from_focus</operator>
      <operator>select_grayvalues_from_channels</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>measure_caliper.hdev</name>
      <desc>Measure the distance between the pitch lines of a caliper</desc>
      <path>solution_guide/1d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.trafo.wcoord</method>
      <method>method.metrol</method>
      <method>method.funct1d</method>
      <operator>close_measure</operator>
      <operator>create_funct_1d_array</operator>
      <operator>derivate_funct_1d</operator>
      <operator>distance_pp</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>get_y_value_funct_1d</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>measure_projection</operator>
      <operator>rotate_image</operator>
      <operator>set_tposition</operator>
      <operator>smooth_funct_1d_gauss</operator>
      <operator>write_string</operator>
      <operator>zero_crossings_funct_1d</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>measure_chip.hdev</name>
      <desc>Get extents and positions of rectangular chip components</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>boundary</operator>
      <operator>dilation_rectangle1</operator>
      <operator>distance_pp</operator>
      <operator>edges_sub_pix</operator>
      <operator>fast_threshold</operator>
      <operator>fit_rectangle2_contour_xld</operator>
      <operator>gen_rectangle2</operator>
      <operator>gen_rectangle2_contour_xld</operator>
      <operator>opening_rectangle1</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>select_shape</operator>
      <operator>smallest_rectangle2</operator>
      <operator>threshold_sub_pix</operator>
      <operator>union_adjacent_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_circles.hdev</name>
      <desc>Get radii and positions of circular shapes</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <method>method.geom</method>
      <operator>boundary</operator>
      <operator>dilation_circle</operator>
      <operator>disp_arrow</operator>
      <operator>distance_pp</operator>
      <operator>edges_sub_pix</operator>
      <operator>fast_threshold</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>gen_circle_contour_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>union1</operator>
      <operator>union_cocircular_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_circuit_width_lines_gauss.hdev</name>
      <desc>Measure the width of pcb tracks</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.segm</method>
      <method>method.xld</method>
      <method>method.morphol</method>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>gen_region_points</operator>
      <operator>get_contour_attrib_xld</operator>
      <operator>lines_gauss</operator>
      <operator>select_shape_xld</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>measure_diamond.hdev</name>
      <desc>Inspect a diamond</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.glass</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.segm</method>
      <method>method.regionproc</method>
      <method>method.xld</method>
      <method>method.morphol</method>
      <operator>clip_region_rel</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>intersection_ll</operator>
      <operator>select_contours_xld</operator>
      <operator>shape_trans</operator>
      <operator>union_collinear_contours_xld</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>measure_fill_level.hdev</name>
      <desc>Inspect the fill level of ampoules</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.pharm</industry>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.alignment</applarea>
      <method>method.match.shape</method>
      <method>method.metrol</method>
      <operator>create_shape_model</operator>
      <operator>find_shape_model</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>measure_pos</operator>
      <operator>translate_measure</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>measure_grid.hdev</name>
      <desc>Get junctions of a grid that separates keys</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.geom</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <method>method.geom</method>
      <operator>assign</operator>
      <operator>closing_circle</operator>
      <operator>concat_obj</operator>
      <operator>count_obj</operator>
      <operator>distance_ps</operator>
      <operator>dyn_threshold</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>gen_empty_obj</operator>
      <operator>get_contour_xld</operator>
      <operator>get_region_points</operator>
      <operator>intersection_ll</operator>
      <operator>junctions_skeleton</operator>
      <operator>mean_image</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>select_obj</operator>
      <operator>select_shape</operator>
      <operator>skeleton</operator>
      <operator>union_collinear_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_ic_leads.hdev</name>
      <desc>Measure leads of an IC</desc>
      <path>solution_guide/1d_measuring/</path>
      <industry>industry.general</industry>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.visual</method>
      <method>method.metrol</method>
      <operator>close_measure</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>gen_rectangle2</operator>
      <operator>measure_pairs</operator>
      <operator>measure_pos</operator>
      <operator>translate_measure</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>measure_lcd_cells.hdev</name>
      <desc>Measure the dimensions of frames that separate the cells of an LCD display</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.blob</method>
      <method>method.segm</method>
      <method>method.geom</method>
      <operator>close_measure</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>intersection_ll</operator>
      <operator>measure_pairs</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>measure_metal_part.hdev</name>
      <desc>Inspect metal part by fitting lines and circles</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>distance_pp</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>segment_contours_xld</operator>
      <operator>set_font</operator>
      <operator>sort_contours_xld</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>measure_metal_part_extended.hdev</name>
      <desc>Measure several features of a metal part</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.geom</method>
      <method>method.filter.points</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <method>method.geom</method>
      <operator>angle_ll</operator>
      <operator>area_center</operator>
      <operator>area_center_xld</operator>
      <operator>assign</operator>
      <operator>boundary</operator>
      <operator>concat_obj</operator>
      <operator>count_obj</operator>
      <operator>disp_cross</operator>
      <operator>disp_line</operator>
      <operator>dist_ellipse_contour_xld</operator>
      <operator>distance_pp</operator>
      <operator>edges_sub_pix</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_empty_obj</operator>
      <operator>gen_parallels_xld</operator>
      <operator>gen_polygons_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>get_parallels_xld</operator>
      <operator>intersection_ll</operator>
      <operator>orientation_region</operator>
      <operator>orientation_xld</operator>
      <operator>points_foerstner</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_obj</operator>
      <operator>smallest_rectangle2</operator>
      <operator>smallest_rectangle2_xld</operator>
      <operator>sort_contours_xld</operator>
      <operator>threshold</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_metal_part_first_example.hdev</name>
      <desc>Measure several features of a metal part</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <method>method.geom</method>
      <operator>distance_pp</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>gen_circle_contour_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>orientation_region</operator>
      <operator>segment_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_metal_part_id.hdev</name>
      <desc>Inspect metal part for missing or deviating circular shapes</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.trafo.align</method>
      <method>method.geom</method>
      <method>method.xld</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_pixel</operator>
      <operator>dilation_rectangle1</operator>
      <operator>distance_pp</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_circle</operator>
      <operator>gen_circle_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_invert</operator>
      <operator>hom_mat2d_slant</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>intersection_ll</operator>
      <operator>orientation_region</operator>
      <operator>read_image</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>sort_contours_xld</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_online.hdev</name>
      <desc>Measure your object in a live image</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.acqu</method>
      <method>method.visual</method>
      <method>method.metrol</method>
      <operator>close_framegrabber</operator>
      <operator>close_measure</operator>
      <operator>draw_rectangle2</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>grab_image</operator>
      <operator>measure_pos</operator>
      <operator>open_framegrabber</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>measure_pads_subpix.hdev</name>
      <desc>Measure the dimensions of pads on a die</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.regionproc</method>
      <method>method.trafo.geom</method>
      <method>method.segm</method>
      <method>method.xld</method>
      <operator>fit_rectangle2_contour_xld</operator>
      <operator>gen_rectangle2_contour_xld</operator>
      <operator>union_adjacent_contours_xld</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>measure_perspective_scratch.hdev</name>
      <desc>Measure the length of a scratch in world coordinates</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.wcoord</method>
      <method>method.calib</method>
      <method>method.xld</method>
      <operator>area_center_points_xld</operator>
      <operator>calibrate_cameras</operator>
      <operator>create_calib_data</operator>
      <operator>fast_threshold</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>gen_image_to_world_plane_map</operator>
      <operator>get_calib_data</operator>
      <operator>length_xld</operator>
      <operator>map_image</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <operator>set_origin_pose</operator>
      <operator>skeleton</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_pin.hdev</name>
      <desc>Measure pins of an IC</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.visual</method>
      <method>method.numeric</method>
      <operator>close_measure</operator>
      <operator>disp_line</operator>
      <operator>disp_rectangle1</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>gen_rectangle2</operator>
      <operator>measure_pairs</operator>
      <operator>measure_pos</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>measure_pump.hdev</name>
      <desc>Measure positions and radii of circular shapes</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>dilation_circle</operator>
      <operator>dist_ellipse_contour_xld</operator>
      <operator>fast_threshold</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>gen_circle_contour_xld</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_shape</operator>
      <operator>select_shape_xld</operator>
      <operator>shape_trans</operator>
      <operator>sort_contours_xld</operator>
      <operator>threshold_sub_pix</operator>
      <operator>union1</operator>
      <operator>union_cocircular_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_ring.hdev</name>
      <desc>Determine the width of cogs with a circular measure object</desc>
      <path>solution_guide/1d_measuring/</path>
      <industry>industry.machine</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.blob</method>
      <method>method.geom</method>
      <method>method.visual</method>
      <operator>bin_threshold</operator>
      <operator>close_measure</operator>
      <operator>compactness</operator>
      <operator>distance_pp</operator>
      <operator>gen_measure_arc</operator>
      <operator>get_region_polygon</operator>
      <operator>inner_circle</operator>
      <operator>line_orientation</operator>
      <operator>measure_pairs</operator>
      <operator>smallest_circle</operator>
      <operator>tuple_sort_index</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>measure_screw.hdev</name>
      <desc>Measure several features of a screw</desc>
      <path>solution_guide/2d_measuring/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <method>method.edgeextr</method>
      <method>method.roi</method>
      <method>method.geom</method>
      <method>method.trafo.align</method>
      <method>method.xld</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <method>method.geom</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_region</operator>
      <operator>boundary</operator>
      <operator>clip_contours_xld</operator>
      <operator>closing_circle</operator>
      <operator>derivate_gauss</operator>
      <operator>dev_close_window</operator>
      <operator>dev_open_window</operator>
      <operator>dev_set_part</operator>
      <operator>dev_set_window</operator>
      <operator>disp_cross</operator>
      <operator>distance_pc</operator>
      <operator>distance_pp</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_rectangle1</operator>
      <operator>gen_region_line</operator>
      <operator>get_contour_xld</operator>
      <operator>get_region_runs</operator>
      <operator>orientation_region</operator>
      <operator>projection_pl</operator>
      <operator>reduce_domain</operator>
      <operator>select_contours_xld</operator>
      <operator>set_font</operator>
      <operator>smallest_rectangle1_xld</operator>
      <operator>vector_angle_to_rigid</operator>
      <operator>zero_crossing_sub_pix</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>measure_solder_paste_dff.hdev</name>
      <desc>Reconstruct the solder paste on a BGA pad using depth from focus</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.dff</method>
      <method>method.image</method>
      <operator>channels_to_image</operator>
      <operator>depth_from_focus</operator>
      <operator>median_rect</operator>
      <operator>select_grayvalues_from_channels</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>measure_switch.hdev</name>
      <desc>Determine the width of and the distance between the pins of a switch</desc>
      <path>solution_guide/1d_measuring/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.visual</method>
      <operator>close_measure</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>measure_pairs</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>measure_tft_cells.hdev</name>
      <desc>Measure the dimensions of the RGB cells of a TFT LCD display</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.electr</industry>
      <applarea>applarea.alignment</applarea>
      <applarea>applarea.measure.2D</applarea>
      <method>method.metrol</method>
      <method>method.funct1d</method>
      <method>method.blob</method>
      <method>method.segm</method>
      <method>method.tuple</method>
      <method>method.trafo.geom</method>
      <operator>close_measure</operator>
      <operator>create_funct_1d_array</operator>
      <operator>derivate_funct_1d</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>get_y_value_funct_1d</operator>
      <operator>gray_histo</operator>
      <operator>local_min_max_funct_1d</operator>
      <operator>measure_pairs</operator>
      <operator>smooth_funct_1d_gauss</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>median_image.hdev</name>
      <desc>Apply a median filter with different mask regions</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.morphol</method>
      <operator>median_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>median_interactive.hdev</name>
      <desc>Interactively smooth an image</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.roi</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>boundary</operator>
      <operator>dev_set_preferences</operator>
      <operator>gen_circle</operator>
      <operator>get_mposition</operator>
      <operator>median_image</operator>
      <operator>overpaint_gray</operator>
      <operator>set_mshape</operator>
      <operator>set_system</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>median_rect.hdev</name>
      <desc>Use a median filter with rectangular masks for different purposes</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.filter.general</method>
      <method>method.morphol</method>
      <method>method.segm</method>
      <operator>dyn_threshold</operator>
      <operator>median_rect</operator>
      <operator>min_max_gray</operator>
      <operator>sub_image</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>millite.hdev</name>
      <desc>Use a Matrox Meteor-II, Helios, Solios, or Odyssey framegrabber (benchmark test)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>millite_1394_parameters.hdev</name>
      <desc>Use a Matrox Meteor-II/1394 frame grabber board (parameters)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>millite_2ports.hdev</name>
      <desc>Use a Matrox Meteor-II, Helios, Solios, or Odyssey frame grabber board (port switching)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>disp_image</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>set_part</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>millite_parameters.hdev</name>
      <desc>Query parameter settings from a Matrox frame grabber board based on MIL-Lite</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>millite_simple.hdev</name>
      <desc>Use a Matrox Meteor-II, Helios, Solios, or Odyssey frame grabber board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>millite_trigger.hdev</name>
      <desc>Use a Matrox Meteor-II, Helios, Solios, or Odyssey board (external trigger)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>wait_seconds</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>min_image.hdev</name>
      <desc>Calculate the minimum of two images pixel by pixel</desc>
      <path>hdevelop/Filters/Arithmetic/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>crop_part</operator>
      <operator>min_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>min_max_gray.hdev</name>
      <desc>Calculate the minimum and maximum gray values within a region</desc>
      <path>hdevelop/Image/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>min_max_gray</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>mirror_region.hdev</name>
      <desc>Reflect regions about the x- or y-axis</desc>
      <path>hdevelop/Regions/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>draw_region</operator>
      <operator>mirror_region</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>moments_region_2nd.hdev</name>
      <desc>Calculate geometric moments of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>moments_region_2nd</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>moments_region_2nd_invar.hdev</name>
      <desc>Calculate geometric moments of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>disp_line</operator>
      <operator>gen_ellipse</operator>
      <operator>moments_region_2nd_invar</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>mosaicking.hdev</name>
      <desc>Use mosaicking to merge partial images of a BGA into one large image</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.general</applarea>
      <method>method.tuple</method>
      <method>method.mosaic</method>
      <method>method.filter.points</method>
      <method>method.match.point</method>
      <method>method.visual</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_image</operator>
      <operator>gen_image_const</operator>
      <operator>gen_projective_mosaic</operator>
      <operator>paint_region</operator>
      <operator>points_harris</operator>
      <operator>proj_match_points_ransac</operator>
      <operator>tile_images_offset</operator>
      <operator>vector_to_rigid</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>mosaicking_pyramid.hdev</name>
      <desc>Combine images into a mosaic image</desc>
      <path>hdevelop/Tools/Mosaicking/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.general</applarea>
      <method>method.mosaic</method>
      <method>method.filter.points</method>
      <method>method.match.point</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_image</operator>
      <operator>gen_gauss_pyramid</operator>
      <operator>gen_projective_mosaic</operator>
      <operator>points_harris</operator>
      <operator>proj_match_points_ransac</operator>
      <operator>proj_match_points_ransac_guided</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>move_region.hdev</name>
      <desc>Translate regions</desc>
      <path>hdevelop/Regions/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>draw_region</operator>
      <operator>get_mbutton</operator>
      <operator>move_region</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>movement.hdev</name>
      <desc>Detect movements online using image differences</desc>
      <path>hdevelop/Applications/Security-Systems/</path>
      <industry>industry.secure</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.security</applarea>
      <method>method.acqu</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.motion</method>
      <operator>close_framegrabber</operator>
      <operator>copy_obj</operator>
      <operator>dyn_threshold</operator>
      <operator>fill_up</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>mean_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>movement_bg.hdev</name>
      <desc>Detect movements online using background estimator</desc>
      <path>hdevelop/Applications/Security-Systems/</path>
      <industry>industry.secure</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.security</applarea>
      <method>method.acqu</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.motion</method>
      <method>method.filter.general</method>
      <operator>close_framegrabber</operator>
      <operator>create_bg_esti</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>mean_image</operator>
      <operator>open_framegrabber</operator>
      <operator>run_bg_esti</operator>
      <operator>sort_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>movement_col.hdev</name>
      <desc>Extract moving objects and scan them for specific color</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <industry>industry.secure</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.inspect.color</applarea>
      <method>method.acqu</method>
      <method>method.motion</method>
      <method>method.visual</method>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <operator>add_channels</operator>
      <operator>class_2dim_sup</operator>
      <operator>close_framegrabber</operator>
      <operator>closing_rectangle1</operator>
      <operator>copy_obj</operator>
      <operator>decompose3</operator>
      <operator>dilation_circle</operator>
      <operator>draw_region</operator>
      <operator>dyn_threshold</operator>
      <operator>erosion_circle</operator>
      <operator>fill_up</operator>
      <operator>grab_image</operator>
      <operator>histo_2dim</operator>
      <operator>open_framegrabber</operator>
      <operator>select_shape_std</operator>
      <operator>shape_trans</operator>
      <operator>trans_from_rgb</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>msi.hdev</name>
      <desc>Read a bar code of type MSI</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>mult_image.hdev</name>
      <desc>Multiply two images</desc>
      <path>hdevelop/Filters/Arithmetic/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>gen_image_gray_ramp</operator>
      <operator>mult_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>multicam.hdev</name>
      <desc>Grab images from a Euresys MultiCam board (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.2</newinversion>
   </example>
   <example>
      <name>multicam_2cameras.hdev</name>
      <desc>Grab images from two cameras connected to a Euresys MultiCam board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>disp_image</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_part</operator>
      <newinversion>6.0.2</newinversion>
   </example>
   <example>
      <name>multicam_parameters.hdev</name>
      <desc>Use a Euresys MultiCam board (query current parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>tuple_sort</operator>
      <newinversion>6.0.2</newinversion>
   </example>
   <example>
      <name>multicam_picolo.hdev</name>
      <desc>Use a Euresys PICOLO board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>get_image_time</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>multicam_quickpack.hdev</name>
      <desc>Use a Euresys QUICKPACK board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>get_image_pointer3</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_lut</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>multicam_simple.hdev</name>
      <desc>Use a Euresys MultiCam board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0.2</newinversion>
   </example>
   <example>
      <name>multicam_split_cable.hdev</name>
      <desc>Use a split cable for a Euresys DOMINO board with three cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>multicam_stereo.hdev</name>
      <desc>Use StereoVision for a Euresys DOMINO Alpha board with two identical cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>decompose2</operator>
      <operator>disp_image</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_part</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>multiple_boards_px.hdev</name>
      <desc>Grab images from multiple boards</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>disp_image</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_part</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>multiple_models.hdev</name>
      <desc>Search for two types of objects simultaneously</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.metal</industry>
      <industry>industry.machine</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.roi</method>
      <method>method.match.shape</method>
      <method>method.tuple</method>
      <operator>add_channels</operator>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>copy_obj</operator>
      <operator>create_scaled_shape_model</operator>
      <operator>find_scaled_shape_models</operator>
      <operator>gen_circle</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>inspect_shape_model</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>multiple_objects.hdev</name>
      <desc>Search for multiple instances of a security ring</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.metal</industry>
      <industry>industry.machine</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.visual</method>
      <method>method.roi</method>
      <method>method.match.shape</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_pixel</operator>
      <operator>clear_shape_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_shape_model</operator>
      <operator>find_shape_model</operator>
      <operator>gen_circle</operator>
      <operator>get_shape_model_contours</operator>
      <operator>grab_image</operator>
      <operator>inspect_shape_model</operator>
      <operator>open_framegrabber</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>multiple_ports_px.hdev</name>
      <desc>Grab images from multiple ports</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>disp_image</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_part</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>multiple_scales.hdev</name>
      <desc>Search for nuts of different sizes</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.metal</industry>
      <industry>industry.machine</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.visual</method>
      <method>method.roi</method>
      <method>method.match.shape</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_pixel</operator>
      <operator>clear_shape_model</operator>
      <operator>copy_image</operator>
      <operator>create_scaled_shape_model</operator>
      <operator>difference</operator>
      <operator>disp_arrow</operator>
      <operator>find_scaled_shape_model</operator>
      <operator>gen_circle</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>inspect_shape_model</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>nonmax_suppression_amp.hdev</name>
      <desc>Suppress non-maximum points</desc>
      <path>hdevelop/Segmentation/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <method>method.filter.edge</method>
      <operator>nonmax_suppression_amp</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>nonmax_suppression_dir.hdev</name>
      <desc>Suppress non-maximum points on edges</desc>
      <path>hdevelop/Segmentation/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <method>method.filter.edge</method>
      <operator>frei_dir</operator>
      <operator>nonmax_suppression_dir</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>novelty_detection.hdev</name>
      <desc>Show how to use an SVM classifier in the novelty-detection mode</desc>
      <path>hdevelop/Classification/Support-Vector-Machines/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.classif</method>
      <method>method.visual</method>
      <operator>add_sample_class_svm</operator>
      <operator>classify_class_svm</operator>
      <operator>clear_class_svm</operator>
      <operator>create_class_svm</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_image_const</operator>
      <operator>gen_region_points</operator>
      <operator>get_region_points</operator>
      <operator>intersection</operator>
      <operator>label_to_region</operator>
      <operator>set_grayval</operator>
      <operator>train_class_svm</operator>
      <operator>union2</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>novelty_detection_dyn_threshold.hdev</name>
      <desc>Inspect a web using dyn_threshold</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.synth</industry>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.texture</method>
      <method>method.blob</method>
      <operator>dyn_threshold</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>novelty_detection_gmm.hdev</name>
      <desc>Inspect a web using texture classification with gaussian mixture models</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.synth</industry>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.classif</method>
      <method>method.texture</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.blob</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>add_samples_image_class_gmm</operator>
      <operator>classify_image_class_gmm</operator>
      <operator>clear_class_gmm</operator>
      <operator>compose5</operator>
      <operator>create_class_gmm</operator>
      <operator>difference</operator>
      <operator>read_class_gmm</operator>
      <operator>smooth_image</operator>
      <operator>texture_laws</operator>
      <operator>train_class_gmm</operator>
      <operator>write_class_gmm</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>novelty_detection_svm.hdev</name>
      <desc>Inspect a web using texture classification with support vector machine classifiers</desc>
      <path>hdevelop/Segmentation/Classification/</path>
      <industry>industry.synth</industry>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.classif</method>
      <method>method.texture</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.blob</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>add_samples_image_class_svm</operator>
      <operator>classify_image_class_svm</operator>
      <operator>clear_class_svm</operator>
      <operator>compose5</operator>
      <operator>create_class_svm</operator>
      <operator>reduce_class_svm</operator>
      <operator>smooth_image</operator>
      <operator>texture_laws</operator>
      <operator>train_class_svm</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>obj_diff.hdev</name>
      <desc>Demonstrate how to use obj_diff</desc>
      <path>hdevelop/Object/Manipulation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.regionproc</method>
      <method>method.xld</method>
      <operator>obj_diff</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>ocr_cd_print_polar_trans.hdev</name>
      <desc>Read characters on a non-linear pattern</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.print</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.segm</method>
      <method>method.trafo.geom</method>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>gen_contour_region_xld</operator>
      <operator>polar_trans_image_ext</operator>
      <operator>read_ocr_class_mlp</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>ocr_dongle.hdev</name>
      <desc>Read dongle ID using OCR and regular expressions</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <applarea>applarea.inspect.print</applarea>
      <method>method.visual</method>
      <method>method.morphol</method>
      <method>method.ocr</method>
      <method>method.blob</method>
      <method>method.string</method>
      <method>method.tuple</method>
      <operator>clear_ocr_class_mlp</operator>
      <operator>dilation1</operator>
      <operator>dilation_rectangle1</operator>
      <operator>disp_rectangle1</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>dyn_threshold</operator>
      <operator>erosion_circle</operator>
      <operator>erosion_rectangle1</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>mean_image</operator>
      <operator>median_image</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>set_rgb</operator>
      <operator>shape_trans</operator>
      <operator>sort_region</operator>
      <operator>tuple_regexp_match</operator>
      <operator>tuple_strlen</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>ocr_gradient_feature.hdev</name>
      <desc>Compare OCR features</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.blob</method>
      <method>method.tuple</method>
      <method>method.visual</method>
      <method>method.morphol</method>
      <method>method.ocr</method>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>clear_ocr_class_svm</operator>
      <operator>clear_window</operator>
      <operator>copy_rectangle</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>create_ocr_class_svm</operator>
      <operator>disp_image</operator>
      <operator>disp_polygon</operator>
      <operator>disp_rectangle1</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>do_ocr_multi_class_svm</operator>
      <operator>emphasize</operator>
      <operator>get_line_style</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>gray_dilation_shape</operator>
      <operator>open_window</operator>
      <operator>read_ocr_trainf_names</operator>
      <operator>set_color</operator>
      <operator>set_insert</operator>
      <operator>set_line_style</operator>
      <operator>set_part</operator>
      <operator>set_rgb</operator>
      <operator>sort_region</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>trainf_ocr_class_svm</operator>
      <operator>tuple_concat</operator>
      <operator>tuple_length</operator>
      <operator>tuple_max</operator>
      <operator>tuple_min</operator>
      <operator>tuple_select_range</operator>
      <operator>tuple_sort</operator>
      <operator>tuple_sort_index</operator>
      <operator>tuple_string</operator>
      <operator>write_ocr_trainf</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>ocr_lot_number.hdev</name>
      <desc>Correct OCR result using regular expressions</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.visual</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.ocr</method>
      <operator>clear_ocr_class_mlp</operator>
      <operator>clear_text_model</operator>
      <operator>clear_text_result</operator>
      <operator>create_text_model</operator>
      <operator>disp_rectangle1</operator>
      <operator>do_ocr_word_mlp</operator>
      <operator>find_text</operator>
      <operator>get_draw</operator>
      <operator>get_rgb</operator>
      <operator>get_text_object</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>set_rgb</operator>
      <operator>set_text_model_param</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>ocr_wafer_semi_font.hdev</name>
      <desc>Read the ID numbers of wafers</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.segm</method>
      <method>method.morphol</method>
      <operator>clear_ocr_class_mlp</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>read_ocr_class_mlp</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>ocr_yogurt.hdev</name>
      <desc>Segment the expiration date of a yoghurt cap for reading</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.food</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.segm</method>
      <operator>read_ocr_class_mlp</operator>
      <operator>segment_characters</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>ocrcolor.hdev</name>
      <desc>Read numbers using color information</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.filter.general</method>
      <method>method.color</method>
      <method>method.roi</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>clip_region</operator>
      <operator>decompose3</operator>
      <operator>do_ocr_multi_class_mlp</operator>
      <operator>expand_gray_ref</operator>
      <operator>fill_up_shape</operator>
      <operator>get_image_pointer3</operator>
      <operator>mean_image</operator>
      <operator>paint_region</operator>
      <operator>read_image</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>smallest_rectangle1</operator>
      <operator>sub_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>ocrcolort.hdev</name>
      <desc>Segment numbers using color information and train the OCR</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.filter.general</method>
      <method>method.color</method>
      <method>method.roi</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.error</method>
      <operator>append_ocr_trainf</operator>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>clip_region</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>decompose3</operator>
      <operator>delete_file</operator>
      <operator>expand_gray_ref</operator>
      <operator>fill_up_shape</operator>
      <operator>get_image_pointer3</operator>
      <operator>mean_image</operator>
      <operator>rgb1_to_gray</operator>
      <operator>smallest_rectangle1</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>write_ocr_class_mlp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>open_file.hdev</name>
      <desc>Write arbitrary text to a file</desc>
      <path>hdevelop/File/Text/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <operator>close_file</operator>
      <operator>fwrite_string</operator>
      <operator>open_file</operator>
      <operator>count_obj</operator>
      <operator>select_obj</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>opening.hdev</name>
      <desc>Recognize letters by applying an opening operation</desc>
      <path>hdevelop/Morphology/Region/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.morphol</method>
      <operator>erosion_circle</operator>
      <operator>opening</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>opteon.hdev</name>
      <desc>Use an Opteon imaging system (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>opteon_crop.hdev</name>
      <desc>Use an Opteon imaging system (grabbing image parts of size 256x256)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>opteon_parameters.hdev</name>
      <desc>Use an Opteon imaging system (parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>tuple_sort</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>opteon_queued.hdev</name>
      <desc>Use an Opteon imaging system (queued grabbing)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>opteon_simple.hdev</name>
      <desc>Use an Opteon imaging system (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>opteon_trigger.hdev</name>
      <desc>Use an Opteon imaging system (external trigger)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.0.3</newinversion>
   </example>
   <example>
      <name>optical_flow.hdev</name>
      <desc>Monitor traffic using optical flow</desc>
      <path>hdevelop/Applications/Security-Systems/</path>
      <industry>industry.secure</industry>
      <industry>industry.transp</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.security</applarea>
      <method>method.visual</method>
      <method>method.motion</method>
      <method>method.blob</method>
      <operator>copy_obj</operator>
      <operator>optical_flow_mg</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>optical_flow_bicycle.hdev</name>
      <desc>Monitor moving bicycle using optical flow</desc>
      <path>hdevelop/Applications/Security-Systems/</path>
      <industry>industry.secure</industry>
      <industry>industry.transp</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.security</applarea>
      <method>method.visual</method>
      <method>method.motion</method>
      <method>method.blob</method>
      <method>method.functions</method>
      <operator>copy_obj</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_region_contour_xld</operator>
      <operator>intensity</operator>
      <operator>intersection</operator>
      <operator>min_max_gray</operator>
      <operator>optical_flow_mg</operator>
      <operator>select_shape_std</operator>
      <operator>shape_trans</operator>
      <operator>vector_field_length</operator>
      <operator>vector_field_to_real</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>optical_flow_hydraulic_engineering.hdev</name>
      <desc>Get position, speed, and movement direction of particles using optical flow</desc>
      <path>hdevelop/Applications/Security-Systems/</path>
      <industry>industry.secure</industry>
      <industry>industry.chem</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.security</applarea>
      <method>method.acqu</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <method>method.morphol</method>
      <method>method.motion</method>
      <operator>copy_obj</operator>
      <operator>dilation_circle</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_region_points</operator>
      <operator>intensity</operator>
      <operator>local_max_sub_pix</operator>
      <operator>min_max_gray</operator>
      <operator>optical_flow_mg</operator>
      <operator>reduce_domain</operator>
      <operator>vector_field_length</operator>
      <operator>vector_field_to_real</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>optimize_aop.hdev</name>
      <desc>Optimize the automatic operator parallelization (aop)</desc>
      <path>hdevelop/System/Parallelization/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.general</method>
      <operator>get_aop_info</operator>
      <operator>optimize_aop</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>optimize_fft_speed.hdev</name>
      <desc>Optimize the runtime of the FFT operators</desc>
      <path>hdevelop/Filters/FFT/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.fft</method>
      <method>method.filter.general</method>
      <operator>convert_image_type</operator>
      <operator>count_seconds</operator>
      <operator>fft_generic</operator>
      <operator>optimize_fft_speed</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>orientation_region.hdev</name>
      <desc>Calculate the orientation of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.blob</method>
      <operator>disp_arrow</operator>
      <operator>orientation_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>p3i2.hdev</name>
      <desc>Use an ELTEC PC_EYE and p3i2 frame grabber board (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>p3i2_crop.hdev</name>
      <desc>Use an ELTEC PC_EYE and p3i2 frame grabber board (grabbing image parts of size 256x256)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>p3i2_parameters.hdev</name>
      <desc>Use an ELTEC PC_EYE and p3i2 frame grabber board (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>tuple_sort</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>p3i2_simple.hdev</name>
      <desc>Use an ELTEC PC_EYE and p3i2 frame grabber board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.1.3</newinversion>
   </example>
   <example>
      <name>paint_xld.hdev</name>
      <desc>Paint an XLD object into an image</desc>
      <path>hdevelop/Image/Manipulation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <operator>compose3</operator>
      <operator>copy_image</operator>
      <operator>paint_xld</operator>
      <operator>select_shape_xld</operator>
      <operator>threshold_sub_pix</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>particle.hdev</name>
      <desc>Extract particles of varying sizes</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.health</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.visual</method>
      <method>method.roi</method>
      <method>method.blob</method>
      <operator>area_center</operator>
      <operator>complement</operator>
      <operator>connection</operator>
      <operator>dilation_circle</operator>
      <operator>dyn_threshold</operator>
      <operator>get_mbutton</operator>
      <operator>intensity</operator>
      <operator>mean_image</operator>
      <operator>opening_circle</operator>
      <operator>select_region_point</operator>
      <operator>set_tposition</operator>
      <operator>threshold</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>partition_dynamic.hdev</name>
      <desc>Partition a region horizontally at "thin" locations into rectangles of different widths</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.regionproc</method>
      <operator>partition_dynamic</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>partition_rectangle.hdev</name>
      <desc>Partition a region into rectangles of equal size</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.regionproc</method>
      <operator>partition_rectangle</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>pattern.hdev</name>
      <desc>Apply online pattern matching using a gray value template</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.acqu</method>
      <method>method.match.gray</method>
      <operator>add_channels</operator>
      <operator>best_match</operator>
      <operator>clear_template</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>create_template</operator>
      <operator>dev_update_pc</operator>
      <operator>dev_update_time</operator>
      <operator>dev_update_var</operator>
      <operator>dev_update_window</operator>
      <operator>dilation_circle</operator>
      <operator>disp_rectangle1</operator>
      <operator>draw_rectangle1</operator>
      <operator>fast_match_mg</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>pcb_inspection.hdev</name>
      <desc>Find defects on a PCB using gray value morphology</desc>
      <path>hdevelop/Morphology/Gray-Values/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.blob</method>
      <operator>dyn_threshold</operator>
      <operator>gray_closing_shape</operator>
      <operator>gray_opening_shape</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>pceyecl.hdev</name>
      <desc>Use an ELTEC PC_EYE/CL frame grabber board (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>pceyecl_crop.hdev</name>
      <desc>Use an ELTEC PC_EYE/CL frame grabber board (grabbing image parts of size 256x256)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>pceyecl_parameters.hdev</name>
      <desc>Use an ELTEC PC_EYE/CL frame grabber board (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>tuple_sort</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>pceyecl_simple.hdev</name>
      <desc>Use an ELTEC PC_EYE/CL frame grabber board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>pdf417_bottle.hdev</name>
      <desc>Read 2d data codes of type PDF 417</desc>
      <path>hdevelop/Applications/Data-Codes/</path>
      <industry>industry.food</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>pdf417_default_settings.hdev</name>
      <desc>Read various 2d data codes of type PDF417</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>pdf417_optimized.hdev</name>
      <desc>Optimize parameters to read 2D data codes of type PDF417</desc>
      <path>hdevelop/Applications/Data-Codes/</path>
      <industry>industry.general</industry>
      <industry>industry.electr</industry>
      <industry>industry.semicon</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>count_seconds</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>pdf417_optimized_settings.hdev</name>
      <desc>Optimize parameters for reading various 2d data codes of type PDF417</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>pdf417_simple.hdev</name>
      <desc>Read 2D data codes of type PDF417</desc>
      <path>hdevelop/Applications/Data-Codes/</path>
      <industry>industry.general</industry>
      <industry>industry.electr</industry>
      <industry>industry.semicon</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>count_seconds</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_contour_xld</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>phot_stereo.hdev</name>
      <desc>Reconstruct a surface by illuminating it from three different directions</desc>
      <path>hdevelop/3D-Reconstruction/Photometric-Stereo/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <applarea>applarea.general</applarea>
      <method>method.fft</method>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <method>method.stereo.phot</method>
      <operator>compose3</operator>
      <operator>dev_set_paint</operator>
      <operator>optimize_fft_speed</operator>
      <operator>phot_stereo</operator>
      <operator>shade_height_field</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>phot_stereo_board.hdev</name>
      <desc>Reconstruct 3D SMD components using photometric stereo</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.filter.general</method>
      <method>method.blob</method>
      <method>method.fft</method>
      <operator>access_channel</operator>
      <operator>channels_to_image</operator>
      <operator>count_channels</operator>
      <operator>dev_set_paint</operator>
      <operator>mean_image</operator>
      <operator>optimize_fft_speed</operator>
      <operator>phot_stereo</operator>
      <operator>shade_height_field</operator>
      <operator>sub_image</operator>
      <operator>wait_seconds</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>phot_stereo_braille.hdev</name>
      <desc>Get 3D model of braille using photometric stereo</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.paper</industry>
      <industry>industry.print</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.filter.general</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>access_channel</operator>
      <operator>channels_to_image</operator>
      <operator>closing_rectangle1</operator>
      <operator>connection</operator>
      <operator>count_channels</operator>
      <operator>dev_display</operator>
      <operator>intensity</operator>
      <operator>intersection</operator>
      <operator>mean_image</operator>
      <operator>optimize_fft_speed</operator>
      <operator>partition_dynamic</operator>
      <operator>phot_stereo</operator>
      <operator>shade_height_field</operator>
      <operator>sub_image</operator>
      <operator>threshold</operator>
      <operator>wait_seconds</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>pixelink.hdev</name>
      <desc>Grab images from a PixeLink camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>pixelink_2cameras.hdev</name>
      <desc>Grab images from two PixeLink cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>pixelink_parameters.hdev</name>
      <desc>Query current parameter settings from a PixeLink camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>pixelink_simple.hdev</name>
      <desc>Simple usage of a PixeLink camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>plateaus.hdev</name>
      <desc>Detect gray value plateaus</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>plateaus</operator>
      <operator>smooth_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>plateaus_center.hdev</name>
      <desc>Detect the centers of gray value plateaus</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>plateaus_center</operator>
      <operator>smooth_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>pm_illu.hdev</name>
      <desc>Apply online pattern matching using a gray value template that adapts to illumination changes</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.acqu</method>
      <method>method.match.gray</method>
      <method>method.visual</method>
      <operator>clear_template</operator>
      <operator>count_seconds</operator>
      <operator>create_template</operator>
      <operator>dev_close_window</operator>
      <operator>dev_display</operator>
      <operator>dev_set_color</operator>
      <operator>dev_set_draw</operator>
      <operator>dev_set_line_width</operator>
      <operator>dev_set_window</operator>
      <operator>dev_update_pc</operator>
      <operator>dev_update_var</operator>
      <operator>dev_update_window</operator>
      <operator>else</operator>
      <operator>endif</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_image_pointer1</operator>
      <operator>if</operator>
      <operator>intensity</operator>
      <operator>reduce_domain</operator>
      <operator>set_color</operator>
      <operator>set_font</operator>
      <operator>set_offset_template</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>pm_illu_rectify.hdev</name>
      <desc>Find a rotated pattern using a gray value template and align the image to the pattern</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.acqu</method>
      <method>method.match.gray</method>
      <method>method.visual</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <method>method.error</method>
      <operator>affine_trans_image</operator>
      <operator>best_match_rot_mg</operator>
      <operator>clear_template</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>copy_obj</operator>
      <operator>count_seconds</operator>
      <operator>create_template_rot</operator>
      <operator>dev_open_window</operator>
      <operator>full_domain</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_mbutton</operator>
      <operator>get_mposition</operator>
      <operator>grab_image</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>intensity</operator>
      <operator>open_framegrabber</operator>
      <operator>set_offset_template</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>pm_illu_rot.hdev</name>
      <desc>Find a rotated pattern using a gray value template</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.acqu</method>
      <method>method.match.gray</method>
      <method>method.visual</method>
      <operator>best_match_rot_mg</operator>
      <operator>clear_template</operator>
      <operator>close_framegrabber</operator>
      <operator>create_template_rot</operator>
      <operator>dev_open_window</operator>
      <operator>gen_rectangle2</operator>
      <operator>grab_image</operator>
      <operator>intensity</operator>
      <operator>open_framegrabber</operator>
      <operator>set_color</operator>
      <operator>set_offset_template</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>pm_measure_board.hdev</name>
      <desc>Locate IC on a board and measure pin distances</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.inspect.complete</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <method>method.metrol</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <method>method.error</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_pixel</operator>
      <operator>clear_shape_model</operator>
      <operator>close_framegrabber</operator>
      <operator>close_measure</operator>
      <operator>create_shape_model</operator>
      <operator>dev_set_part</operator>
      <operator>dev_set_window</operator>
      <operator>disp_line</operator>
      <operator>find_shape_model</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>gen_rectangle1</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_mposition</operator>
      <operator>get_shape_model_contours</operator>
      <operator>grab_image</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>measure_pairs</operator>
      <operator>open_framegrabber</operator>
      <operator>wait_seconds</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>pm_multiple_dxf_models.hdev</name>
      <desc>Find multiple different models in a single pass using shape-based matching with contours from DXF files</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.file</method>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <method>method.tuple</method>
      <method>method.error</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>area_center_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>copy_obj</operator>
      <operator>count_seconds</operator>
      <operator>create_shape_model</operator>
      <operator>difference_closed_contours_xld</operator>
      <operator>find_shape_models</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>gen_image_const</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>get_domain</operator>
      <operator>get_mbutton</operator>
      <operator>get_mposition</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>inspect_shape_model</operator>
      <operator>paint_xld</operator>
      <operator>read_contour_xld_dxf</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape_xld</operator>
      <operator>union1</operator>
      <operator>union_adjacent_contours_xld</operator>
      <operator>vector_angle_to_rigid</operator>
      <operator>wait_seconds</operator>
      <operator>write_string</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>pm_multiple_models.hdev</name>
      <desc>Find multiple different models in a single pass using shape-based matching</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <method>method.error</method>
      <method>method.tuple</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>copy_obj</operator>
      <operator>create_shape_model</operator>
      <operator>find_shape_models</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>get_mbutton</operator>
      <operator>get_mposition</operator>
      <operator>get_shape_model_contours</operator>
      <operator>inspect_shape_model</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape_xld</operator>
      <operator>union1</operator>
      <operator>vector_angle_to_rigid</operator>
      <operator>wait_seconds</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>pm_world_plane.hdev</name>
      <desc>Recognize planar objects using shape-based matching in perspectively distorted images</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.metal</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.trafo.rectif</method>
      <method>method.calib</method>
      <method>method.visual</method>
      <method>method.match.shape</method>
      <method>method.trafo.wcoord</method>
      <method>method.trafo.geom</method>
      <method>method.xld</method>
      <method>method.error</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_point_3d</operator>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>clear_shape_model</operator>
      <operator>count_seconds</operator>
      <operator>create_shape_model</operator>
      <operator>disp_arrow</operator>
      <operator>disp_circle</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>find_shape_model</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_image_to_world_plane_map</operator>
      <operator>get_contour_xld</operator>
      <operator>get_mposition</operator>
      <operator>get_shape_model_contours</operator>
      <operator>map_image</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>select_shape_xld</operator>
      <operator>set_origin_pose</operator>
      <operator>set_tposition</operator>
      <operator>vector_angle_to_rigid</operator>
      <operator>wait_seconds</operator>
      <operator>write_string</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>points_foerstner.hdev</name>
      <desc>Extract interesting points using the Foerstner point detector</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <operator>gen_cross_contour_xld</operator>
      <operator>points_foerstner</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>points_foerstner_ellipses.hdev</name>
      <desc>Analyze the precision of extracted points using the covariance matrixes</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <operator>add_noise_white</operator>
      <operator>gen_image_const</operator>
      <operator>gen_image_proto</operator>
      <operator>intensity</operator>
      <operator>paint_xld</operator>
      <operator>points_foerstner</operator>
      <operator>tuple_concat</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>points_foerstner_rotation.hdev</name>
      <desc>Demonstrate robustness of the Foerstner point detector and its invariance against rotation</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_image</operator>
      <operator>gen_circle</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_invert</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>points_foerstner</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>points_harris.hdev</name>
      <desc>Extract interesting points using the Harris point detector</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <operator>points_harris</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>points_harris_binomial.hdev</name>
      <desc>Extract interesting points using the Harris Binomial point detector</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <operator>points_harris_binomial</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>points_harris_rotation.hdev</name>
      <desc>Demonstrate robustness of the Harris point detector and its invariance against rotation</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_image</operator>
      <operator>gen_circle</operator>
      <operator>get_system</operator>
      <operator>hom_mat2d_invert</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>points_harris</operator>
      <operator>set_system</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>points_lepetit.hdev</name>
      <desc>Extract interesting points using the Lepetit point detector</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <operator>points_lepetit</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>points_sojka.hdev</name>
      <desc>Extract interesting points using the Sojka corner detector</desc>
      <path>hdevelop/Filters/Points/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.points</method>
      <operator>points_sojka</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>port_switching_inspecta.hdev</name>
      <desc>Dynamically switch between ports</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>disp_image</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>set_part</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>pose_from_point_correspondences.hdev</name>
      <desc>Compare three methods to estimate a pose from point correspondences</desc>
      <path>hdevelop/Matching/Descriptor-Based/</path>
      <industry>industry.pack</industry>
      <industry>industry.food</industry>
      <applarea>applarea.recog.pos3d</applarea>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.match.descr</method>
      <method>method.poseestim</method>
      <operator>cam_par_to_cam_mat</operator>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>clear_descriptor_model</operator>
      <operator>create_calib_descriptor_model</operator>
      <operator>find_calib_descriptor_model</operator>
      <operator>get_descriptor_model_points</operator>
      <operator>hom_vector_to_proj_hom_mat2d</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>proj_hom_mat2d_to_pose</operator>
      <operator>project_3d_point</operator>
      <operator>vector_to_pose</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>pose_of_known_3d_object.hdev</name>
      <desc>Determine pose of object by extracting three or more reference points</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.tuple</method>
      <method>method.calib</method>
      <method>method.geom</method>
      <method>method.poseestim</method>
      <method>method.trafo.wcoord</method>
      <method>method.visual</method>
      <operator>affine_trans_point_3d</operator>
      <operator>area_center_xld</operator>
      <operator>difference</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>fit_ellipse_contour_xld</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_rotate_local</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>intersection_ll</operator>
      <operator>length_xld</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>select_shape_std</operator>
      <operator>set_origin_pose</operator>
      <operator>vector_to_pose</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>pouring.hdev</name>
      <desc>Segment an image by "pouring water" over it</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.classif</method>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>class_2dim_sup</operator>
      <operator>decompose3</operator>
      <operator>histo_2dim</operator>
      <operator>pouring</operator>
      <operator>scale_image_max</operator>
      <operator>smooth_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>prewitt_amp.hdev</name>
      <desc>Extract edges (amplitude) using the Prewitt operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>prewitt_amp</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>prewitt_dir.hdev</name>
      <desc>Extract edges (amplitude and direction) using the Prewitt operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>nonmax_suppression_dir</operator>
      <operator>prewitt_dir</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>print_check.hdev</name>
      <desc>Perform a typical print quality inspection using a variation model</desc>
      <path>hdevelop/Applications/Print-Inspection/</path>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <method>method.varmodel</method>
      <method>method.ocv</method>
      <method>method.visual</method>
      <method>method.match.shape</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <method>method.blob</method>
      <operator>affine_trans_image</operator>
      <operator>clear_shape_model</operator>
      <operator>clear_train_data_variation_model</operator>
      <operator>clear_variation_model</operator>
      <operator>compare_variation_model</operator>
      <operator>create_shape_model</operator>
      <operator>create_variation_model</operator>
      <operator>difference</operator>
      <operator>dilation_circle</operator>
      <operator>erosion_rectangle1</operator>
      <operator>fill_up</operator>
      <operator>find_shape_model</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>get_variation_model</operator>
      <operator>if</operator>
      <operator>inspect_shape_model</operator>
      <operator>prepare_variation_model</operator>
      <operator>set_font</operator>
      <operator>shape_trans</operator>
      <operator>train_variation_model</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>print_check_single_chars.hdev</name>
      <desc>Perform a typical print quality inspection using variation models for each character</desc>
      <path>hdevelop/Applications/Print-Inspection/</path>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <method>method.varmodel</method>
      <method>method.ocv</method>
      <method>method.visual</method>
      <method>method.match.shape</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <method>method.blob</method>
      <method>method.tuple</method>
      <operator>affine_trans_image_size</operator>
      <operator>affine_trans_region</operator>
      <operator>clear_shape_model</operator>
      <operator>clear_train_data_variation_model</operator>
      <operator>clear_variation_model</operator>
      <operator>compare_variation_model</operator>
      <operator>create_shape_model</operator>
      <operator>create_variation_model</operator>
      <operator>crop_part</operator>
      <operator>find_shape_models</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>get_domain</operator>
      <operator>get_variation_model</operator>
      <operator>inspect_shape_model</operator>
      <operator>move_region</operator>
      <operator>prepare_variation_model</operator>
      <operator>shape_trans</operator>
      <operator>smallest_rectangle1</operator>
      <operator>tile_images_offset</operator>
      <operator>train_variation_model</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>print_quality.hdev</name>
      <desc>Inspect the quality of the letter A in different images</desc>
      <path>hdevelop/Applications/Print-Inspection/</path>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <method>method.roi</method>
      <method>method.ocv</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>bin_threshold</operator>
      <operator>close_ocv</operator>
      <operator>create_ocv_proj</operator>
      <operator>do_ocv_simple</operator>
      <operator>traind_ocv_proj</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>print_quality_aimdpm_1_2006.hdev</name>
      <desc>Inspect print quality of 2D data codes using the AIM DPM-1-2006 Standard</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.print</applarea>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.acqu</method>
      <method>method.tuple</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>continue</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>fread_line</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_file</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>print_quality_isoiec15416.hdev</name>
      <desc>Inspect the print quality of bar codes (isoiec15416)</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.print</applarea>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <method>method.visual</method>
      <method>method.filter.general</method>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_param</operator>
      <operator>get_bar_code_result</operator>
      <operator>paint_gray</operator>
      <operator>set_bar_code_param</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>process_shape_model.hdev</name>
      <desc>Create a model ROI by modifying the result of inspect_shape_model</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <method>method.roi</method>
      <method>method.morphol</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clear_shape_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_shape_model</operator>
      <operator>fill_up</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>grab_image</operator>
      <operator>inspect_shape_model</operator>
      <operator>open_framegrabber</operator>
      <operator>opening_circle</operator>
      <operator>smallest_rectangle1</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>projection_pl.hdev</name>
      <desc>Project a point onto a line</desc>
      <path>hdevelop/Tools/Geometry/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.geom</method>
      <operator>disp_circle</operator>
      <operator>disp_line</operator>
      <operator>distance_ss</operator>
      <operator>projection_pl</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>projective_trans_contour_xld.hdev</name>
      <desc>Rotate an XLD contour in 3D using hom_mat3d_project and projective_trans_region</desc>
      <path>hdevelop/XLD/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <operator>clear_window</operator>
      <operator>close_window</operator>
      <operator>copy_rectangle</operator>
      <operator>disp_obj</operator>
      <operator>edges_sub_pix</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_project</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>hom_mat3d_translate</operator>
      <operator>open_window</operator>
      <operator>projective_trans_contour_xld</operator>
      <operator>set_color</operator>
      <operator>set_part</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>projective_trans_image.hdev</name>
      <desc>Apply projective transformations to an image</desc>
      <path>hdevelop/Filters/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <method>method.error</method>
      <method>method.visual</method>
      <operator>clear_window</operator>
      <operator>close_window</operator>
      <operator>copy_rectangle</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>disp_obj</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_project</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>hom_mat3d_translate</operator>
      <operator>open_window</operator>
      <operator>projective_trans_image</operator>
      <operator>set_part</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>projective_trans_image_reduced.hdev</name>
      <desc>Apply projective transformations to an image and its domain</desc>
      <path>hdevelop/Filters/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.roi</method>
      <method>method.visual</method>
      <operator>clear_window</operator>
      <operator>close_window</operator>
      <operator>copy_rectangle</operator>
      <operator>disp_obj</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_project</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>hom_mat3d_translate</operator>
      <operator>open_window</operator>
      <operator>projective_trans_image</operator>
      <operator>set_part</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>projective_trans_pixel.hdev</name>
      <desc>Apply a projective transformation to rotate an image in 3D</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.error</method>
      <method>method.filter.points</method>
      <method>method.trafo.geom</method>
      <method>method.functions</method>
      <method>method.visual</method>
      <operator>clear_window</operator>
      <operator>close_window</operator>
      <operator>copy_rectangle</operator>
      <operator>disp_cross</operator>
      <operator>disp_obj</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_project</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>hom_mat3d_translate</operator>
      <operator>open_window</operator>
      <operator>points_foerstner</operator>
      <operator>projective_trans_image</operator>
      <operator>projective_trans_pixel</operator>
      <operator>set_color</operator>
      <operator>set_part</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>projective_trans_point_2d.hdev</name>
      <desc>Apply a projective transformation to rotate images and points in 3D</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.error</method>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <operator>clear_window</operator>
      <operator>close_window</operator>
      <operator>copy_rectangle</operator>
      <operator>disp_obj</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_project</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>hom_mat3d_translate</operator>
      <operator>open_window</operator>
      <operator>projective_trans_image</operator>
      <operator>projective_trans_point_2d</operator>
      <operator>set_color</operator>
      <operator>set_part</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>projective_trans_region.hdev</name>
      <desc>Apply projective transformations to regions</desc>
      <path>hdevelop/Regions/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.regionproc</method>
      <method>method.visual</method>
      <operator>clear_window</operator>
      <operator>close_window</operator>
      <operator>copy_rectangle</operator>
      <operator>disp_obj</operator>
      <operator>hom_mat3d_identity</operator>
      <operator>hom_mat3d_project</operator>
      <operator>hom_mat3d_rotate</operator>
      <operator>hom_mat3d_translate</operator>
      <operator>open_window</operator>
      <operator>projective_trans_region</operator>
      <operator>set_color</operator>
      <operator>set_part</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>pylon.hdev</name>
      <desc>Grab images via the pylon interface (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>gen_struct_elements</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>pylon_crop.hdev</name>
      <desc>Grab images via the pylon interface (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>pylon_parameters.hdev</name>
      <desc>Grab images via the pylon interface (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>pylon_simple.hdev</name>
      <desc>Use the pylon interface (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.1.2</newinversion>
   </example>
   <example>
      <name>qrcode_default_settings.hdev</name>
      <desc>Read a 2d data code of type QR Code</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>qrcode_deformed.hdev</name>
      <desc>Read perspectively distorted and locally deformed QR Code symbols</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>real_to_vector_field</operator>
      <operator>set_data_code_2d_param</operator>
      <operator>unwarp_image_vector_field</operator>
      <operator>vector_field_to_real</operator>
      <operator>vector_to_proj_hom_mat2d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>qrcode_optimized.hdev</name>
      <desc>Optimize parameters to read 2D data codes of type QR Code</desc>
      <path>hdevelop/Applications/Data-Codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>count_seconds</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>qrcode_optimized_settings.hdev</name>
      <desc>Optimize parameters for reading a 2d data code of type QR Code</desc>
      <path>hdevelop/Identification/Data-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_objects</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>get_data_code_2d_results</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>qrcode_simple.hdev</name>
      <desc>Read 2D data codes of type QR Code</desc>
      <path>hdevelop/Applications/Data-Codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>close_framegrabber</operator>
      <operator>count_seconds</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_contour_xld</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_data_code_2d_param</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>query_aop_info.hdev</name>
      <desc>Query the automatic operator parallelization (aop) information</desc>
      <path>hdevelop/System/Parallelization/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.general</method>
      <operator>get_aop_info</operator>
      <operator>optimize_aop</operator>
      <operator>query_aop_info</operator>
      <operator>set_aop_info</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>radial_distortion.hdev</name>
      <desc>Eliminate radial distortions</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.edgeextr</method>
      <method>method.trafo.rectif</method>
      <method>method.xld</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_contours_xld</operator>
      <operator>change_radial_distortion_image</operator>
      <operator>gen_radial_distortion_map</operator>
      <operator>map_image</operator>
      <operator>rgb1_to_gray</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>radial_distortion_comparison.hdev</name>
      <desc>Compare results of camera calibration and radial distortion self-calibration</desc>
      <path>hdevelop/Calibration/Self-Calibration/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.funct1d</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>calibrate_cameras</operator>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_image</operator>
      <operator>clear_calib_data</operator>
      <operator>create_calib_data</operator>
      <operator>find_marks_and_pose</operator>
      <operator>get_calib_data</operator>
      <operator>radial_distortion_self_calibration</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>radial_distortion_self_calibration.hdev</name>
      <desc>Calibrate the radial distortion coefficient and the center of distortion</desc>
      <path>hdevelop/Calibration/Self-Calibration/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.edgeextr</method>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>change_radial_distortion_image</operator>
      <operator>radial_distortion_self_calibration</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>radiometric_self_calibration.hdev</name>
      <desc>Perform a radiometric self calibration of two different cameras</desc>
      <path>hdevelop/Calibration/Self-Calibration/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib.radiom</method>
      <operator>dev_set_lut</operator>
      <operator>histo_2dim</operator>
      <operator>radiometric_self_calibration</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>rank_image.hdev</name>
      <desc>Smooth an image with an arbitrary rank mask</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.morphol</method>
      <operator>rank_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>rank_n.hdev</name>
      <desc>Demonstrate how to use rank_n to compute a background image of a scene with moving objects</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <method>method.filter.general</method>
      <operator>elseif</operator>
      <operator>mean_n</operator>
      <operator>rank_n</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>rank_rect.hdev</name>
      <desc>Use a rank filter with rectangular masks for a more robust gray value morphology</desc>
      <path>hdevelop/Filters/Smoothing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.morphol</method>
      <operator>gray_opening_rect</operator>
      <operator>rank_rect</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>rank_region.hdev</name>
      <desc>Apply the rank operator for regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.filter.general</method>
      <operator>rank_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>read_2d_data_code_model.hdev</name>
      <desc>Read a 2D data code model from file</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>find_data_code_2d</operator>
      <operator>read_data_code_2d_model</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>read_region.hdev</name>
      <desc>Read region data from region file or b/w image</desc>
      <path>hdevelop/File/Region/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <method>method.regionproc</method>
      <operator>read_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>read_string.hdev</name>
      <desc>Prompt for user input in a text window</desc>
      <path>hdevelop/Graphics/Text/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <method>method.io</method>
      <operator>disp_arrow</operator>
      <operator>read_string</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>real_time_grabbing_falcon.hdev</name>
      <desc>Determine the achievable frame rates for grabbing and processing</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <method>method.filter.general</method>
      <operator>close_framegrabber</operator>
      <operator>count_seconds</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>new_line</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>sub_image</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>reconstruct_connection_rod_calib.hdev</name>
      <desc>Measure 3D objects with the calibrated sheet-of-light technique</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.calib</method>
      <method>method.laser</method>
      <operator>clear_sheet_of_light_model</operator>
      <operator>create_sheet_of_light_model</operator>
      <operator>get_line_of_sight</operator>
      <operator>get_object_model_3d_params</operator>
      <operator>get_sheet_of_light_result</operator>
      <operator>get_sheet_of_light_result_object_model_3d</operator>
      <operator>measure_profile_sheet_of_light</operator>
      <operator>project_object_model_3d</operator>
      <operator>set_sheet_of_light_param</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>reconstruct_connection_rod_uncalib.hdev</name>
      <desc>Measure 3D objects with the uncalibrated sheet-of-light technique</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.laser</method>
      <operator>clear_sheet_of_light_model</operator>
      <operator>create_sheet_of_light_model</operator>
      <operator>get_sheet_of_light_result</operator>
      <operator>measure_profile_sheet_of_light</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>reconstruct_points_stereo.hdev</name>
      <desc>Reconstruct 3D points using multi-view stereo</desc>
      <path>hdevelop/3D-Reconstruction/Multi-View/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.stereo.multi</method>
      <operator>axis_angle_to_quat</operator>
      <operator>clear_camera_setup_model</operator>
      <operator>clear_object_model_3d</operator>
      <operator>convert_pose_type</operator>
      <operator>create_camera_setup_model</operator>
      <operator>create_pose</operator>
      <operator>create_stereo_model</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>get_camera_setup_param</operator>
      <operator>get_line_of_sight</operator>
      <operator>get_object_model_3d_params</operator>
      <operator>global</operator>
      <operator>hom_mat3d_translate_local</operator>
      <operator>project_object_model_3d</operator>
      <operator>quat_to_hom_mat3d</operator>
      <operator>query_color</operator>
      <operator>read_camera_setup_model</operator>
      <operator>reconstruct_points_stereo</operator>
      <operator>set_camera_setup_cam_param</operator>
      <operator>xyz_to_object_model_3d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>rectangularity.hdev</name>
      <desc>Calculate the rectangularity of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <industry>industry.electr</industry>
      <industry>industry.semicon</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>affine_trans_region</operator>
      <operator>auto_threshold</operator>
      <operator>fill_up</operator>
      <operator>gen_image_const</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>move_region</operator>
      <operator>overpaint_region</operator>
      <operator>rectangularity</operator>
      <operator>union2</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>rectify_results.hdev</name>
      <desc>Rectify an image based on the matching results</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.roi</method>
      <method>method.match.shape</method>
      <method>method.trafo.align</method>
      <method>method.trafo.rectif</method>
      <method>method.visual</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_image</operator>
      <operator>affine_trans_region</operator>
      <operator>clear_shape_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_shape_model</operator>
      <operator>crop_rectangle1</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>grab_image</operator>
      <operator>hom_mat2d_invert</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>inspect_shape_model</operator>
      <operator>open_framegrabber</operator>
      <operator>smallest_rectangle1</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>regiongrowing.hdev</name>
      <desc>Segment an image with regiongrowing</desc>
      <path>hdevelop/Segmentation/Region-Growing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.regionproc</method>
      <method>method.segm</method>
      <method>method.morphol</method>
      <method>method.visual</method>
      <operator>closing_circle</operator>
      <operator>fill_up_shape</operator>
      <operator>median_image</operator>
      <operator>regiongrowing</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>regiongrowing_mean.hdev</name>
      <desc>Apply a regiongrowing using mean gray values</desc>
      <path>hdevelop/Segmentation/Region-Growing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.regionproc</method>
      <method>method.segm</method>
      <operator>median_image</operator>
      <operator>regiongrowing</operator>
      <operator>regiongrowing_mean</operator>
      <operator>shape_trans</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>regiongrowing_n.hdev</name>
      <desc>Apply a regiongrowing for multi-channel images</desc>
      <path>hdevelop/Segmentation/Region-Growing/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <method>method.color</method>
      <method>method.texture</method>
      <operator>compose3</operator>
      <operator>median_image</operator>
      <operator>regiongrowing_n</operator>
      <operator>texture_laws</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>regression.hdev</name>
      <desc>Approximate a function using an MLP</desc>
      <path>hdevelop/Classification/Neural-Nets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.classif</method>
      <method>method.visual</method>
      <method>method.numeric</method>
      <method>method.functions</method>
      <operator>add_sample_class_mlp</operator>
      <operator>clear_class_mlp</operator>
      <operator>create_class_mlp</operator>
      <operator>disp_cross</operator>
      <operator>disp_line</operator>
      <operator>evaluate_class_mlp</operator>
      <operator>train_class_mlp</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>remove_noise_region.hdev</name>
      <desc>Remove noise from a region</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.filter.general</method>
      <operator>hamming_change_region</operator>
      <operator>hamming_distance</operator>
      <operator>remove_noise_region</operator>
      <operator>union1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>remove_texture_fft.hdev</name>
      <desc>Remove a texture from an image</desc>
      <path>hdevelop/Applications/Texture-Inspection/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.texture</applarea>
      <method>method.trafo.geom</method>
      <method>method.fft</method>
      <method>method.morphol</method>
      <method>method.filter.general</method>
      <operator>binomial_filter</operator>
      <operator>fft_generic</operator>
      <operator>optimize_fft_speed</operator>
      <operator>power_real</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>resistor.hdev</name>
      <desc>Extract solder by depth using multiple focus levels</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.dff</method>
      <method>method.filter.general</method>
      <method>method.blob</method>
      <operator>access_channel</operator>
      <operator>channels_to_image</operator>
      <operator>connection</operator>
      <operator>depth_from_focus</operator>
      <operator>fill_up</operator>
      <operator>mean_image</operator>
      <operator>scale_image_max</operator>
      <operator>select_shape_std</operator>
      <operator>threshold</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>reuse_model.hdev</name>
      <desc>Store and reuse a shape model</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.metal</industry>
      <industry>industry.machine</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.roi</method>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <operator>clear_shape_model</operator>
      <operator>create_scaled_shape_model</operator>
      <operator>difference</operator>
      <operator>find_scaled_shape_model</operator>
      <operator>gen_circle</operator>
      <operator>get_domain</operator>
      <operator>get_shape_model_contours</operator>
      <operator>get_shape_model_origin</operator>
      <operator>get_shape_model_params</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>inspect_shape_model</operator>
      <operator>read_shape_model</operator>
      <operator>write_image</operator>
      <operator>write_shape_model</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>rft_generic.hdev</name>
      <desc>Filter images using a real-valued FFT</desc>
      <path>hdevelop/Filters/FFT/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.fft</method>
      <method>method.filter.general</method>
      <operator>convert_image_type</operator>
      <operator>convol_fft</operator>
      <operator>derivate_gauss</operator>
      <operator>gen_derivative_filter</operator>
      <operator>gen_gauss_filter</operator>
      <operator>intensity</operator>
      <operator>min_max_gray</operator>
      <operator>mult_image</operator>
      <operator>optimize_rft_speed</operator>
      <operator>rft_generic</operator>
      <operator>sub_image</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>rim.hdev</name>
      <desc>Inspect holes and characters on a rim</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.auto</industry>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.filter.general</method>
      <method>method.functions</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.align</method>
      <method>method.visual</method>
      <operator>affine_trans_image</operator>
      <operator>affine_trans_region</operator>
      <operator>closing_circle</operator>
      <operator>dev_set_part</operator>
      <operator>difference</operator>
      <operator>disp_ellipse</operator>
      <operator>dyn_threshold</operator>
      <operator>edges_sub_pix</operator>
      <operator>erosion_circle</operator>
      <operator>fit_ellipse_contour_xld</operator>
      <operator>gauss_image</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>intersection</operator>
      <operator>select_contours_xld</operator>
      <operator>select_shape</operator>
      <operator>set_tposition</operator>
      <operator>smallest_rectangle1</operator>
      <operator>smallest_rectangle2</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>rim_simple.hdev</name>
      <desc>Extract holes in a rim</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.auto</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>boundary</operator>
      <operator>connection</operator>
      <operator>disp_arrow</operator>
      <operator>fit_ellipse_contour_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape</operator>
      <operator>set_tposition</operator>
      <operator>sort_contours_xld</operator>
      <operator>threshold</operator>
      <operator>union1</operator>
      <operator>write_string</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>roads.hdev</name>
      <desc>Extract roads from aerial image</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.filter.edge</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>clip_contours_xld</operator>
      <operator>clip_region</operator>
      <operator>combine_roads_xld</operator>
      <operator>dev_display</operator>
      <operator>dev_set_line_width</operator>
      <operator>dev_set_part</operator>
      <operator>dev_set_window</operator>
      <operator>edges_image</operator>
      <operator>gen_contours_skeleton_xld</operator>
      <operator>gen_parallels_xld</operator>
      <operator>gen_polygons_xld</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>lines_gauss</operator>
      <operator>mod_parallels_xld</operator>
      <operator>reduce_domain</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>roberts.hdev</name>
      <desc>Extract edges using the Roberts filter</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>roberts</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>robinson_amp.hdev</name>
      <desc>Extract edges (amplitude) using the Robinson operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>robinson_amp</operator>
      <operator>skeleton</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>robinson_dir.hdev</name>
      <desc>Extract edges (amplitude and direction) using the Robinson operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>nonmax_suppression_dir</operator>
      <operator>robinson_dir</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>rotation_from_optical_flow.hdev</name>
      <desc>Estimate the center of rotation between succeeding images</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.motion</method>
      <method>method.filter.general</method>
      <method>method.regionproc</method>
      <method>method.trafo.geom</method>
      <operator>gen_grid_region</operator>
      <operator>hom_mat2d_to_affine_par</operator>
      <operator>optical_flow_mg</operator>
      <operator>sobel_amp</operator>
      <operator>vector_field_to_real</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>rotchar.hdev</name>
      <desc>Estimate small inclinations of text lines</desc>
      <path>hdevelop/Applications/OCR/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.trafo.align</method>
      <method>method.visual</method>
      <method>method.morphol</method>
      <method>method.ocr</method>
      <operator>bin_threshold</operator>
      <operator>elliptic_axis</operator>
      <operator>rotate_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>roundness.hdev</name>
      <desc>Calculate the roundness of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>roundness</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>rss14.hdev</name>
      <desc>Read bar codes of type RSS-14</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>disp_rectangle1</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>rss14_stacked.hdev</name>
      <desc>Read bar codes of type RSS-14 Stacked</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0.1</newinversion>
   </example>
   <example>
      <name>rss14_stacked_omnidir.hdev</name>
      <desc>Read bar codes of type RSS-14 Stacked Omnidirectional</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0.1</newinversion>
   </example>
   <example>
      <name>rss14truncated.hdev</name>
      <desc>Read bar codes of type RSS-14 Truncated and show the influence of false candidates</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>difference</operator>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_object</operator>
      <operator>get_domain</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>reduce_domain</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>rss_composite.hdev</name>
      <desc>Read bar codes of type RSS Composite</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>find_bar_code</operator>
      <operator>get_bar_code_result</operator>
      <operator>get_rgb</operator>
      <operator>set_bar_code_param</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>rssexpanded.hdev</name>
      <desc>Read a bar code of type RSS Expanded</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>rssexpanded_stacked.hdev</name>
      <desc>Read bar codes of type RSS Expanded Stacked</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0.1</newinversion>
   </example>
   <example>
      <name>rsslimited.hdev</name>
      <desc>Read a bar code of type RSS Limited</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>clear_bar_code_model</operator>
      <operator>create_bar_code_model</operator>
      <operator>find_bar_code</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>set_rgb</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>runlength_distribution.hdev</name>
      <desc>Analyze the runlength encoding of regions (metadata)</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.regionproc</method>
      <operator>runlength_distribution</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>runlength_features.hdev</name>
      <desc>Analyze the runlength encoding of regions (metadata)</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.regionproc</method>
      <operator>runlength_features</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>saddle_points_sub_pix.hdev</name>
      <desc>Detect saddle points with subpixel accuracy</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <industry>industry.auto</industry>
      <industry>industry.secure</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.segm</method>
      <operator>gen_cross_contour_xld</operator>
      <operator>rgb1_to_gray</operator>
      <operator>saddle_points_sub_pix</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>saperalt.hdev</name>
      <desc>Grab images from Coreco frame grabber boards (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>saperalt_2boards.hdev</name>
      <desc>Grab images from 2 Coreco frame grabber boards</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>disp_image</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>saperalt_2cameras.hdev</name>
      <desc>Grab images from 2 cameras connected to one Coreco frame grabber board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>disp_image</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>saperalt_crop.hdev</name>
      <desc>Grab images from Coreco frame grabber boards (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>saperalt_lut.hdev</name>
      <desc>Set a lookup table for a Coreco frame grabber board</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_lut</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_lut</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>saperalt_parameters.hdev</name>
      <desc>Grab images from Coreco frame grabber boards (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>saperalt_simple.hdev</name>
      <desc>Use a Coreco frame grabber board (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>7.0.3</newinversion>
   </example>
   <example>
      <name>saperalt_split_channel_mode.hdev</name>
      <desc>Grab images with &gt; 32767 lines by using the split channel mode</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>crop_part</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>scale_image_max.hdev</name>
      <desc>Spread gray values to maximum range (only byte image)</desc>
      <path>hdevelop/Filters/Enhancement/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.visual</method>
      <operator>scale_image_max</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>segment_ball_bond_lead_frame.hdev</name>
      <desc>Inspect ball bonds</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.segm</method>
      <method>method.regionproc</method>
      <operator>shape_trans</operator>
      <operator>skeleton</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>segment_citrus_fruits.hdev</name>
      <desc>Segment oranges and lemons from images using MLP-based color classification</desc>
      <path>solution_guide/classification/</path>
      <industry>industry.food</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.classif</method>
      <method>method.roi</method>
      <method>method.segm</method>
      <operator>add_samples_image_class_mlp</operator>
      <operator>classify_image_class_mlp</operator>
      <operator>clear_class_mlp</operator>
      <operator>create_class_mlp</operator>
      <operator>gen_empty_region</operator>
      <operator>train_class_mlp</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>segment_object_model_3d.hdev</name>
      <desc>Segment 2.5D data into cylindrical or spherical parts</desc>
      <path>hdevelop/3D-Tools/3D-Segmentation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object3d</applarea>
      <applarea>applarea.recog.pos3d</applarea>
      <method>method.fitting3d</method>
      <operator>copy_object_model_3d</operator>
      <operator>get_object_model_3d_params</operator>
      <operator>object_model_3d_to_xyz</operator>
      <operator>prepare_object_model_3d</operator>
      <operator>segment_object_model_3d</operator>
      <operator>xyz_to_object_model_3d</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>segment_wedge_bonds.hdev</name>
      <desc>Inspect wedge bonds</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.morphol</method>
      <method>method.trafo.geom</method>
      <method>method.match.shape</method>
      <method>method.xld</method>
      <operator>clip_end_points_contours_xld</operator>
      <operator>create_shape_model_xld</operator>
      <operator>elliptic_axis</operator>
      <operator>find_shape_model</operator>
      <operator>set_shape_model_metric</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>select_characters.hdev</name>
      <desc>Segment and select characters.</desc>
      <path>hdevelop/OCR/Segmentation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <operator>rotate_image</operator>
      <operator>segment_characters</operator>
      <operator>select_characters</operator>
      <operator>text_line_orientation</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>select_contours_xld.hdev</name>
      <desc>Select XLD contours based on various features</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.edgeextr</method>
      <method>method.io</method>
      <method>method.xld</method>
      <operator>disp_arrow</operator>
      <operator>disp_line</operator>
      <operator>draw_rectangle2</operator>
      <operator>edges_sub_pix</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_polygons_xld</operator>
      <operator>gen_rectangle2</operator>
      <operator>regress_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>split_contours_xld</operator>
      <operator>union_straight_contours_xld</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>select_region_point.hdev</name>
      <desc>Select regions that contain a given pixel</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>get_mbutton</operator>
      <operator>select_region_point</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>select_region_spatial.hdev</name>
      <desc>Select regions that are left (right, above, below) of a reference region</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>gauss_image</operator>
      <operator>select_region_spatial</operator>
      <operator>select_shape</operator>
      <operator>watersheds</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>select_shape.hdev</name>
      <desc>Select regions by shape features</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>select_shape</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>select_shape_proto.hdev</name>
      <desc>Select regions that have a certain relation to a reference region</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>select_shape_proto</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>select_shape_std.hdev</name>
      <desc>Select the largest region or regions similiar to a rectangle</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>select_shape_std</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>select_shape_xld.hdev</name>
      <desc>Select XLD contours based on various features</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <method>method.regionproc</method>
      <method>method.xld</method>
      <operator>crop_part</operator>
      <operator>select_shape_xld</operator>
      <operator>threshold_sub_pix</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>select_xld_point.hdev</name>
      <desc>Select XLD contours containing a specified point</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>select_xld_point</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>sentech.hdev</name>
      <desc>Grab images from a Sentech USB 2.0 camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>sentech_parameters.hdev</name>
      <desc>Query parameter settings from a Sentech USB 2.0 camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>sentech_simple.hdev</name>
      <desc>Grab images from a Sentech USB 2.0 camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>sentech_trigger.hdev</name>
      <desc>Use the Sentech USB 2.0 camera (external trigger)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>sequence_diff.hdev</name>
      <desc>Monitor traffic by comparing two successive images</desc>
      <path>hdevelop/Applications/Position-Recognition-2D/</path>
      <industry>industry.secure</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.morphol</method>
      <method>method.blob</method>
      <method>method.motion</method>
      <operator>dyn_threshold</operator>
      <operator>read_image</operator>
      <operator>shape_trans</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>serial.hdev</name>
      <desc>Use serial ports in HALCON</desc>
      <path>hdevelop/System/Serial/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.comm</method>
      <operator>close_serial</operator>
      <operator>open_serial</operator>
      <operator>read_serial</operator>
      <operator>set_serial_param</operator>
      <operator>write_serial</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>set_bar_code_param_specific.hdev</name>
      <desc>Set and query parameters for specific bar code types</desc>
      <path>hdevelop/Identification/Bar-Code/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.barcode</applarea>
      <method>method.barcode</method>
      <operator>get_bar_code_param_specific</operator>
      <operator>set_bar_code_param_specific</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>set_grayval.hdev</name>
      <desc>Paint single pixels into an image</desc>
      <path>hdevelop/Image/Manipulation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <operator>set_grayval</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>set_offset_template.hdev</name>
      <desc>Adapt to illumination changes by adding a gray value offset to a template</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <method>method.trafo.geom</method>
      <operator>best_match_mg</operator>
      <operator>clear_template</operator>
      <operator>create_template</operator>
      <operator>fill_interlace</operator>
      <operator>scale_image</operator>
      <operator>set_offset_template</operator>
      <operator>set_reference_template</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>set_paint_3d_plot.hdev</name>
      <desc>Demonstrate how to use the mode '3d_plot' of the operator 'set_paint'</desc>
      <path>hdevelop/Graphics/Parameters/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.dff</method>
      <method>method.visual</method>
      <operator>access_channel</operator>
      <operator>channels_to_image</operator>
      <operator>compose2</operator>
      <operator>depth_from_focus</operator>
      <operator>get_mposition_sub_pix</operator>
      <operator>get_window_param</operator>
      <operator>select_grayvalues_from_channels</operator>
      <operator>set_paint</operator>
      <operator>set_window_param</operator>
      <operator>tuple_find</operator>
      <operator>unproject_coordinates</operator>
      <operator>update_window_pose</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>set_reference_template.hdev</name>
      <desc>Define the reference position for a gray value template</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_image</operator>
      <operator>best_match_mg</operator>
      <operator>clear_template</operator>
      <operator>create_template</operator>
      <operator>fill_interlace</operator>
      <operator>gnuplot_close</operator>
      <operator>gnuplot_open_file</operator>
      <operator>gnuplot_plot_ctrl</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>set_reference_template</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>set_shape_model_min_contrast.hdev</name>
      <desc>Change the minimum contrast used for a shape-based matching</desc>
      <path>hdevelop/Matching/Shape-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.visual</method>
      <operator>add_noise_white</operator>
      <operator>clear_shape_model</operator>
      <operator>create_shape_model</operator>
      <operator>determine_shape_model_params</operator>
      <operator>edges_image</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>set_shape_model_param</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>set_shape_model_timeout.hdev</name>
      <desc>Demonstrate how to use the timeout mechanism for shape-based matching</desc>
      <path>hdevelop/Matching/Shape-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.morphol</method>
      <method>method.roi</method>
      <method>method.visual</method>
      <operator>catch</operator>
      <operator>clear_shape_model</operator>
      <operator>create_shape_model</operator>
      <operator>dev_get_exception_data</operator>
      <operator>endtry</operator>
      <operator>find_shape_model</operator>
      <operator>get_shape_model_contours</operator>
      <operator>set_shape_model_param</operator>
      <operator>throw</operator>
      <operator>try</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>set_tposition.hdev</name>
      <desc>Set the text cursor position in the output window</desc>
      <path>hdevelop/Graphics/Text/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <method>method.io</method>
      <operator>disp_arrow</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>shape_trans.hdev</name>
      <desc>Transform the shape of a region</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <operator>shape_trans</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>shape_trans_xld.hdev</name>
      <desc>Transform contours into various standard shapes</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <method>method.regionproc</method>
      <method>method.xld</method>
      <operator>crop_part</operator>
      <operator>shape_trans_xld</operator>
      <operator>threshold_sub_pix</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>shock_filter.hdev</name>
      <desc>Sharpen a defocused image using a shock filter</desc>
      <path>hdevelop/Filters/Enhancement/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <operator>fill_interlace</operator>
      <operator>shock_filter</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>sick-3dcamera.hdev</name>
      <desc>Grab images via a SICK-3DCamera interface (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>sick-3dcamera_calibration.hdev</name>
      <desc>Use the SICK-3DCamera interface (calibration and rectification)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_data</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>sick-3dcamera_components.hdev</name>
      <desc>Grab images with the SICK-3DCamera interface (different parameter sets)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_data</operator>
      <operator>grab_data_async</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>scale_image_max</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>sick-3dcamera_parameters.hdev</name>
      <desc>Grab images via the SICK-3DCamera interface (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>sick-3dcamera_simple.hdev</name>
      <desc>Use the SICK-3DCamera interface (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>scale_image_max</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>siliconsoftware.hdev</name>
      <desc>Grab images using a SiliconSoftware interface (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>siliconsoftware_continuous.hdev</name>
      <desc>Use a SiliconSoftware interface (continuous grabbing) (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>siliconsoftware_gige_vision.hdev</name>
      <desc>Grab images using a Silicon Software GigE Vision interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>siliconsoftware_parameters.hdev</name>
      <desc>Grab images using a SiliconSoftware interface (query parameter settings)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>siliconsoftware_simple.hdev</name>
      <desc>Use a SiliconSoftware interface (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>9.0.2</newinversion>
   </example>
   <example>
      <name>siliconsoftware_smartapplets.hdev</name>
      <desc>Grab images using Silicon Software SmartApplets</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>simple_reading.hdev</name>
      <desc>Read characters using a trained font</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.blob</method>
      <method>method.ocr</method>
      <method>method.visual</method>
      <operator>clear_ocr_class_mlp</operator>
      <operator>do_ocr_single_class_mlp</operator>
      <operator>read_ocr_class_mlp</operator>
      <operator>set_font</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>simple_training.hdev</name>
      <desc>Train an OCR font from a training file</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.classif</method>
      <method>method.ocr</method>
      <operator>clear_ocr_class_mlp</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>read_ocr_trainf_names</operator>
      <operator>trainf_ocr_class_mlp</operator>
      <operator>write_ocr_class_mlp</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>simultaneous_grabbing_inspecta.hdev</name>
      <desc>Grab simultaneously from two cameras</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>count_channels</operator>
      <operator>decompose2</operator>
      <operator>grab_image</operator>
      <operator>image_to_channels</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_concat</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>sine.hdev</name>
      <desc>Compute and draw the sine from 0 to 3*PI</desc>
      <path>hdevelop/Manuals/HDevelop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <method>method.functions</method>
      <method>method.numeric</method>
      <method>method.visual</method>
      <operator>assign</operator>
      <operator>disp_line</operator>
   </example>
   <example>
      <name>skeleton.hdev</name>
      <desc>Compute the skeleton of a region</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.morphol</method>
      <operator>skeleton</operator>
      <operator>sobel_amp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>smallest_circle.hdev</name>
      <desc>Calculate the smallest surrounding circle of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>gen_circle</operator>
      <operator>smallest_circle</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>smallest_rectangle1.hdev</name>
      <desc>Calculate the smallest surrounding axis-parallel rectangle of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>gen_rectangle1</operator>
      <operator>smallest_rectangle1</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>smallest_rectangle2.hdev</name>
      <desc>Calculate the smallest surrounding rectangle of regions</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>gen_rectangle2</operator>
      <operator>smallest_rectangle2</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>sobel_amp.hdev</name>
      <desc>Extract edges (amplitude) using the Sobel operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>skeleton</operator>
      <operator>sobel_amp</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>sobel_dir.hdev</name>
      <desc>Extract edges (amplitude and direction) using the Sobel operator</desc>
      <path>hdevelop/Filters/Edges/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.edge</method>
      <operator>nonmax_suppression_dir</operator>
      <operator>sobel_dir</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>sock_recv.hdev</name>
      <desc>Receive image and tuple data via socket connection</desc>
      <path>hdevelop/System/Sockets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.error</method>
      <method>method.comm</method>
      <operator>close_socket</operator>
      <operator>convert_image_type</operator>
      <operator>dev_error_var</operator>
      <operator>dev_set_check</operator>
      <operator>get_next_socket_data_type</operator>
      <operator>open_socket_accept</operator>
      <operator>receive_image</operator>
      <operator>receive_region</operator>
      <operator>receive_tuple</operator>
      <operator>send_image</operator>
      <operator>send_region</operator>
      <operator>send_tuple</operator>
      <operator>socket_accept_connect</operator>
      <operator>wait_seconds</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>sock_send.hdev</name>
      <desc>Send image and tuple data via socket connection</desc>
      <path>hdevelop/System/Sockets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.comm</method>
      <operator>close_socket</operator>
      <operator>convert_image_type</operator>
      <operator>open_socket_connect</operator>
      <operator>query_all_colors</operator>
      <operator>receive_image</operator>
      <operator>receive_region</operator>
      <operator>receive_tuple</operator>
      <operator>send_image</operator>
      <operator>send_region</operator>
      <operator>send_tuple</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>sonyxci2.hdev</name>
      <desc>Grab images from a Sony XCI-V100/C and Sony XCI-SX100/C camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>sonyxci2_parameters.hdev</name>
      <desc>Query current parameter settings from a Sony XCI-V100/C and Sony XCI-SX100/C camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>sonyxci2_simple.hdev</name>
      <desc>Simple usage of a Sony XCI-V100/C and Sony XCI-SX100/C camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>sort_contours_xld.hdev</name>
      <desc>Sort XLD contours by spatial position</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>edges_sub_pix</operator>
      <operator>select_contours_xld</operator>
      <operator>set_line_style</operator>
      <operator>sort_contours_xld</operator>
      <operator>zoom_image_factor</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>sort_region.hdev</name>
      <desc>Sort regions by their spatial position</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.regionproc</method>
      <operator>area_center</operator>
      <operator>connection</operator>
      <operator>dyn_threshold</operator>
      <operator>mean_image</operator>
      <operator>sort_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>spatial_relation.hdev</name>
      <desc>Calculate the pose relation of regions (left, right, above, below)</desc>
      <path>hdevelop/Regions/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.feat</method>
      <operator>spatial_relation</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>split_skeleton_lines.hdev</name>
      <desc>Split and approximate one pixel wide, non-branching regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.morphol</method>
      <operator>connection</operator>
      <operator>difference</operator>
      <operator>disp_line</operator>
      <operator>junctions_skeleton</operator>
      <operator>skeleton</operator>
      <operator>split_skeleton_lines</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>split_skeleton_lines2.hdev</name>
      <desc>Split and approximate one pixel wide, non-branching regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.morphol</method>
      <operator>edges_image</operator>
      <operator>junctions_skeleton</operator>
      <operator>skeleton</operator>
      <operator>split_skeleton_lines</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>split_skeleton_region.hdev</name>
      <desc>Split one pixel wide, non-branching regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.morphol</method>
      <operator>junctions_skeleton</operator>
      <operator>skeleton</operator>
      <operator>split_skeleton_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>split_skeleton_region2.hdev</name>
      <desc>Split one pixel wide, non-branching regions</desc>
      <path>hdevelop/Regions/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regionproc</method>
      <method>method.morphol</method>
      <operator>edges_image</operator>
      <operator>junctions_skeleton</operator>
      <operator>skeleton</operator>
      <operator>split_skeleton_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>stamp_catalogue.hdev</name>
      <desc>Segment and group characters on a cluttered page</desc>
      <path>hdevelop/Applications/Print-Inspection/</path>
      <industry>industry.print</industry>
      <applarea>applarea.ident.ocr</applarea>
      <applarea>applarea.inspect.print</applarea>
      <method>method.visual</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>dev_open_window</operator>
      <operator>read_image</operator>
      <operator>shape_trans</operator>
      <operator>top_hat</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>stationary_camera_self_calibration.hdev</name>
      <desc>Perform a self-calibration of a camera</desc>
      <path>hdevelop/Calibration/Self-Calibration/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.match.point</method>
      <method>method.mosaic</method>
      <method>method.filter.points</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.align</method>
      <operator>calibrate_cameras</operator>
      <operator>cam_mat_to_cam_par</operator>
      <operator>change_radial_distortion_cam_par</operator>
      <operator>clear_calib_data</operator>
      <operator>create_calib_data</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_bundle_adjusted_mosaic</operator>
      <operator>gen_radial_distortion_map</operator>
      <operator>gen_spherical_mosaic</operator>
      <operator>hom_mat2d_compose</operator>
      <operator>hom_mat2d_invert</operator>
      <operator>map_image</operator>
      <operator>points_foerstner</operator>
      <operator>proj_match_points_ransac</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <operator>stationary_camera_self_calibration</operator>
      <operator>tile_images_offset</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>statistics_points_xld.hdev</name>
      <desc>Analyze 2D statistical data using *_points_xld operators</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <method>method.tuple</method>
      <method>method.roi</method>
      <method>method.ocr</method>
      <method>method.visual</method>
      <operator>area_center_points_xld</operator>
      <operator>bin_threshold</operator>
      <operator>clear_ocr_class_mlp</operator>
      <operator>connection</operator>
      <operator>create_ocr_class_mlp</operator>
      <operator>dilation_circle</operator>
      <operator>disp_arrow</operator>
      <operator>disp_line</operator>
      <operator>disp_rectangle1</operator>
      <operator>elliptic_axis_points_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_features_ocr_class_mlp</operator>
      <operator>get_part</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>intersection</operator>
      <operator>moments_points_xld</operator>
      <operator>read_ocr_trainf_names</operator>
      <operator>reduce_domain</operator>
      <operator>set_rgb</operator>
      <operator>smallest_rectangle1_xld</operator>
      <operator>sort_region</operator>
      <operator>tuple_concat</operator>
      <operator>tuple_sort_index</operator>
      <operator>write_ocr_trainf</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>stereo_calibration.hdev</name>
      <desc>Calibrate a stereo system</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.calib</method>
      <method>method.stereo</method>
      <method>method.trafo.rectif</method>
      <method>method.visual</method>
      <operator>affine_trans_point_3d</operator>
      <operator>calibrate_cameras</operator>
      <operator>clear_calib_data</operator>
      <operator>create_calib_data</operator>
      <operator>disp_image</operator>
      <operator>disp_region</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>get_calib_data</operator>
      <operator>map_image</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>set_calib_data_calib_object</operator>
      <operator>set_calib_data_cam_param</operator>
      <operator>set_calib_data_observ_points</operator>
      <operator>write_cam_par</operator>
      <operator>write_pose</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>stop.hdev</name>
      <desc>Stop the execution in a loop to view intermediate results</desc>
      <path>hdevelop/Control/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <operator>regiongrowing</operator>
      <operator>stop</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>string.hdev</name>
      <desc>Format strings and numbers</desc>
      <path>hdevelop/Manuals/HDevelop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.string</method>
      <method>method.io</method>
      <operator>assign</operator>
   </example>
   <example>
      <name>sub_image.hdev</name>
      <desc>Subtract two images</desc>
      <path>hdevelop/Filters/Arithmetic/</path>
      <industry>industry.general</industry>
      <industry>industry.auto</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.filter.general</method>
      <method>method.motion</method>
      <operator>convert_image_type</operator>
      <operator>sub_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>surface_scratch.hdev</name>
      <desc>Detect scratches on a surface via local thresholding and morphology</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.auto</industry>
      <industry>industry.metal</industry>
      <industry>industry.optic</industry>
      <applarea>applarea.inspect.surface</applarea>
      <method>method.filter.edge</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <operator>connection</operator>
      <operator>dilation_circle</operator>
      <operator>dyn_threshold</operator>
      <operator>mean_image</operator>
      <operator>select_shape</operator>
      <operator>skeleton</operator>
      <operator>union1</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>svcam-gige.hdev</name>
      <desc>Grab images via an SVCam-GigE interface (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>svcam-gige_crop.hdev</name>
      <desc>Grab images from an SVCam-GigE interface (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>svcam-gige_parameters.hdev</name>
      <desc>Query parameter settings from an SVCam-GigE interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>svcam-gige_simple.hdev</name>
      <desc>Use an SVCam-GigE interface (simple)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>svcam-gige_trigger.hdev</name>
      <desc>Use an SVCam-GigE interface (external trigger)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.4</newinversion>
   </example>
   <example>
      <name>symm_difference_closed_contours_xld.hdev</name>
      <desc>Demonstrate the use of symm_difference_closed_contours_xld</desc>
      <path>hdevelop/XLD/Sets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>symm_difference_closed_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>symm_difference_closed_polygons_xld.hdev</name>
      <desc>Demonstrate the use of symm_difference_closed_polygons_xld</desc>
      <path>hdevelop/XLD/Sets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>gen_polygons_xld</operator>
      <operator>symm_difference_closed_polygons_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>symmetry.hdev</name>
      <desc>Analyze symmetry in horizontal direction</desc>
      <path>hdevelop/Filters/Misc/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.color</method>
      <method>method.morphol</method>
      <operator>clip_region</operator>
      <operator>closing_circle</operator>
      <operator>decompose3</operator>
      <operator>expand_line</operator>
      <operator>gauss_image</operator>
      <operator>opening_rectangle1</operator>
      <operator>rank_region</operator>
      <operator>smallest_rectangle1</operator>
      <operator>symmetry</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>synthetic_circle.hdev</name>
      <desc>Use a synthetic model (circle) to search for capacitors on a board</desc>
      <path>solution_guide/matching/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.shape</method>
      <method>method.visual</method>
      <operator>clear_shape_model</operator>
      <operator>close_framegrabber</operator>
      <operator>create_scaled_shape_model</operator>
      <operator>find_scaled_shape_model</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>gen_image_const</operator>
      <operator>get_shape_model_contours</operator>
      <operator>grab_image</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>inspect_shape_model</operator>
      <operator>open_framegrabber</operator>
      <operator>paint_xld</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>test_self_intersection_xld.hdev</name>
      <desc>Test if an XLD contour intersects itself</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>close_contours_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>test_self_intersection_xld</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>test_xld_point.hdev</name>
      <desc>Test if an XLD contour contains a specific point</desc>
      <path>hdevelop/XLD/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>test_xld_point</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>text_line_orientation.hdev</name>
      <desc>Detect and correct the orientation of text_lines.</desc>
      <path>hdevelop/OCR/Segmentation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.visual</method>
      <method>method.regionproc</method>
      <operator>closing_circle</operator>
      <operator>connection</operator>
      <operator>dilation_rectangle1</operator>
      <operator>dots_image</operator>
      <operator>gen_rectangle1</operator>
      <operator>intensity</operator>
      <operator>intersection</operator>
      <operator>rotate_image</operator>
      <operator>scale_image_max</operator>
      <operator>select_shape</operator>
      <operator>smallest_rectangle1</operator>
      <operator>text_line_orientation</operator>
      <operator>threshold</operator>
      <operator>union1</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>text_line_slant.hdev</name>
      <desc>Show how to correct slanted characters for an OCR segmentation</desc>
      <path>hdevelop/OCR/Segmentation/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.ocr</method>
      <method>method.visual</method>
      <method>method.regionproc</method>
      <operator>affine_trans_image</operator>
      <operator>connection</operator>
      <operator>copy_obj</operator>
      <operator>dilation_rectangle1</operator>
      <operator>erosion_circle</operator>
      <operator>gen_rectangle1</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_slant</operator>
      <operator>intersection</operator>
      <operator>partition_dynamic</operator>
      <operator>smallest_rectangle1</operator>
      <operator>text_line_slant</operator>
      <operator>threshold</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>texture.hdev</name>
      <desc>Find textured areas (trees and bushes)</desc>
      <path>hdevelop/Applications/Object-Recognition-2D/</path>
      <industry>industry.photo</industry>
      <applarea>applarea.recog.object2d</applarea>
      <method>method.texture</method>
      <method>method.classif</method>
      <method>method.morphol</method>
      <method>method.blob</method>
      <operator>class_2dim_sup</operator>
      <operator>closing_circle</operator>
      <operator>dilation_circle</operator>
      <operator>draw_region</operator>
      <operator>fill_up</operator>
      <operator>gen_rectangle1</operator>
      <operator>histo_2dim</operator>
      <operator>median_separate</operator>
      <operator>opening_circle</operator>
      <operator>texture_laws</operator>
      <operator>threshold</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>texture_laws.hdev</name>
      <desc>Filter an image using a Laws texture filter</desc>
      <path>hdevelop/Filters/Texture/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.texture</method>
      <method>method.filter.general</method>
      <method>method.classif</method>
      <method>method.io</method>
      <method>method.morphol</method>
      <operator>class_2dim_sup</operator>
      <operator>closing_circle</operator>
      <operator>dilation_circle</operator>
      <operator>draw_region</operator>
      <operator>fill_up</operator>
      <operator>histo_2dim</operator>
      <operator>median_separate</operator>
      <operator>opening_circle</operator>
      <operator>texture_laws</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>texture_laws_mlp.hdev</name>
      <desc>Segment an image based on texture using an MLP pixel classifier</desc>
      <path>hdevelop/Filters/Texture/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.texture</method>
      <method>method.filter.general</method>
      <method>method.classif</method>
      <operator>add_samples_image_class_mlp</operator>
      <operator>classify_image_class_lut</operator>
      <operator>classify_image_class_mlp</operator>
      <operator>clear_class_lut</operator>
      <operator>clear_class_mlp</operator>
      <operator>compose6</operator>
      <operator>create_class_lut_mlp</operator>
      <operator>create_class_mlp</operator>
      <operator>mean_image</operator>
      <operator>texture_laws</operator>
      <operator>train_class_mlp</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>threshold.hdev</name>
      <desc>Select gray values lying within an interval</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.blob</method>
      <method>method.feat</method>
      <method>method.segm</method>
      <operator>connection</operator>
      <operator>fill_interlace</operator>
      <operator>select_shape</operator>
      <operator>threshold</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>threshold_sub_pix.hdev</name>
      <desc>Extract level crossings from an image with subpixel accuracy</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>fit_circle_contour_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>segment_contours_xld</operator>
      <operator>threshold_sub_pix</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>tile_channels.hdev</name>
      <desc>Tile multiple image channels into a large image</desc>
      <path>hdevelop/Image/Format/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <operator>append_channel</operator>
      <operator>tile_channels</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>tile_channels_reduced.hdev</name>
      <desc>Tile regions of multiple image channels into a large image</desc>
      <path>hdevelop/Image/Format/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <operator>append_channel</operator>
      <operator>tile_channels</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>tile_images.hdev</name>
      <desc>Tile multiple images into a large image</desc>
      <path>hdevelop/Image/Format/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <method>method.filter.general</method>
      <operator>mirror_image</operator>
      <operator>scale_image</operator>
      <operator>tile_images</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>tile_images_offset.hdev</name>
      <desc>Tile multiple images into a large image at predefined offsets</desc>
      <path>hdevelop/Image/Format/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <operator>crop_rectangle1</operator>
      <operator>sub_image</operator>
      <operator>tile_images_offset</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>tile_images_reduced.hdev</name>
      <desc>Tile regions of multiple images into a large image</desc>
      <path>hdevelop/Image/Format/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <method>method.filter.general</method>
      <operator>mirror_image</operator>
      <operator>rectangle1_domain</operator>
      <operator>scale_image</operator>
      <operator>tile_images</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>tile_images_size.hdev</name>
      <desc>Tile regions of multiple images into a large image</desc>
      <path>hdevelop/Image/Format/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.image</method>
      <operator>crop_rectangle1</operator>
      <operator>tile_images</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>track_engine_part.hdev</name>
      <desc>Track an engine part using perspective deformable matching</desc>
      <path>hdevelop/Applications/Robot-Vision/</path>
      <industry>industry.auto</industry>
      <applarea>applarea.robotvis</applarea>
      <method>method.match.deform</method>
      <method>method.trafo.geom</method>
      <method>method.trafo.wcoord</method>
      <operator>affine_trans_point_3d</operator>
      <operator>clear_deformable_model</operator>
      <operator>create_planar_uncalib_deformable_model</operator>
      <operator>find_planar_uncalib_deformable_model</operator>
      <operator>get_deformable_model_contours</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>projective_trans_contour_xld</operator>
      <operator>projective_trans_image</operator>
      <operator>projective_trans_pixel</operator>
      <operator>set_deformable_model_origin</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>track_wires_on_chip.hdev</name>
      <desc>Track wire bondings on a chip</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.xld</method>
      <operator>crop_contours_xld</operator>
      <operator>length_xld</operator>
      <operator>orientation_points_xld</operator>
      <operator>smooth_contours_xld</operator>
      <operator>union_collinear_contours_ext_xld</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>train_characters_ocr.hdev</name>
      <desc>Train a new SVM font for a small set of characters</desc>
      <path>solution_guide/classification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.ocr</applarea>
      <method>method.classif</method>
      <method>method.ocr</method>
      <method>method.blob</method>
      <operator>append_ocr_trainf</operator>
      <operator>clear_all_ocr_class_svm</operator>
      <operator>create_ocr_class_svm</operator>
      <operator>read_ocr_trainf</operator>
      <operator>reduce_ocr_class_svm</operator>
      <operator>trainf_ocr_class_svm</operator>
      <operator>write_ocr_class_svm</operator>
      <operator>write_ocr_trainf</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>transform_image_into_wcs.hdev</name>
      <desc>Determine pose and scale for rectified image</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.rectif</method>
      <method>method.visual</method>
      <operator>contour_to_world_plane_xld</operator>
      <operator>distance_pp</operator>
      <operator>full_domain</operator>
      <operator>gen_contour_region_xld</operator>
      <operator>gen_image_to_world_plane_map</operator>
      <operator>get_domain</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>image_to_world_plane</operator>
      <operator>map_image</operator>
      <operator>set_origin_pose</operator>
      <operator>smallest_rectangle1_xld</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>transpose_region.hdev</name>
      <desc>Reflect regions about a point</desc>
      <path>hdevelop/Regions/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>draw_region</operator>
      <operator>transpose_region</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>try_catch.hdev</name>
      <desc>Demonstrate the usage of the exception handling in HDevelop</desc>
      <path>hdevelop/Control/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <operator>catch</operator>
      <operator>continue</operator>
      <operator>dev_get_exception_data</operator>
      <operator>dev_set_preferences</operator>
      <operator>endtry</operator>
      <operator>throw</operator>
      <operator>try</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>tuple.hdev</name>
      <desc>Work with tuples</desc>
      <path>hdevelop/Manuals/HDevelop/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.tuple</method>
      <operator>assign</operator>
   </example>
   <example>
      <name>tuple_histo_range.hdev</name>
      <desc>Calculate the value distribution of a tuple in a user-defined value range</desc>
      <path>hdevelop/Tuple/Features/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.tuple</method>
      <operator>tuple_histo_range</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>tuple_regexp.hdev</name>
      <desc>Demonstrate the use of regular expressions</desc>
      <path>hdevelop/Tuple/String-Operations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.regexp</method>
      <operator>list_files</operator>
      <operator>tuple_environment</operator>
      <operator>tuple_regexp_match</operator>
      <operator>tuple_regexp_replace</operator>
      <operator>tuple_regexp_select</operator>
      <operator>tuple_regexp_test</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>twain_interactive.hdev</name>
      <desc>Use the HALCON TWAIN interface in interactive mode</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>twain_manual.hdev</name>
      <desc>Use the HALCON TWAIN interface with a scanner in manual mode</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.0</newinversion>
   </example>
   <example>
      <name>two_camera_calibration.hdev</name>
      <desc>Perform high precision mosaicking using a special calibration object</desc>
      <path>solution_guide/3d_vision/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.calib</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.wcoord</method>
      <method>method.filter.general</method>
      <method>method.morphol</method>
      <method>method.metrol</method>
      <method>method.xld</method>
      <method>method.visual</method>
      <operator>break</operator>
      <operator>caltab_points</operator>
      <operator>close_measure</operator>
      <operator>closing</operator>
      <operator>dev_set_lut</operator>
      <operator>disp_image</operator>
      <operator>dyn_threshold</operator>
      <operator>elliptic_axis</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>full_domain</operator>
      <operator>gen_image_to_world_plane_map</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>hom_mat3d_compose</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>hom_mat3d_translate_local</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>map_image</operator>
      <operator>mean_image</operator>
      <operator>measure_pairs</operator>
      <operator>min_max_gray</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>select_shape</operator>
      <operator>select_shape_std</operator>
      <operator>set_origin_pose</operator>
      <operator>smallest_rectangle2</operator>
      <operator>tile_images</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>ueye.hdev</name>
      <desc>Grab images from an IDS uEye camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>ueye_2cameras.hdev</name>
      <desc>Grab images from two IDS uEye cameras simultaneously</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>disp_image</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>ueye_crop.hdev</name>
      <desc>Grab images from a IDS uEye camera (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>wait_seconds</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>ueye_parameters.hdev</name>
      <desc>Query parameter settings from a IDS uEye camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>tuple_sort</operator>
      <operator>wait_seconds</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>ueye_simple.hdev</name>
      <desc>Grab images from a IDS uEye camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>ueye_trigger.hdev</name>
      <desc>Grab images from a IDS uEye camera (external triggering)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.1.4</newinversion>
   </example>
   <example>
      <name>uncalib_stereo_boxes.hdev</name>
      <desc>Determine the surfaces of boxes using uncalibrated binocular stereo.</desc>
      <path>hdevelop/3D-Reconstruction/Binocular-Stereo/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.3D</applarea>
      <method>method.stereo</method>
      <operator>affine_trans_point_3d</operator>
      <operator>binocular_distance</operator>
      <operator>gen_binocular_rectification_map</operator>
      <operator>gen_contour_region_xld</operator>
      <operator>get_domain</operator>
      <operator>hom_mat3d_invert</operator>
      <operator>map_image</operator>
      <operator>match_rel_pose_ransac</operator>
      <operator>opening</operator>
      <operator>points_foerstner</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>set_tposition</operator>
      <operator>test_xld_point</operator>
      <operator>tuple_find</operator>
      <operator>tuple_sort_index</operator>
      <operator>vector_to_rel_pose</operator>
      <operator>write_string</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>union2_closed_contours_xld.hdev</name>
      <desc>Demonstrate the use of union2_closed_contours_xld</desc>
      <path>hdevelop/XLD/Sets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_contour_global_attrib_xld</operator>
      <operator>union2_closed_contours_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>union2_closed_polygons_xld.hdev</name>
      <desc>Demonstrate the use of union2_closed_contours_xld</desc>
      <path>hdevelop/XLD/Sets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.xld</method>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>gen_polygons_xld</operator>
      <operator>union2_closed_polygons_xld</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>union_cocircular_contours_xld.hdev</name>
      <desc>Merge contours belonging to the same circle</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>edges_sub_pix</operator>
      <operator>select_contours_xld</operator>
      <operator>union_cocircular_contours_xld</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>union_contours_xld.hdev</name>
      <desc>Find pads on a die by connecting collinear line segments</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.semicon</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>edges_sub_pix</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_rectangle2</operator>
      <operator>rectangle1_domain</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>smallest_rectangle2_xld</operator>
      <operator>union_adjacent_contours_xld</operator>
      <operator>union_collinear_contours_xld</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>union_cotangential_contours_xld.hdev</name>
      <desc>Merge contours according to their local curvature</desc>
      <path>hdevelop/XLD/Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <operator>gen_contour_nurbs_xld</operator>
      <operator>union_cotangential_contours_xld</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>var_threshold.hdev</name>
      <desc>Segment an image using a local threshold calculated from local mean and standard deviation</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.feat</method>
      <method>method.segm</method>
      <operator>close_framegrabber</operator>
      <operator>connection</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>var_threshold</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>variation_model_illumination.hdev</name>
      <desc>Inspect print using variation model with varying illumination</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <method>method.match.shape</method>
      <method>method.varmodel</method>
      <method>method.trafo.align</method>
      <operator>affine_trans_image</operator>
      <operator>affine_trans_region</operator>
      <operator>area_center</operator>
      <operator>bin_threshold</operator>
      <operator>clear_shape_model</operator>
      <operator>clear_variation_model</operator>
      <operator>closing_circle</operator>
      <operator>compare_ext_variation_model</operator>
      <operator>create_scaled_shape_model</operator>
      <operator>create_variation_model</operator>
      <operator>elliptic_axis</operator>
      <operator>find_scaled_shape_model</operator>
      <operator>gen_circle</operator>
      <operator>gen_ellipse</operator>
      <operator>gen_rectangle1</operator>
      <operator>get_shape_model_contours</operator>
      <operator>hom_mat2d_invert</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>intensity</operator>
      <operator>intersection</operator>
      <operator>opening_circle</operator>
      <operator>prepare_direct_variation_model</operator>
      <operator>scale_image</operator>
      <operator>set_color</operator>
      <operator>smallest_circle</operator>
      <operator>smallest_rectangle1</operator>
      <operator>sobel_amp</operator>
      <operator>tuple_strlen</operator>
      <operator>union1</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>variation_model_single.hdev</name>
      <desc>Inspect print using variation model with single reference image</desc>
      <path>solution_guide/basics/</path>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <method>method.match.shape</method>
      <method>method.varmodel</method>
      <method>method.filter.general</method>
      <method>method.trafo.align</method>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_image</operator>
      <operator>area_center</operator>
      <operator>binomial_filter</operator>
      <operator>clear_shape_model</operator>
      <operator>clear_variation_model</operator>
      <operator>compare_ext_variation_model</operator>
      <operator>connection</operator>
      <operator>create_shape_model</operator>
      <operator>create_variation_model</operator>
      <operator>difference</operator>
      <operator>dilation_circle</operator>
      <operator>disp_rectangle1</operator>
      <operator>edges_sub_pix</operator>
      <operator>fill_up</operator>
      <operator>find_shape_model</operator>
      <operator>gen_image_const</operator>
      <operator>gen_region_polygon</operator>
      <operator>get_contour_xld</operator>
      <operator>get_draw</operator>
      <operator>get_rgb</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>paint_region</operator>
      <operator>prepare_direct_variation_model</operator>
      <operator>set_font</operator>
      <operator>set_rgb</operator>
      <operator>shape_trans</operator>
      <operator>threshold</operator>
      <operator>vector_angle_to_rigid</operator>
      <operator>zoom_image_size</operator>
      <newinversion>8.0</newinversion>
   </example>
   <example>
      <name>vector_angle_to_rigid.hdev</name>
      <desc>Match a pattern and display the normalized image</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.io</method>
      <method>method.roi</method>
      <method>method.trafo.align</method>
      <method>method.trafo.rectif</method>
      <method>method.match.gray</method>
      <method>method.error</method>
      <operator>affine_trans_image</operator>
      <operator>best_match_rot_mg</operator>
      <operator>clear_template</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>copy_obj</operator>
      <operator>create_template_rot</operator>
      <operator>disp_image</operator>
      <operator>disp_region</operator>
      <operator>draw_rectangle2</operator>
      <operator>full_domain</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_mbutton</operator>
      <operator>get_mposition</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>info_framegrabber</operator>
      <operator>intensity</operator>
      <operator>open_framegrabber</operator>
      <operator>set_offset_template</operator>
      <operator>vector_angle_to_rigid</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>vector_to_proj_hom_mat2d.hdev</name>
      <desc>Rectify image of stadium to simulate overhead view</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.color</method>
      <method>method.segm</method>
      <method>method.roi</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.geom</method>
      <method>method.visual</method>
      <operator>boundary</operator>
      <operator>decompose3</operator>
      <operator>dev_set_window_extents</operator>
      <operator>dilation_rectangle1</operator>
      <operator>edges_color_sub_pix</operator>
      <operator>fit_line_contour_xld</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>intersection_ll</operator>
      <operator>projective_trans_contour_xld</operator>
      <operator>projective_trans_image_size</operator>
      <operator>regress_contours_xld</operator>
      <operator>segment_contours_xld</operator>
      <operator>select_contours_xld</operator>
      <operator>select_shape_std</operator>
      <operator>select_shape_xld</operator>
      <operator>shape_trans</operator>
      <operator>trans_from_rgb</operator>
      <operator>union_collinear_contours_xld</operator>
      <operator>vector_to_proj_hom_mat2d</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>vector_to_rigid.hdev</name>
      <desc>Approximate a rigid tranformation from point correspondences</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.numeric</method>
      <method>method.visual</method>
      <operator>add_noise_white_contour_xld</operator>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_point_2d</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>vector_to_rigid</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>vector_to_similarity.hdev</name>
      <desc>Approximate a similarity tranformation from point correspondences</desc>
      <path>hdevelop/Transformations/2D-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.numeric</method>
      <method>method.visual</method>
      <operator>add_noise_white_contour_xld</operator>
      <operator>affine_trans_contour_xld</operator>
      <operator>affine_trans_point_2d</operator>
      <operator>gen_contour_polygon_xld</operator>
      <operator>gen_ellipse_contour_xld</operator>
      <operator>get_contour_xld</operator>
      <operator>hom_mat2d_identity</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>hom_mat2d_scale</operator>
      <operator>hom_mat2d_translate</operator>
      <operator>vector_to_similarity</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>vessel.hdev</name>
      <desc>Extract and measure a blood vessel</desc>
      <path>hdevelop/Applications/Measuring-2D/</path>
      <industry>industry.health</industry>
      <applarea>applarea.measure.2D</applarea>
      <method>method.texture</method>
      <method>method.visual</method>
      <method>method.filter.general</method>
      <method>method.blob</method>
      <method>method.functions</method>
      <method>method.numeric</method>
      <operator>bin_threshold</operator>
      <operator>clip_region</operator>
      <operator>dev_display</operator>
      <operator>gen_region_line</operator>
      <operator>gen_region_points</operator>
      <operator>get_region_contour</operator>
      <operator>get_region_points</operator>
      <operator>intersection</operator>
      <operator>mean_image</operator>
      <operator>smallest_rectangle1</operator>
      <operator>texture_laws</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>visualize_3d_feature_space.hdev</name>
      <desc>Visualize a 3D feature space interactively</desc>
      <path>solution_guide/classification/</path>
      <industry>industry.general</industry>
      <applarea>applarea.inspect.texture</applarea>
      <applarea>applarea.general</applarea>
      <method>method.texture</method>
      <method>method.visual</method>
      <method>method.trafo.geom</method>
      <operator>affine_trans_point_3d</operator>
      <operator>compose6</operator>
      <operator>principal_comp</operator>
      <operator>project_3d_point</operator>
      <operator>texture_laws</operator>
      <newinversion>9.0</newinversion>
   </example>
   <example>
      <name>volatile_grabbing_falcon.hdev</name>
      <desc>Show the effect of volatile grabbing</desc>
      <path>solution_guide/image_acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>grab_image</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>vrmareascan3d_parameters.hdev</name>
      <desc>Query parameter settings from an VRmAreaScan3D interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>vrmareascan3d_simple.hdev</name>
      <desc>Grab images from an VRmAreaScan3D interface</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_data</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>10.0</newinversion>
   </example>
   <example>
      <name>vrmusbcam.hdev</name>
      <desc>Grab images from a VRmagic USB camera (performance evaluation)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>access_channel</operator>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>grab_image_async</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>vrmusbcam_2cameras.hdev</name>
      <desc>Grab images from two VRmagic USB cameras</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>count_channels</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>grab_image_start</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>vrmusbcam_crop.hdev</name>
      <desc>Grab images from a VRmagic USB camera (image cropping)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <operator>wait_seconds</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>vrmusbcam_parameters.hdev</name>
      <desc>Query current parameter settings from a VRmagic USB camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>get_framegrabber_param</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>tuple_sort</operator>
      <operator>tuple_uniq</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>vrmusbcam_simple.hdev</name>
      <desc>Simple usage of a VRmagic USB camera</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>vrmusbcam_trigger.hdev</name>
      <desc>Grab images from a VRmagic USB camera (external triggering)</desc>
      <path>hdevelop/Image/Acquisition/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.acqu</method>
      <operator>close_all_framegrabbers</operator>
      <operator>close_framegrabber</operator>
      <operator>get_framegrabber_param</operator>
      <operator>grab_image_async</operator>
      <operator>info_framegrabber</operator>
      <operator>open_framegrabber</operator>
      <operator>set_framegrabber_param</operator>
      <newinversion>8.0.2</newinversion>
   </example>
   <example>
      <name>watersheds.hdev</name>
      <desc>Extract watersheds and basins from an image</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>gauss_image</operator>
      <operator>invert_image</operator>
      <operator>watersheds</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>watersheds_threshold.hdev</name>
      <desc>Extract watersheds basins using a threshold</desc>
      <path>hdevelop/Segmentation/Topography/</path>
      <industry>industry.general</industry>
      <industry>industry.health</industry>
      <industry>industry.pharm</industry>
      <industry>industry.print</industry>
      <applarea>applarea.general</applarea>
      <method>method.segm</method>
      <operator>class_2dim_sup</operator>
      <operator>convert_image_type</operator>
      <operator>decompose3</operator>
      <operator>dev_set_lut</operator>
      <operator>distance_transform</operator>
      <operator>gauss_image</operator>
      <operator>histo_2dim</operator>
      <operator>intersection</operator>
      <operator>invert_image</operator>
      <operator>mean_image</operator>
      <operator>scale_image_max</operator>
      <operator>trans_from_rgb</operator>
      <operator>watersheds</operator>
      <operator>watersheds_threshold</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>while.hdev</name>
      <desc>Use a while loop to provide interaction until right mouse button is clicked</desc>
      <path>hdevelop/Control/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.controlstruct</method>
      <operator>endwhile</operator>
      <operator>while</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>world_coordinates_line_scan.hdev</name>
      <desc>Measure distances between the pitch lines of a caliper rule in a line scan image using camera calibration</desc>
      <path>hdevelop/Applications/Measuring-3D/</path>
      <industry>industry.general</industry>
      <applarea>applarea.measure.2D</applarea>
      <applarea>applarea.measure.3D</applarea>
      <method>method.calib</method>
      <method>method.io</method>
      <method>method.edgeextr</method>
      <method>method.xld</method>
      <method>method.tuple</method>
      <method>method.metrol</method>
      <method>method.roi</method>
      <method>method.trafo.rectif</method>
      <method>method.trafo.wcoord</method>
      <method>method.visual</method>
      <operator>affine_trans_point_3d</operator>
      <operator>caltab_points</operator>
      <operator>camera_calibration</operator>
      <operator>close_measure</operator>
      <operator>contour_to_world_plane_xld</operator>
      <operator>disp_arrow</operator>
      <operator>disp_caltab</operator>
      <operator>disp_rectangle1</operator>
      <operator>distance_pp</operator>
      <operator>draw_rectangle2</operator>
      <operator>edges_sub_pix</operator>
      <operator>find_caltab</operator>
      <operator>find_marks_and_pose</operator>
      <operator>fit_circle_contour_xld</operator>
      <operator>fit_ellipse_contour_xld</operator>
      <operator>full_domain</operator>
      <operator>gen_contour_region_xld</operator>
      <operator>gen_cross_contour_xld</operator>
      <operator>gen_image_to_world_plane_map</operator>
      <operator>gen_measure_rectangle2</operator>
      <operator>gen_rectangle2</operator>
      <operator>get_domain</operator>
      <operator>get_draw</operator>
      <operator>get_part</operator>
      <operator>get_string_extents</operator>
      <operator>get_window_extents</operator>
      <operator>hom_mat3d_rotate_local</operator>
      <operator>hom_mat3d_to_pose</operator>
      <operator>hom_mat3d_translate_local</operator>
      <operator>image_points_to_world_plane</operator>
      <operator>image_to_world_plane</operator>
      <operator>map_image</operator>
      <operator>measure_pairs</operator>
      <operator>pose_to_hom_mat3d</operator>
      <operator>project_3d_point</operator>
      <operator>reduce_domain</operator>
      <operator>select_shape_xld</operator>
      <operator>set_origin_pose</operator>
      <operator>sim_caltab</operator>
      <operator>smallest_rectangle1_xld</operator>
      <operator>tuple_sort_index</operator>
      <newinversion>7.1</newinversion>
   </example>
   <example>
      <name>write_2d_data_code_model.hdev</name>
      <desc>Train a 2D data code model and write it into a file</desc>
      <path>solution_guide/2d_data_codes/</path>
      <industry>industry.general</industry>
      <applarea>applarea.ident.datacode</applarea>
      <method>method.datacode</method>
      <method>method.visual</method>
      <operator>clear_data_code_2d_model</operator>
      <operator>create_data_code_2d_model</operator>
      <operator>dev_close_inspect_ctrl</operator>
      <operator>dev_inspect_ctrl</operator>
      <operator>find_data_code_2d</operator>
      <operator>get_data_code_2d_param</operator>
      <operator>query_data_code_2d_params</operator>
      <operator>write_data_code_2d_model</operator>
      <newinversion>7.1.1</newinversion>
   </example>
   <example>
      <name>write_image.hdev</name>
      <desc>Write an image to file</desc>
      <path>hdevelop/File/Images/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <operator>sobel_amp</operator>
      <operator>write_image</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>write_ocv.hdev</name>
      <desc>Write OCV data to file (and read it in again)</desc>
      <path>hdevelop/Inspection/OCV/</path>
      <industry>industry.print</industry>
      <applarea>applarea.inspect.print</applarea>
      <method>method.ocv</method>
      <operator>close_ocv</operator>
      <operator>create_ocv_proj</operator>
      <operator>read_ocv</operator>
      <operator>shape_trans</operator>
      <operator>traind_ocv_proj</operator>
      <operator>write_ocv</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>write_region.hdev</name>
      <desc>Write region data to file</desc>
      <path>hdevelop/File/Region/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.file</method>
      <method>method.regionproc</method>
      <operator>write_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>write_string.hdev</name>
      <desc>Write text in a window</desc>
      <path>hdevelop/Graphics/Text/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.visual</method>
      <method>method.io</method>
      <operator>new_line</operator>
      <operator>set_tposition</operator>
      <operator>write_string</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>write_template.hdev</name>
      <desc>Read and write gray value template files</desc>
      <path>hdevelop/Matching/Gray-Value-Based/</path>
      <industry>industry.general</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <method>method.match.gray</method>
      <method>method.trafo.geom</method>
      <method>method.file</method>
      <operator>affine_trans_image</operator>
      <operator>best_match_rot_mg</operator>
      <operator>clear_template</operator>
      <operator>create_template_rot</operator>
      <operator>disp_arrow</operator>
      <operator>fill_interlace</operator>
      <operator>hom_mat2d_rotate</operator>
      <operator>read_template</operator>
      <operator>write_template</operator>
      <newinversion>6.1</newinversion>
   </example>
   <example>
      <name>xing.hdev</name>
      <desc>Monitor traffic using background estimation with postprocessing</desc>
      <path>hdevelop/Applications/Security-Systems/</path>
      <industry>industry.transp</industry>
      <industry>industry.secure</industry>
      <applarea>applarea.recog.object2d</applarea>
      <applarea>applarea.security</applarea>
      <method>method.visual</method>
      <method>method.blob</method>
      <method>method.morphol</method>
      <method>method.motion</method>
      <operator>clip_region</operator>
      <operator>close_bg_esti</operator>
      <operator>complement</operator>
      <operator>create_bg_esti</operator>
      <operator>dilation_rectangle1</operator>
      <operator>give_bg_esti</operator>
      <operator>read_region</operator>
      <operator>run_bg_esti</operator>
      <operator>select_gray</operator>
      <operator>shape_trans</operator>
      <operator>update_bg_esti</operator>
      <operator>zoom_image_factor</operator>
      <operator>zoom_region</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>xing_simple.hdev</name>
      <desc>Monitor traffic using background estimation</desc>
      <path>hdevelop/Applications/Security-Systems/</path>
      <industry>industry.transp</industry>
      <industry>industry.secure</industry>
      <applarea>applarea.recog.pos2d</applarea>
      <applarea>applarea.security</applarea>
      <method>method.visual</method>
      <method>method.blob</method>
      <method>method.motion</method>
      <operator>close_bg_esti</operator>
      <operator>connection</operator>
      <operator>create_bg_esti</operator>
      <operator>give_bg_esti</operator>
      <operator>intersection</operator>
      <operator>read_region</operator>
      <operator>run_bg_esti</operator>
      <operator>shape_trans</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>xld_recv.hdev</name>
      <desc>Receive an XLD contour via socket connection</desc>
      <path>hdevelop/System/Sockets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.comm</method>
      <operator>close_socket</operator>
      <operator>gen_parallels_xld</operator>
      <operator>get_next_socket_data_type</operator>
      <operator>open_socket_accept</operator>
      <operator>receive_image</operator>
      <operator>receive_xld</operator>
      <operator>send_xld</operator>
      <operator>socket_accept_connect</operator>
      <operator>split_contours_xld</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>xld_send.hdev</name>
      <desc>Send an XLD contour via socket connection</desc>
      <path>hdevelop/System/Sockets/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.comm</method>
      <operator>close_socket</operator>
      <operator>gen_polygons_xld</operator>
      <operator>mod_parallels_xld</operator>
      <operator>open_socket_connect</operator>
      <operator>receive_xld</operator>
      <operator>send_image</operator>
      <operator>send_xld</operator>
      <operator>split_contours_xld</operator>
      <newinversion>5.2.3</newinversion>
   </example>
   <example>
      <name>zero_crossing.hdev</name>
      <desc>Detect zero crossings in an image</desc>
      <path>hdevelop/Segmentation/Threshold/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.filter.general</method>
      <method>method.segm</method>
      <operator>diff_of_gauss</operator>
      <operator>zero_crossing</operator>
      <newinversion>7.0</newinversion>
   </example>
   <example>
      <name>zoom_region.hdev</name>
      <desc>Scale regions</desc>
      <path>hdevelop/Regions/Geometric-Transformations/</path>
      <industry>industry.general</industry>
      <applarea>applarea.general</applarea>
      <method>method.trafo.geom</method>
      <method>method.regionproc</method>
      <method>method.io</method>
      <operator>draw_region</operator>
      <operator>zoom_region</operator>
      <newinversion>7.0</newinversion>
   </example>
</examples>